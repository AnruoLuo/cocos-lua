//
// generated by tolua
//
#include "xgame/lua-bindings/lua_xgame.h"
#include "xgame/xfilesystem.h"
#include "xgame/xlua.h"
#include "xgame/xlua-conv.h"
#include "xgame/xpreferences.h"
#include "xgame/xruntime.h"
#include "xgame/xtimer.h"

static int _kernel_runtime_clearStorage(lua_State *L)
{
    lua_settop(L, 0);
    
    xgame::runtime::clearStorage();
    
    return 0;
}

static int _kernel_runtime_launch(lua_State *L)
{
    lua_settop(L, 1);
    const std::string & arg1 = (std::string)xluacv_to_std_string(L, 1);
    bool ret = (bool)xgame::runtime::launch(arg1);
    xluacv_push_bool(L, ret);
    return 1;
}

static int _kernel_runtime_restart(lua_State *L)
{
    lua_settop(L, 0);
    
    bool ret = (bool)xgame::runtime::restart();
    xluacv_push_bool(L, ret);
    return 1;
}

static int _kernel_runtime_isRestarting(lua_State *L)
{
    lua_settop(L, 0);
    
    bool ret = (bool)xgame::runtime::isRestarting();
    xluacv_push_bool(L, ret);
    return 1;
}

static int _kernel_runtime_getPackageName(lua_State *L)
{
    lua_settop(L, 0);
    
    const std::string ret = (std::string)xgame::runtime::getPackageName();
    xluacv_push_std_string(L, ret);
    return 1;
}

static int luaopen_kernel_runtime(lua_State *L)
{
    xluacls_class(L, "kernel.runtime", nullptr);
    xluacls_setfunc(L, "clearStorage", _kernel_runtime_clearStorage);
    xluacls_setfunc(L, "launch", _kernel_runtime_launch);
    xluacls_setfunc(L, "restart", _kernel_runtime_restart);
    xluacls_setfunc(L, "isRestarting", _kernel_runtime_isRestarting);
    xluacls_setfunc(L, "getPackageName", _kernel_runtime_getPackageName);
    
    lua_newtable(L);
    luaL_setmetatable(L, "kernel.runtime");
    
    return 1;
}
static int luaopen_kernel_filesytem(lua_State *L)
{
    xluacls_class(L, "kernel.filesytem", nullptr);
    
    
    lua_newtable(L);
    luaL_setmetatable(L, "kernel.filesytem");
    
    return 1;
}
int luaopen_xgame(lua_State *L)
{
    xlua_require(L, "kernel.runtime", luaopen_kernel_runtime);
    xlua_require(L, "kernel.filesytem", luaopen_kernel_filesytem);
    return 0;
}