//
// generated by olua
//
#include "xgame/lua-bindings/lua_cocos2d_ui.h"
#include "xgame/lua-bindings/lua_conv.h"
#include "xgame/lua-bindings/lua_conv_manual.h"
#include "xgame/xlua.h"
#include "xgame/xruntime.h"
#include "olua/olua.hpp"
#include "cocos2d.h"
#include "ui/CocosGUI.h"



static int luaopen_cocos2d_ui_Widget_FocusDirection(lua_State *L)
{
    oluacls_class(L, "ccui.Widget.FocusDirection", nullptr);
    oluacls_const_integer(L, "LEFT", (lua_Integer)cocos2d::ui::Widget::FocusDirection::LEFT);
    oluacls_const_integer(L, "RIGHT", (lua_Integer)cocos2d::ui::Widget::FocusDirection::RIGHT);
    oluacls_const_integer(L, "UP", (lua_Integer)cocos2d::ui::Widget::FocusDirection::UP);
    oluacls_const_integer(L, "DOWN", (lua_Integer)cocos2d::ui::Widget::FocusDirection::DOWN);

    olua_registerluatype<cocos2d::ui::Widget::FocusDirection>(L, "ccui.Widget.FocusDirection");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Widget_PositionType(lua_State *L)
{
    oluacls_class(L, "ccui.Widget.PositionType", nullptr);
    oluacls_const_integer(L, "ABSOLUTE", (lua_Integer)cocos2d::ui::Widget::PositionType::ABSOLUTE);
    oluacls_const_integer(L, "PERCENT", (lua_Integer)cocos2d::ui::Widget::PositionType::PERCENT);

    olua_registerluatype<cocos2d::ui::Widget::PositionType>(L, "ccui.Widget.PositionType");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Widget_SizeType(lua_State *L)
{
    oluacls_class(L, "ccui.Widget.SizeType", nullptr);
    oluacls_const_integer(L, "ABSOLUTE", (lua_Integer)cocos2d::ui::Widget::SizeType::ABSOLUTE);
    oluacls_const_integer(L, "PERCENT", (lua_Integer)cocos2d::ui::Widget::SizeType::PERCENT);

    olua_registerluatype<cocos2d::ui::Widget::SizeType>(L, "ccui.Widget.SizeType");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Widget_TouchEventType(lua_State *L)
{
    oluacls_class(L, "ccui.Widget.TouchEventType", nullptr);
    oluacls_const_integer(L, "BEGAN", (lua_Integer)cocos2d::ui::Widget::TouchEventType::BEGAN);
    oluacls_const_integer(L, "MOVED", (lua_Integer)cocos2d::ui::Widget::TouchEventType::MOVED);
    oluacls_const_integer(L, "ENDED", (lua_Integer)cocos2d::ui::Widget::TouchEventType::ENDED);
    oluacls_const_integer(L, "CANCELED", (lua_Integer)cocos2d::ui::Widget::TouchEventType::CANCELED);

    olua_registerluatype<cocos2d::ui::Widget::TouchEventType>(L, "ccui.Widget.TouchEventType");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Widget_TextureResType(lua_State *L)
{
    oluacls_class(L, "ccui.Widget.TextureResType", nullptr);
    oluacls_const_integer(L, "LOCAL", (lua_Integer)cocos2d::ui::Widget::TextureResType::LOCAL);
    oluacls_const_integer(L, "PLIST", (lua_Integer)cocos2d::ui::Widget::TextureResType::PLIST);

    olua_registerluatype<cocos2d::ui::Widget::TextureResType>(L, "ccui.Widget.TextureResType");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Widget_BrightStyle(lua_State *L)
{
    oluacls_class(L, "ccui.Widget.BrightStyle", nullptr);
    oluacls_const_integer(L, "NONE", (lua_Integer)cocos2d::ui::Widget::BrightStyle::NONE);
    oluacls_const_integer(L, "NORMAL", (lua_Integer)cocos2d::ui::Widget::BrightStyle::NORMAL);
    oluacls_const_integer(L, "HIGHLIGHT", (lua_Integer)cocos2d::ui::Widget::BrightStyle::HIGHLIGHT);

    olua_registerluatype<cocos2d::ui::Widget::BrightStyle>(L, "ccui.Widget.BrightStyle");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_Widget_create(lua_State *L)
{
    lua_settop(L, 0);

    // static Widget* create()
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)cocos2d::ui::Widget::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_Widget_setEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** enabled */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setEnabled(bool enabled)
    self->setEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isEnabled()
    bool ret = (bool)self->isEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setBright(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** bright */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setBright(bool bright)
    self->setBright(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isBright(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isBright()
    bool ret = (bool)self->isBright();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setTouchEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** enabled */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setTouchEnabled(bool enabled)
    self->setTouchEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_setBrightStyle(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    lua_Unsigned arg1 = 0;   /** style */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_uint(L, 2, &arg1);

    // void setBrightStyle(BrightStyle style)
    self->setBrightStyle((cocos2d::ui::Widget::BrightStyle)arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isTouchEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isTouchEnabled()
    bool ret = (bool)self->isTouchEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_isHighlighted(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isHighlighted()
    bool ret = (bool)self->isHighlighted();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setHighlighted(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** highlight */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setHighlighted(bool highlight)
    self->setHighlighted(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getLeftBoundary(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // float getLeftBoundary()
    float ret = (float)self->getLeftBoundary();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getBottomBoundary(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // float getBottomBoundary()
    float ret = (float)self->getBottomBoundary();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getRightBoundary(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // float getRightBoundary()
    float ret = (float)self->getRightBoundary();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getTopBoundary(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // float getTopBoundary()
    float ret = (float)self->getTopBoundary();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setPositionPercent(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Vec2 arg1;       /** percent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);

    // void setPositionPercent(const Vec2 &percent)
    self->setPositionPercent(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getPositionPercent(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // const Vec2& getPositionPercent()
    const cocos2d::Vec2 &ret = (const cocos2d::Vec2 &)self->getPositionPercent();
    int num_ret = auto_luacv_push_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setPositionType(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    lua_Unsigned arg1 = 0;   /** type */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_uint(L, 2, &arg1);

    // void setPositionType(PositionType type)
    self->setPositionType((cocos2d::ui::Widget::PositionType)arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getPositionType(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // PositionType getPositionType()
    cocos2d::ui::Widget::PositionType ret = (cocos2d::ui::Widget::PositionType)self->getPositionType();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setFlippedX(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** flippedX */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setFlippedX(bool flippedX)
    self->setFlippedX(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isFlippedX(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isFlippedX()
    bool ret = (bool)self->isFlippedX();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setFlippedY(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** flippedY */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setFlippedY(bool flippedY)
    self->setFlippedY(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isFlippedY(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isFlippedY()
    bool ret = (bool)self->isFlippedY();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_isClippingParentContainsPoint(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Vec2 arg1;       /** pt */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);

    // bool isClippingParentContainsPoint(const Vec2& pt)
    bool ret = (bool)self->isClippingParentContainsPoint(arg1);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getTouchBeganPosition(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // const Vec2& getTouchBeganPosition()
    const cocos2d::Vec2 &ret = (const cocos2d::Vec2 &)self->getTouchBeganPosition();
    int num_ret = auto_luacv_push_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getTouchMovePosition(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // const Vec2& getTouchMovePosition()
    const cocos2d::Vec2 &ret = (const cocos2d::Vec2 &)self->getTouchMovePosition();
    int num_ret = auto_luacv_push_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getTouchEndPosition(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // const Vec2& getTouchEndPosition()
    const cocos2d::Vec2 &ret = (const cocos2d::Vec2 &)self->getTouchEndPosition();
    int num_ret = auto_luacv_push_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setSizePercent(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Vec2 arg1;       /** percent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);

    // void setSizePercent(const Vec2 &percent)
    self->setSizePercent(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_setSizeType(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    lua_Unsigned arg1 = 0;   /** type */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_uint(L, 2, &arg1);

    // void setSizeType(SizeType type)
    self->setSizeType((cocos2d::ui::Widget::SizeType)arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getSizeType(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // SizeType getSizeType()
    cocos2d::ui::Widget::SizeType ret = (cocos2d::ui::Widget::SizeType)self->getSizeType();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getCustomSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // const Size& getCustomSize()
    const cocos2d::Size &ret = (const cocos2d::Size &)self->getCustomSize();
    int num_ret = auto_luacv_push_cocos2d_Size(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getLayoutSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // const Size& getLayoutSize()
    const cocos2d::Size &ret = (const cocos2d::Size &)self->getLayoutSize();
    int num_ret = auto_luacv_push_cocos2d_Size(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getSizePercent(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // const Vec2& getSizePercent()
    const cocos2d::Vec2 &ret = (const cocos2d::Vec2 &)self->getSizePercent();
    int num_ret = auto_luacv_push_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_hitTest(lua_State *L)
{
    lua_settop(L, 4);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Vec2 arg1;       /** pt */
    cocos2d::Camera *arg2 = nullptr;   /** camera */
    cocos2d::Vec3 *arg3 = nullptr;   /** p */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);
    olua_check_cppobj(L, 3, (void **)&arg2, "cc.Camera");
    olua_opt_cppobj(L, 4, (void **)&arg3, "cc.Vec3", nullptr);

    // bool hitTest(const Vec2 &pt, const Camera* camera, @nullable Vec3 *p)
    bool ret = (bool)self->hitTest(arg1, arg2, arg3);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_onTouchBegan(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Touch *arg1 = nullptr;   /** touch */
    cocos2d::Event *arg2 = nullptr;   /** unusedEvent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Touch");
    olua_check_cppobj(L, 3, (void **)&arg2, "cc.Event");

    // bool onTouchBegan(Touch *touch, Event *unusedEvent)
    bool ret = (bool)self->onTouchBegan(arg1, arg2);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_onTouchMoved(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Touch *arg1 = nullptr;   /** touch */
    cocos2d::Event *arg2 = nullptr;   /** unusedEvent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Touch");
    olua_check_cppobj(L, 3, (void **)&arg2, "cc.Event");

    // void onTouchMoved(Touch *touch, Event *unusedEvent)
    self->onTouchMoved(arg1, arg2);

    return 0;
}

static int _cocos2d_ui_Widget_onTouchEnded(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Touch *arg1 = nullptr;   /** touch */
    cocos2d::Event *arg2 = nullptr;   /** unusedEvent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Touch");
    olua_check_cppobj(L, 3, (void **)&arg2, "cc.Event");

    // void onTouchEnded(Touch *touch, Event *unusedEvent)
    self->onTouchEnded(arg1, arg2);

    return 0;
}

static int _cocos2d_ui_Widget_onTouchCancelled(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Touch *arg1 = nullptr;   /** touch */
    cocos2d::Event *arg2 = nullptr;   /** unusedEvent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Touch");
    olua_check_cppobj(L, 3, (void **)&arg2, "cc.Event");

    // void onTouchCancelled(Touch *touch, Event *unusedEvent)
    self->onTouchCancelled(arg1, arg2);

    return 0;
}

static int _cocos2d_ui_Widget_setLayoutParameter(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::ui::LayoutParameter *arg1 = nullptr;   /** parameter */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_cppobj(L, 2, (void **)&arg1, "ccui.LayoutParameter");

    // void setLayoutParameter(LayoutParameter* parameter)
    self->setLayoutParameter(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getLayoutParameter(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // LayoutParameter* getLayoutParameter()
    cocos2d::ui::LayoutParameter *ret = (cocos2d::ui::LayoutParameter *)self->getLayoutParameter();
    int num_ret = olua_push_cppobj<cocos2d::ui::LayoutParameter>(L, ret, "ccui.LayoutParameter");

    return num_ret;
}

static int _cocos2d_ui_Widget_ignoreContentAdaptWithSize(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** ignore */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void ignoreContentAdaptWithSize(bool ignore)
    self->ignoreContentAdaptWithSize(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isIgnoreContentAdaptWithSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isIgnoreContentAdaptWithSize()
    bool ret = (bool)self->isIgnoreContentAdaptWithSize();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getWorldPosition(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // Vec2 getWorldPosition()
    cocos2d::Vec2 ret = (cocos2d::Vec2)self->getWorldPosition();
    int num_ret = auto_luacv_push_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getVirtualRenderer(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // Node* getVirtualRenderer()
    cocos2d::Node *ret = (cocos2d::Node *)self->getVirtualRenderer();
    int num_ret = olua_push_cppobj<cocos2d::Node>(L, ret, "cc.Node");

    return num_ret;
}

static int _cocos2d_ui_Widget_getVirtualRendererSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // Size getVirtualRendererSize()
    cocos2d::Size ret = (cocos2d::Size)self->getVirtualRendererSize();
    int num_ret = auto_luacv_push_cocos2d_Size(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_clone(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // Widget* clone()
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)self->clone();
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_Widget_updateSizeAndPosition1(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // void updateSizeAndPosition()
    self->updateSizeAndPosition();

    return 0;
}

static int _cocos2d_ui_Widget_updateSizeAndPosition2(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Size arg1;       /** parentSize */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    auto_luacv_check_cocos2d_Size(L, 2, &arg1);

    // void updateSizeAndPosition(const Size& parentSize)
    self->updateSizeAndPosition(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_updateSizeAndPosition(lua_State *L)
{
    int num_args = lua_gettop(L) - 1;

    if (num_args == 0) {
        return _cocos2d_ui_Widget_updateSizeAndPosition1(L);
    }

    if (num_args == 1) {
        // if (auto_luacv_is_cocos2d_Size(L, 2)) {
            return _cocos2d_ui_Widget_updateSizeAndPosition2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Widget::updateSizeAndPosition' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Widget_setActionTag(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    lua_Integer arg1 = 0;   /** tag */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_int(L, 2, &arg1);

    // void setActionTag(int tag)
    self->setActionTag((int)arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getActionTag(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // int getActionTag()
    int ret = (int)self->getActionTag();
    int num_ret = olua_push_int(L, (lua_Integer)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setPropagateTouchEvents(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** isPropagate */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setPropagateTouchEvents(bool isPropagate)
    self->setPropagateTouchEvents(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isPropagateTouchEvents(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isPropagateTouchEvents()
    bool ret = (bool)self->isPropagateTouchEvents();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setSwallowTouches(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** swallow */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setSwallowTouches(bool swallow)
    self->setSwallowTouches(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isSwallowTouches(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isSwallowTouches()
    bool ret = (bool)self->isSwallowTouches();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_isFocused(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isFocused()
    bool ret = (bool)self->isFocused();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setFocused(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** focus */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setFocused(bool focus)
    self->setFocused(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isFocusEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isFocusEnabled()
    bool ret = (bool)self->isFocusEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setFocusEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** enable */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setFocusEnabled(bool enable)
    self->setFocusEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_findNextFocusedWidget(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Widget *self = nullptr;
    lua_Unsigned arg1 = 0;   /** direction */
    cocos2d::ui::Widget *arg2 = nullptr;   /** current */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_uint(L, 2, &arg1);
    olua_check_cppobj(L, 3, (void **)&arg2, "ccui.Widget");

    // Widget* findNextFocusedWidget(FocusDirection direction, Widget* current)
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)self->findNextFocusedWidget((cocos2d::ui::Widget::FocusDirection)arg1, arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_Widget_requestFocus(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // void requestFocus()
    self->requestFocus();

    return 0;
}

static int _cocos2d_ui_Widget_getCurrentFocusedWidget(lua_State *L)
{
    lua_settop(L, 0);

    // static Widget* getCurrentFocusedWidget()
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)cocos2d::ui::Widget::getCurrentFocusedWidget();
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_Widget_enableDpadNavigation(lua_State *L)
{
    lua_settop(L, 1);

    bool arg1 = false;   /** enable */

    olua_check_bool(L, 1, &arg1);

    // static void enableDpadNavigation(bool enable)
    cocos2d::ui::Widget::enableDpadNavigation(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_setUnifySizeEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** enable */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setUnifySizeEnabled(bool enable)
    self->setUnifySizeEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isUnifySizeEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isUnifySizeEnabled()
    bool ret = (bool)self->isUnifySizeEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setCallbackName(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    std::string arg1;       /** callbackName */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_std_string(L, 2, &arg1);

    // void setCallbackName(const std::string& callbackName)
    self->setCallbackName(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getCallbackName(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // const std::string& getCallbackName()
    const std::string &ret = (const std::string &)self->getCallbackName();
    int num_ret = olua_push_std_string(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setCallbackType(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    std::string arg1;       /** callbackType */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_std_string(L, 2, &arg1);

    // void setCallbackType(const std::string& callbackType)
    self->setCallbackType(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getCallbackType(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // const std::string& getCallbackType()
    const std::string &ret = (const std::string &)self->getCallbackType();
    int num_ret = olua_push_std_string(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setLayoutComponentEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** enable */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setLayoutComponentEnabled(bool enable)
    self->setLayoutComponentEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isLayoutComponentEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isLayoutComponentEnabled()
    bool ret = (bool)self->isLayoutComponentEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_addTouchEventListener(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    std::function<void(cocos2d::Ref *, cocos2d::ui::Widget::TouchEventType)> arg1 = nullptr;   /** callback */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("TouchEventListener");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::Ref *arg1, cocos2d::ui::Widget::TouchEventType arg2) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);

            olua_push_cppobj<cocos2d::Ref>(L, arg1, "cc.Ref");
            olua_push_uint(L, (lua_Unsigned)arg2);
            olua_callback(L, callback_store_obj, func.c_str(), 2);

            lua_settop(L, top);
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("TouchEventListener");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // void addTouchEventListener(@nullable const std::function<void(Ref*,Widget::TouchEventType)>& callback)
    self->addTouchEventListener(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_addClickEventListener(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    std::function<void(cocos2d::Ref *)> arg1 = nullptr;   /** callback */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("ClickEventListener");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::Ref *arg1) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);

            olua_push_cppobj<cocos2d::Ref>(L, arg1, "cc.Ref");
            olua_callback(L, callback_store_obj, func.c_str(), 1);

            lua_settop(L, top);
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("ClickEventListener");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // void addClickEventListener(@nullable std::function<void(Ref*)>& callback)
    self->addClickEventListener(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_addCCSEventListener(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    std::function<void(cocos2d::Ref *, int)> arg1 = nullptr;   /** callback */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("CCSEventListener");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::Ref *arg1, int arg2) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);

            olua_push_cppobj<cocos2d::Ref>(L, arg1, "cc.Ref");
            olua_push_int(L, (lua_Integer)arg2);
            olua_callback(L, callback_store_obj, func.c_str(), 2);

            lua_settop(L, top);
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("CCSEventListener");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // void addCCSEventListener(@nullable const std::function<void(Ref*, int)>& callback)
    self->addCCSEventListener(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_get_onFocusChanged(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    void *callback_store_obj = (void *)self;
    std::string tag = olua_makecallbacktag("onFocusChanged");
    olua_getcallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);

    // <function var>
    std::function<void(cocos2d::ui::Widget *, cocos2d::ui::Widget *)> ret = (std::function<void(cocos2d::ui::Widget *, cocos2d::ui::Widget *)>)self->onFocusChanged;
    int num_ret = olua_push_std_function(L, (std::function<void(cocos2d::ui::Widget *, cocos2d::ui::Widget *)>)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_set_onFocusChanged(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    std::function<void(cocos2d::ui::Widget *, cocos2d::ui::Widget *)> arg1 = nullptr;   /** onFocusChanged */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("onFocusChanged");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::ui::Widget *arg1, cocos2d::ui::Widget *arg2) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);

            olua_push_cppobj<cocos2d::ui::Widget>(L, arg1, "ccui.Widget");
            olua_push_cppobj<cocos2d::ui::Widget>(L, arg2, "ccui.Widget");
            olua_callback(L, callback_store_obj, func.c_str(), 2);

            lua_settop(L, top);
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("onFocusChanged");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // <function var>
    self->onFocusChanged = arg1;

    return 0;
}

static int _cocos2d_ui_Widget_get_onNextFocusedWidget(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    void *callback_store_obj = (void *)self;
    std::string tag = olua_makecallbacktag("onNextFocusedWidget");
    olua_getcallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);

    // <function var>
    std::function<cocos2d::ui::Widget *(cocos2d::ui::Widget::FocusDirection)> ret = (std::function<cocos2d::ui::Widget *(cocos2d::ui::Widget::FocusDirection)>)self->onNextFocusedWidget;
    int num_ret = olua_push_std_function(L, (std::function<cocos2d::ui::Widget *(cocos2d::ui::Widget::FocusDirection)>)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_set_onNextFocusedWidget(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    std::function<cocos2d::ui::Widget *(cocos2d::ui::Widget::FocusDirection)> arg1 = nullptr;   /** onNextFocusedWidget */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("onNextFocusedWidget");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::ui::Widget::FocusDirection arg1) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);
            cocos2d::ui::Widget * ret = nullptr;
            olua_push_uint(L, (lua_Unsigned)arg1);
            olua_callback(L, callback_store_obj, func.c_str(), 1);
            olua_opt_cppobj(L, -1, (void **)&ret, "ccui.Widget", nullptr);

            lua_settop(L, top);
            return ret;
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("onNextFocusedWidget");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // <function var>
    self->onNextFocusedWidget = arg1;

    return 0;
}

static int luaopen_cocos2d_ui_Widget(lua_State *L)
{
    oluacls_class(L, "ccui.Widget", "cc.ProtectedNode");
    oluacls_setfunc(L, "create", _cocos2d_ui_Widget_create);
    oluacls_setfunc(L, "setEnabled", _cocos2d_ui_Widget_setEnabled);
    oluacls_setfunc(L, "isEnabled", _cocos2d_ui_Widget_isEnabled);
    oluacls_setfunc(L, "setBright", _cocos2d_ui_Widget_setBright);
    oluacls_setfunc(L, "isBright", _cocos2d_ui_Widget_isBright);
    oluacls_setfunc(L, "setTouchEnabled", _cocos2d_ui_Widget_setTouchEnabled);
    oluacls_setfunc(L, "setBrightStyle", _cocos2d_ui_Widget_setBrightStyle);
    oluacls_setfunc(L, "isTouchEnabled", _cocos2d_ui_Widget_isTouchEnabled);
    oluacls_setfunc(L, "isHighlighted", _cocos2d_ui_Widget_isHighlighted);
    oluacls_setfunc(L, "setHighlighted", _cocos2d_ui_Widget_setHighlighted);
    oluacls_setfunc(L, "getLeftBoundary", _cocos2d_ui_Widget_getLeftBoundary);
    oluacls_setfunc(L, "getBottomBoundary", _cocos2d_ui_Widget_getBottomBoundary);
    oluacls_setfunc(L, "getRightBoundary", _cocos2d_ui_Widget_getRightBoundary);
    oluacls_setfunc(L, "getTopBoundary", _cocos2d_ui_Widget_getTopBoundary);
    oluacls_setfunc(L, "setPositionPercent", _cocos2d_ui_Widget_setPositionPercent);
    oluacls_setfunc(L, "getPositionPercent", _cocos2d_ui_Widget_getPositionPercent);
    oluacls_setfunc(L, "setPositionType", _cocos2d_ui_Widget_setPositionType);
    oluacls_setfunc(L, "getPositionType", _cocos2d_ui_Widget_getPositionType);
    oluacls_setfunc(L, "setFlippedX", _cocos2d_ui_Widget_setFlippedX);
    oluacls_setfunc(L, "isFlippedX", _cocos2d_ui_Widget_isFlippedX);
    oluacls_setfunc(L, "setFlippedY", _cocos2d_ui_Widget_setFlippedY);
    oluacls_setfunc(L, "isFlippedY", _cocos2d_ui_Widget_isFlippedY);
    oluacls_setfunc(L, "isClippingParentContainsPoint", _cocos2d_ui_Widget_isClippingParentContainsPoint);
    oluacls_setfunc(L, "getTouchBeganPosition", _cocos2d_ui_Widget_getTouchBeganPosition);
    oluacls_setfunc(L, "getTouchMovePosition", _cocos2d_ui_Widget_getTouchMovePosition);
    oluacls_setfunc(L, "getTouchEndPosition", _cocos2d_ui_Widget_getTouchEndPosition);
    oluacls_setfunc(L, "setSizePercent", _cocos2d_ui_Widget_setSizePercent);
    oluacls_setfunc(L, "setSizeType", _cocos2d_ui_Widget_setSizeType);
    oluacls_setfunc(L, "getSizeType", _cocos2d_ui_Widget_getSizeType);
    oluacls_setfunc(L, "getCustomSize", _cocos2d_ui_Widget_getCustomSize);
    oluacls_setfunc(L, "getLayoutSize", _cocos2d_ui_Widget_getLayoutSize);
    oluacls_setfunc(L, "getSizePercent", _cocos2d_ui_Widget_getSizePercent);
    oluacls_setfunc(L, "hitTest", _cocos2d_ui_Widget_hitTest);
    oluacls_setfunc(L, "onTouchBegan", _cocos2d_ui_Widget_onTouchBegan);
    oluacls_setfunc(L, "onTouchMoved", _cocos2d_ui_Widget_onTouchMoved);
    oluacls_setfunc(L, "onTouchEnded", _cocos2d_ui_Widget_onTouchEnded);
    oluacls_setfunc(L, "onTouchCancelled", _cocos2d_ui_Widget_onTouchCancelled);
    oluacls_setfunc(L, "setLayoutParameter", _cocos2d_ui_Widget_setLayoutParameter);
    oluacls_setfunc(L, "getLayoutParameter", _cocos2d_ui_Widget_getLayoutParameter);
    oluacls_setfunc(L, "ignoreContentAdaptWithSize", _cocos2d_ui_Widget_ignoreContentAdaptWithSize);
    oluacls_setfunc(L, "isIgnoreContentAdaptWithSize", _cocos2d_ui_Widget_isIgnoreContentAdaptWithSize);
    oluacls_setfunc(L, "getWorldPosition", _cocos2d_ui_Widget_getWorldPosition);
    oluacls_setfunc(L, "getVirtualRenderer", _cocos2d_ui_Widget_getVirtualRenderer);
    oluacls_setfunc(L, "getVirtualRendererSize", _cocos2d_ui_Widget_getVirtualRendererSize);
    oluacls_setfunc(L, "clone", _cocos2d_ui_Widget_clone);
    oluacls_setfunc(L, "updateSizeAndPosition", _cocos2d_ui_Widget_updateSizeAndPosition);
    oluacls_setfunc(L, "setActionTag", _cocos2d_ui_Widget_setActionTag);
    oluacls_setfunc(L, "getActionTag", _cocos2d_ui_Widget_getActionTag);
    oluacls_setfunc(L, "setPropagateTouchEvents", _cocos2d_ui_Widget_setPropagateTouchEvents);
    oluacls_setfunc(L, "isPropagateTouchEvents", _cocos2d_ui_Widget_isPropagateTouchEvents);
    oluacls_setfunc(L, "setSwallowTouches", _cocos2d_ui_Widget_setSwallowTouches);
    oluacls_setfunc(L, "isSwallowTouches", _cocos2d_ui_Widget_isSwallowTouches);
    oluacls_setfunc(L, "isFocused", _cocos2d_ui_Widget_isFocused);
    oluacls_setfunc(L, "setFocused", _cocos2d_ui_Widget_setFocused);
    oluacls_setfunc(L, "isFocusEnabled", _cocos2d_ui_Widget_isFocusEnabled);
    oluacls_setfunc(L, "setFocusEnabled", _cocos2d_ui_Widget_setFocusEnabled);
    oluacls_setfunc(L, "findNextFocusedWidget", _cocos2d_ui_Widget_findNextFocusedWidget);
    oluacls_setfunc(L, "requestFocus", _cocos2d_ui_Widget_requestFocus);
    oluacls_setfunc(L, "getCurrentFocusedWidget", _cocos2d_ui_Widget_getCurrentFocusedWidget);
    oluacls_setfunc(L, "enableDpadNavigation", _cocos2d_ui_Widget_enableDpadNavigation);
    oluacls_setfunc(L, "setUnifySizeEnabled", _cocos2d_ui_Widget_setUnifySizeEnabled);
    oluacls_setfunc(L, "isUnifySizeEnabled", _cocos2d_ui_Widget_isUnifySizeEnabled);
    oluacls_setfunc(L, "setCallbackName", _cocos2d_ui_Widget_setCallbackName);
    oluacls_setfunc(L, "getCallbackName", _cocos2d_ui_Widget_getCallbackName);
    oluacls_setfunc(L, "setCallbackType", _cocos2d_ui_Widget_setCallbackType);
    oluacls_setfunc(L, "getCallbackType", _cocos2d_ui_Widget_getCallbackType);
    oluacls_setfunc(L, "setLayoutComponentEnabled", _cocos2d_ui_Widget_setLayoutComponentEnabled);
    oluacls_setfunc(L, "isLayoutComponentEnabled", _cocos2d_ui_Widget_isLayoutComponentEnabled);
    oluacls_setfunc(L, "addTouchEventListener", _cocos2d_ui_Widget_addTouchEventListener);
    oluacls_setfunc(L, "addClickEventListener", _cocos2d_ui_Widget_addClickEventListener);
    oluacls_setfunc(L, "addCCSEventListener", _cocos2d_ui_Widget_addCCSEventListener);
    oluacls_property(L, "enabled", _cocos2d_ui_Widget_isEnabled, _cocos2d_ui_Widget_setEnabled);
    oluacls_property(L, "bright", _cocos2d_ui_Widget_isBright, _cocos2d_ui_Widget_setBright);
    oluacls_property(L, "touchEnabled", _cocos2d_ui_Widget_isTouchEnabled, _cocos2d_ui_Widget_setTouchEnabled);
    oluacls_property(L, "highlighted", _cocos2d_ui_Widget_isHighlighted, _cocos2d_ui_Widget_setHighlighted);
    oluacls_property(L, "leftBoundary", _cocos2d_ui_Widget_getLeftBoundary, nullptr);
    oluacls_property(L, "bottomBoundary", _cocos2d_ui_Widget_getBottomBoundary, nullptr);
    oluacls_property(L, "rightBoundary", _cocos2d_ui_Widget_getRightBoundary, nullptr);
    oluacls_property(L, "topBoundary", _cocos2d_ui_Widget_getTopBoundary, nullptr);
    oluacls_property(L, "positionType", _cocos2d_ui_Widget_getPositionType, _cocos2d_ui_Widget_setPositionType);
    oluacls_property(L, "flippedX", _cocos2d_ui_Widget_isFlippedX, _cocos2d_ui_Widget_setFlippedX);
    oluacls_property(L, "flippedY", _cocos2d_ui_Widget_isFlippedY, _cocos2d_ui_Widget_setFlippedY);
    oluacls_property(L, "sizeType", _cocos2d_ui_Widget_getSizeType, _cocos2d_ui_Widget_setSizeType);
    oluacls_property(L, "layoutParameter", _cocos2d_ui_Widget_getLayoutParameter, _cocos2d_ui_Widget_setLayoutParameter);
    oluacls_property(L, "ignoreContentAdaptWithSize", _cocos2d_ui_Widget_isIgnoreContentAdaptWithSize, nullptr);
    oluacls_property(L, "virtualRenderer", _cocos2d_ui_Widget_getVirtualRenderer, nullptr);
    oluacls_property(L, "actionTag", _cocos2d_ui_Widget_getActionTag, _cocos2d_ui_Widget_setActionTag);
    oluacls_property(L, "propagateTouchEvents", _cocos2d_ui_Widget_isPropagateTouchEvents, _cocos2d_ui_Widget_setPropagateTouchEvents);
    oluacls_property(L, "swallowTouches", _cocos2d_ui_Widget_isSwallowTouches, _cocos2d_ui_Widget_setSwallowTouches);
    oluacls_property(L, "focused", _cocos2d_ui_Widget_isFocused, _cocos2d_ui_Widget_setFocused);
    oluacls_property(L, "focusEnabled", _cocos2d_ui_Widget_isFocusEnabled, _cocos2d_ui_Widget_setFocusEnabled);
    oluacls_property(L, "currentFocusedWidget", _cocos2d_ui_Widget_getCurrentFocusedWidget, nullptr);
    oluacls_property(L, "unifySizeEnabled", _cocos2d_ui_Widget_isUnifySizeEnabled, _cocos2d_ui_Widget_setUnifySizeEnabled);
    oluacls_property(L, "callbackName", _cocos2d_ui_Widget_getCallbackName, _cocos2d_ui_Widget_setCallbackName);
    oluacls_property(L, "callbackType", _cocos2d_ui_Widget_getCallbackType, _cocos2d_ui_Widget_setCallbackType);
    oluacls_property(L, "layoutComponentEnabled", _cocos2d_ui_Widget_isLayoutComponentEnabled, _cocos2d_ui_Widget_setLayoutComponentEnabled);
    oluacls_property(L, "onFocusChanged", _cocos2d_ui_Widget_get_onFocusChanged, _cocos2d_ui_Widget_set_onFocusChanged);
    oluacls_property(L, "onNextFocusedWidget", _cocos2d_ui_Widget_get_onNextFocusedWidget, _cocos2d_ui_Widget_set_onNextFocusedWidget);

    olua_registerluatype<cocos2d::ui::Widget>(L, "ccui.Widget");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_Helper_seekWidgetByTag(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *arg1 = nullptr;   /** root */
    lua_Integer arg2 = 0;   /** tag */

    olua_check_cppobj(L, 1, (void **)&arg1, "ccui.Widget");
    olua_check_int(L, 2, &arg2);

    // static Widget* seekWidgetByTag(Widget* root, int tag)
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)cocos2d::ui::Helper::seekWidgetByTag(arg1, (int)arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_Helper_seekWidgetByName(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *arg1 = nullptr;   /** root */
    std::string arg2;       /** name */

    olua_check_cppobj(L, 1, (void **)&arg1, "ccui.Widget");
    olua_check_std_string(L, 2, &arg2);

    // static Widget* seekWidgetByName(Widget* root, const std::string& name)
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)cocos2d::ui::Helper::seekWidgetByName(arg1, arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_Helper_seekActionWidgetByActionTag(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *arg1 = nullptr;   /** root */
    lua_Integer arg2 = 0;   /** tag */

    olua_check_cppobj(L, 1, (void **)&arg1, "ccui.Widget");
    olua_check_int(L, 2, &arg2);

    // static Widget* seekActionWidgetByActionTag(Widget* root, int tag)
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)cocos2d::ui::Helper::seekActionWidgetByActionTag(arg1, (int)arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_Helper_doLayout(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::Node *arg1 = nullptr;   /** rootNode */

    olua_check_cppobj(L, 1, (void **)&arg1, "cc.Node");

    // static void doLayout(Node *rootNode)
    cocos2d::ui::Helper::doLayout(arg1);

    return 0;
}

static int _cocos2d_ui_Helper_changeLayoutSystemActiveState(lua_State *L)
{
    lua_settop(L, 1);

    bool arg1 = false;   /** active */

    olua_check_bool(L, 1, &arg1);

    // static void changeLayoutSystemActiveState(bool active)
    cocos2d::ui::Helper::changeLayoutSystemActiveState(arg1);

    return 0;
}

static int _cocos2d_ui_Helper_restrictCapInsetRect(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::Rect arg1;       /** capInsets */
    cocos2d::Size arg2;       /** textureSize */

    manual_luacv_check_cocos2d_Rect(L, 1, &arg1);
    auto_luacv_check_cocos2d_Size(L, 2, &arg2);

    // static Rect restrictCapInsetRect(const Rect& capInsets, const Size& textureSize)
    cocos2d::Rect ret = (cocos2d::Rect)cocos2d::ui::Helper::restrictCapInsetRect(arg1, arg2);
    int num_ret = manual_luacv_push_cocos2d_Rect(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Helper_convertBoundingBoxToScreen(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::Node *arg1 = nullptr;   /** node */

    olua_check_cppobj(L, 1, (void **)&arg1, "cc.Node");

    // static Rect convertBoundingBoxToScreen(Node* node)
    cocos2d::Rect ret = (cocos2d::Rect)cocos2d::ui::Helper::convertBoundingBoxToScreen(arg1);
    int num_ret = manual_luacv_push_cocos2d_Rect(L, &ret);

    return num_ret;
}

static int luaopen_cocos2d_ui_Helper(lua_State *L)
{
    oluacls_class(L, "ccui.Helper", nullptr);
    oluacls_setfunc(L, "seekWidgetByTag", _cocos2d_ui_Helper_seekWidgetByTag);
    oluacls_setfunc(L, "seekWidgetByName", _cocos2d_ui_Helper_seekWidgetByName);
    oluacls_setfunc(L, "seekActionWidgetByActionTag", _cocos2d_ui_Helper_seekActionWidgetByActionTag);
    oluacls_setfunc(L, "doLayout", _cocos2d_ui_Helper_doLayout);
    oluacls_setfunc(L, "changeLayoutSystemActiveState", _cocos2d_ui_Helper_changeLayoutSystemActiveState);
    oluacls_setfunc(L, "restrictCapInsetRect", _cocos2d_ui_Helper_restrictCapInsetRect);
    oluacls_setfunc(L, "convertBoundingBoxToScreen", _cocos2d_ui_Helper_convertBoundingBoxToScreen);

    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Scale9Sprite_State(lua_State *L)
{
    oluacls_class(L, "ccui.Scale9Sprite.State", nullptr);
    oluacls_const_integer(L, "NORMAL", (lua_Integer)cocos2d::ui::Scale9Sprite::State::NORMAL);
    oluacls_const_integer(L, "GRAY", (lua_Integer)cocos2d::ui::Scale9Sprite::State::GRAY);

    olua_registerluatype<cocos2d::ui::Scale9Sprite::State>(L, "ccui.Scale9Sprite.State");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Scale9Sprite_RenderingType(lua_State *L)
{
    oluacls_class(L, "ccui.Scale9Sprite.RenderingType", nullptr);
    oluacls_const_integer(L, "SIMPLE", (lua_Integer)cocos2d::ui::Scale9Sprite::RenderingType::SIMPLE);
    oluacls_const_integer(L, "SLICE", (lua_Integer)cocos2d::ui::Scale9Sprite::RenderingType::SLICE);

    olua_registerluatype<cocos2d::ui::Scale9Sprite::RenderingType>(L, "ccui.Scale9Sprite.RenderingType");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_Scale9Sprite_create1(lua_State *L)
{
    lua_settop(L, 0);

    // static Scale9Sprite* create()
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_create2(lua_State *L)
{
    lua_settop(L, 3);

    std::string arg1;       /** file */
    cocos2d::Rect arg2;       /** rect */
    cocos2d::Rect arg3;       /** capInsets */

    olua_check_std_string(L, 1, &arg1);
    manual_luacv_check_cocos2d_Rect(L, 2, &arg2);
    manual_luacv_check_cocos2d_Rect(L, 3, &arg3);

    // static Scale9Sprite* create(const std::string& file, const Rect& rect,  const Rect& capInsets)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::create(arg1, arg2, arg3);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_create3(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::Rect arg1;       /** capInsets */
    std::string arg2;       /** file */

    manual_luacv_check_cocos2d_Rect(L, 1, &arg1);
    olua_check_std_string(L, 2, &arg2);

    // static Scale9Sprite* create(const Rect& capInsets, const std::string& file)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::create(arg1, arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_create4(lua_State *L)
{
    lua_settop(L, 2);

    std::string arg1;       /** file */
    cocos2d::Rect arg2;       /** rect */

    olua_check_std_string(L, 1, &arg1);
    manual_luacv_check_cocos2d_Rect(L, 2, &arg2);

    // static Scale9Sprite* create(const std::string& file, const Rect& rect)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::create(arg1, arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_create5(lua_State *L)
{
    lua_settop(L, 1);

    std::string arg1;       /** file */

    olua_check_std_string(L, 1, &arg1);

    // static Scale9Sprite* create(const std::string& file)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::create(arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_create(lua_State *L)
{
    int num_args = lua_gettop(L);

    if (num_args == 0) {
        return _cocos2d_ui_Scale9Sprite_create1(L);
    }

    if (num_args == 1) {
        // if (olua_is_std_string(L, 1)) {
            return _cocos2d_ui_Scale9Sprite_create5(L);
        // }
    }

    if (num_args == 2) {
        if (manual_luacv_is_cocos2d_Rect(L, 1) && olua_is_std_string(L, 2)) {
            return _cocos2d_ui_Scale9Sprite_create3(L);
        }

        // if (olua_is_std_string(L, 1) && manual_luacv_is_cocos2d_Rect(L, 2)) {
            return _cocos2d_ui_Scale9Sprite_create4(L);
        // }
    }

    if (num_args == 3) {
        // if (olua_is_std_string(L, 1) && manual_luacv_is_cocos2d_Rect(L, 2) && manual_luacv_is_cocos2d_Rect(L, 3)) {
            return _cocos2d_ui_Scale9Sprite_create2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Scale9Sprite::create' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_createWithSpriteFrame1(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::SpriteFrame *arg1 = nullptr;   /** spriteFrame */

    olua_check_cppobj(L, 1, (void **)&arg1, "cc.SpriteFrame");

    // static Scale9Sprite* createWithSpriteFrame(SpriteFrame* spriteFrame)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::createWithSpriteFrame(arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_createWithSpriteFrame2(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::SpriteFrame *arg1 = nullptr;   /** spriteFrame */
    cocos2d::Rect arg2;       /** capInsets */

    olua_check_cppobj(L, 1, (void **)&arg1, "cc.SpriteFrame");
    manual_luacv_check_cocos2d_Rect(L, 2, &arg2);

    // static Scale9Sprite* createWithSpriteFrame(SpriteFrame* spriteFrame, const Rect& capInsets)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::createWithSpriteFrame(arg1, arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_createWithSpriteFrame(lua_State *L)
{
    int num_args = lua_gettop(L);

    if (num_args == 1) {
        // if (olua_is_cppobj(L, 1, "cc.SpriteFrame")) {
            return _cocos2d_ui_Scale9Sprite_createWithSpriteFrame1(L);
        // }
    }

    if (num_args == 2) {
        // if (olua_is_cppobj(L, 1, "cc.SpriteFrame") && manual_luacv_is_cocos2d_Rect(L, 2)) {
            return _cocos2d_ui_Scale9Sprite_createWithSpriteFrame2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Scale9Sprite::createWithSpriteFrame' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_createWithSpriteFrameName1(lua_State *L)
{
    lua_settop(L, 1);

    std::string arg1;       /** spriteFrameName */

    olua_check_std_string(L, 1, &arg1);

    // static Scale9Sprite* createWithSpriteFrameName(const std::string& spriteFrameName)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::createWithSpriteFrameName(arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_createWithSpriteFrameName2(lua_State *L)
{
    lua_settop(L, 2);

    std::string arg1;       /** spriteFrameName */
    cocos2d::Rect arg2;       /** capInsets */

    olua_check_std_string(L, 1, &arg1);
    manual_luacv_check_cocos2d_Rect(L, 2, &arg2);

    // static Scale9Sprite* createWithSpriteFrameName(const std::string& spriteFrameName, const Rect& capInsets)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::createWithSpriteFrameName(arg1, arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_createWithSpriteFrameName(lua_State *L)
{
    int num_args = lua_gettop(L);

    if (num_args == 1) {
        // if (olua_is_std_string(L, 1)) {
            return _cocos2d_ui_Scale9Sprite_createWithSpriteFrameName1(L);
        // }
    }

    if (num_args == 2) {
        // if (olua_is_std_string(L, 1) && manual_luacv_is_cocos2d_Rect(L, 2)) {
            return _cocos2d_ui_Scale9Sprite_createWithSpriteFrameName2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Scale9Sprite::createWithSpriteFrameName' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_initWithFile1(lua_State *L)
{
    lua_settop(L, 4);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    std::string arg1;       /** file */
    cocos2d::Rect arg2;       /** rect */
    cocos2d::Rect arg3;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_std_string(L, 2, &arg1);
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);
    manual_luacv_check_cocos2d_Rect(L, 4, &arg3);

    // bool initWithFile(const std::string& file, const Rect& rect,  const Rect& capInsets)
    bool ret = (bool)self->initWithFile(arg1, arg2, arg3);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_initWithFile2(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Rect arg1;       /** capInsets */
    std::string arg2;       /** file */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    manual_luacv_check_cocos2d_Rect(L, 2, &arg1);
    olua_check_std_string(L, 3, &arg2);

    // bool initWithFile(const Rect& capInsets, const std::string& file)
    bool ret = (bool)self->initWithFile(arg1, arg2);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_initWithFile3(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    std::string arg1;       /** file */
    cocos2d::Rect arg2;       /** rect */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_std_string(L, 2, &arg1);
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);

    // bool initWithFile(const std::string& file, const Rect& rect)
    bool ret = (bool)self->initWithFile(arg1, arg2);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_initWithFile4(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    std::string arg1;       /** file */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_std_string(L, 2, &arg1);

    // bool initWithFile(const std::string& file)
    bool ret = (bool)self->initWithFile(arg1);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_initWithFile(lua_State *L)
{
    int num_args = lua_gettop(L) - 1;

    if (num_args == 1) {
        // if (olua_is_std_string(L, 2)) {
            return _cocos2d_ui_Scale9Sprite_initWithFile4(L);
        // }
    }

    if (num_args == 2) {
        if (manual_luacv_is_cocos2d_Rect(L, 2) && olua_is_std_string(L, 3)) {
            return _cocos2d_ui_Scale9Sprite_initWithFile2(L);
        }

        // if (olua_is_std_string(L, 2) && manual_luacv_is_cocos2d_Rect(L, 3)) {
            return _cocos2d_ui_Scale9Sprite_initWithFile3(L);
        // }
    }

    if (num_args == 3) {
        // if (olua_is_std_string(L, 2) && manual_luacv_is_cocos2d_Rect(L, 3) && manual_luacv_is_cocos2d_Rect(L, 4)) {
            return _cocos2d_ui_Scale9Sprite_initWithFile1(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Scale9Sprite::initWithFile' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_initWithSpriteFrame(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::SpriteFrame *arg1 = nullptr;   /** spriteFrame */
    cocos2d::Rect arg2;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.SpriteFrame");
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);

    // bool initWithSpriteFrame(SpriteFrame* spriteFrame, const Rect& capInsets)
    bool ret = (bool)self->initWithSpriteFrame(arg1, arg2);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_initWithSpriteFrameName1(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    std::string arg1;       /** spriteFrameName */
    cocos2d::Rect arg2;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_std_string(L, 2, &arg1);
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);

    // bool initWithSpriteFrameName(const std::string& spriteFrameName, const Rect& capInsets)
    bool ret = (bool)self->initWithSpriteFrameName(arg1, arg2);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_initWithSpriteFrameName2(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    std::string arg1;       /** spriteFrameName */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_std_string(L, 2, &arg1);

    // bool initWithSpriteFrameName(const std::string& spriteFrameName)
    bool ret = (bool)self->initWithSpriteFrameName(arg1);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_initWithSpriteFrameName(lua_State *L)
{
    int num_args = lua_gettop(L) - 1;

    if (num_args == 1) {
        // if (olua_is_std_string(L, 2)) {
            return _cocos2d_ui_Scale9Sprite_initWithSpriteFrameName2(L);
        // }
    }

    if (num_args == 2) {
        // if (olua_is_std_string(L, 2) && manual_luacv_is_cocos2d_Rect(L, 3)) {
            return _cocos2d_ui_Scale9Sprite_initWithSpriteFrameName1(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Scale9Sprite::initWithSpriteFrameName' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_init1(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // bool init()
    bool ret = (bool)self->init();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_init2(lua_State *L)
{
    lua_settop(L, 5);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Sprite *arg1 = nullptr;   /** sprite */
    cocos2d::Rect arg2;       /** rect */
    bool arg3 = false;   /** rotated */
    cocos2d::Rect arg4;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Sprite");
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);
    olua_check_bool(L, 4, &arg3);
    manual_luacv_check_cocos2d_Rect(L, 5, &arg4);

    // bool init(Sprite* sprite, const Rect& rect, bool rotated, const Rect& capInsets)
    bool ret = (bool)self->init(arg1, arg2, arg3, arg4);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_init3(lua_State *L)
{
    lua_settop(L, 4);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Sprite *arg1 = nullptr;   /** sprite */
    cocos2d::Rect arg2;       /** rect */
    cocos2d::Rect arg3;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Sprite");
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);
    manual_luacv_check_cocos2d_Rect(L, 4, &arg3);

    // bool init(Sprite* sprite, const Rect& rect, const Rect& capInsets)
    bool ret = (bool)self->init(arg1, arg2, arg3);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_init4(lua_State *L)
{
    lua_settop(L, 7);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Sprite *arg1 = nullptr;   /** sprite */
    cocos2d::Rect arg2;       /** rect */
    bool arg3 = false;   /** rotated */
    cocos2d::Vec2 arg4;       /** offset */
    cocos2d::Size arg5;       /** originalSize */
    cocos2d::Rect arg6;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Sprite");
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);
    olua_check_bool(L, 4, &arg3);
    auto_luacv_check_cocos2d_Vec2(L, 5, &arg4);
    auto_luacv_check_cocos2d_Size(L, 6, &arg5);
    manual_luacv_check_cocos2d_Rect(L, 7, &arg6);

    // bool init(Sprite* sprite, const Rect& rect, bool rotated, const Vec2 &offset, const Size &originalSize, const Rect& capInsets)
    bool ret = (bool)self->init(arg1, arg2, arg3, arg4, arg5, arg6);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_init(lua_State *L)
{
    int num_args = lua_gettop(L) - 1;

    if (num_args == 0) {
        return _cocos2d_ui_Scale9Sprite_init1(L);
    }

    if (num_args == 3) {
        // if (olua_is_cppobj(L, 2, "cc.Sprite") && manual_luacv_is_cocos2d_Rect(L, 3) && manual_luacv_is_cocos2d_Rect(L, 4)) {
            return _cocos2d_ui_Scale9Sprite_init3(L);
        // }
    }

    if (num_args == 4) {
        // if (olua_is_cppobj(L, 2, "cc.Sprite") && manual_luacv_is_cocos2d_Rect(L, 3) && olua_is_bool(L, 4) && manual_luacv_is_cocos2d_Rect(L, 5)) {
            return _cocos2d_ui_Scale9Sprite_init2(L);
        // }
    }

    if (num_args == 6) {
        // if (olua_is_cppobj(L, 2, "cc.Sprite") && manual_luacv_is_cocos2d_Rect(L, 3) && olua_is_bool(L, 4) && auto_luacv_is_cocos2d_Vec2(L, 5) && auto_luacv_is_cocos2d_Size(L, 6) && manual_luacv_is_cocos2d_Rect(L, 7)) {
            return _cocos2d_ui_Scale9Sprite_init4(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Scale9Sprite::init' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_resizableSpriteWithCapInsets(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Rect arg1;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    manual_luacv_check_cocos2d_Rect(L, 2, &arg1);

    // Scale9Sprite* resizableSpriteWithCapInsets(const Rect& capInsets)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)self->resizableSpriteWithCapInsets(arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_updateWithSprite1(lua_State *L)
{
    lua_settop(L, 5);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Sprite *arg1 = nullptr;   /** sprite */
    cocos2d::Rect arg2;       /** rect */
    bool arg3 = false;   /** rotated */
    cocos2d::Rect arg4;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Sprite");
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);
    olua_check_bool(L, 4, &arg3);
    manual_luacv_check_cocos2d_Rect(L, 5, &arg4);

    // bool updateWithSprite(Sprite* sprite, const Rect& rect, bool rotated, const Rect& capInsets)
    bool ret = (bool)self->updateWithSprite(arg1, arg2, arg3, arg4);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_updateWithSprite2(lua_State *L)
{
    lua_settop(L, 7);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Sprite *arg1 = nullptr;   /** sprite */
    cocos2d::Rect arg2;       /** rect */
    bool arg3 = false;   /** rotated */
    cocos2d::Vec2 arg4;       /** offset */
    cocos2d::Size arg5;       /** originalSize */
    cocos2d::Rect arg6;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Sprite");
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);
    olua_check_bool(L, 4, &arg3);
    auto_luacv_check_cocos2d_Vec2(L, 5, &arg4);
    auto_luacv_check_cocos2d_Size(L, 6, &arg5);
    manual_luacv_check_cocos2d_Rect(L, 7, &arg6);

    // bool updateWithSprite(Sprite* sprite, const Rect& rect, bool rotated, const Vec2 &offset, const Size &originalSize, const Rect& capInsets)
    bool ret = (bool)self->updateWithSprite(arg1, arg2, arg3, arg4, arg5, arg6);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_updateWithSprite(lua_State *L)
{
    int num_args = lua_gettop(L) - 1;

    if (num_args == 4) {
        // if (olua_is_cppobj(L, 2, "cc.Sprite") && manual_luacv_is_cocos2d_Rect(L, 3) && olua_is_bool(L, 4) && manual_luacv_is_cocos2d_Rect(L, 5)) {
            return _cocos2d_ui_Scale9Sprite_updateWithSprite1(L);
        // }
    }

    if (num_args == 6) {
        // if (olua_is_cppobj(L, 2, "cc.Sprite") && manual_luacv_is_cocos2d_Rect(L, 3) && olua_is_bool(L, 4) && auto_luacv_is_cocos2d_Vec2(L, 5) && auto_luacv_is_cocos2d_Size(L, 6) && manual_luacv_is_cocos2d_Rect(L, 7)) {
            return _cocos2d_ui_Scale9Sprite_updateWithSprite2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Scale9Sprite::updateWithSprite' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_setSpriteFrame(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::SpriteFrame *arg1 = nullptr;   /** spriteFrame */
    cocos2d::Rect arg2;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.SpriteFrame");
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);

    // void setSpriteFrame(SpriteFrame * spriteFrame, const Rect& capInsets)
    self->setSpriteFrame(arg1, arg2);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_setState(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    lua_Unsigned arg1 = 0;   /** state */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_uint(L, 2, &arg1);

    // void setState(State state)
    self->setState((cocos2d::ui::Scale9Sprite::State)arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getState(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // State getState()
    cocos2d::ui::Scale9Sprite::State ret = (cocos2d::ui::Scale9Sprite::State)self->getState();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_getOriginalSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // Size getOriginalSize()
    cocos2d::Size ret = (cocos2d::Size)self->getOriginalSize();
    int num_ret = auto_luacv_push_cocos2d_Size(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_setPreferredSize(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Size arg1;       /** size */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    auto_luacv_check_cocos2d_Size(L, 2, &arg1);

    // void setPreferredSize(Size& size)
    self->setPreferredSize(arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getPreferredSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // Size getPreferredSize()
    cocos2d::Size ret = (cocos2d::Size)self->getPreferredSize();
    int num_ret = auto_luacv_push_cocos2d_Size(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_setInsetLeft(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    lua_Number arg1 = 0;   /** leftInset */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_number(L, 2, &arg1);

    // void setInsetLeft(float leftInset)
    self->setInsetLeft((float)arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getInsetLeft(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // float getInsetLeft()
    float ret = (float)self->getInsetLeft();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_setInsetTop(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    lua_Number arg1 = 0;   /** topInset */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_number(L, 2, &arg1);

    // void setInsetTop(float topInset)
    self->setInsetTop((float)arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getInsetTop(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // float getInsetTop()
    float ret = (float)self->getInsetTop();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_setInsetRight(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    lua_Number arg1 = 0;   /** rightInset */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_number(L, 2, &arg1);

    // void setInsetRight(float rightInset)
    self->setInsetRight((float)arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getInsetRight(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // float getInsetRight()
    float ret = (float)self->getInsetRight();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_setInsetBottom(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    lua_Number arg1 = 0;   /** bottomInset */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_number(L, 2, &arg1);

    // void setInsetBottom(float bottomInset)
    self->setInsetBottom((float)arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getInsetBottom(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // float getInsetBottom()
    float ret = (float)self->getInsetBottom();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_setScale9Enabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    bool arg1 = false;   /** enabled */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_bool(L, 2, &arg1);

    // void setScale9Enabled(bool enabled)
    self->setScale9Enabled(arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_isScale9Enabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // bool isScale9Enabled()
    bool ret = (bool)self->isScale9Enabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_getSprite(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // Sprite* getSprite()
    cocos2d::Sprite *ret = (cocos2d::Sprite *)self->getSprite();
    int num_ret = olua_push_cppobj<cocos2d::Sprite>(L, ret, "cc.Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_copyTo(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::ui::Scale9Sprite *arg1 = nullptr;   /** copy */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "ccui.Scale9Sprite");

    // void copyTo(Scale9Sprite* copy)
    self->copyTo(arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_setRenderingType(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    lua_Unsigned arg1 = 0;   /** type */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_uint(L, 2, &arg1);

    // void setRenderingType(RenderingType type)
    self->setRenderingType((cocos2d::ui::Scale9Sprite::RenderingType)arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getRenderingType(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // RenderingType getRenderingType()
    cocos2d::ui::Scale9Sprite::RenderingType ret = (cocos2d::ui::Scale9Sprite::RenderingType)self->getRenderingType();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_setCapInsets(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Rect arg1;       /** insets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    manual_luacv_check_cocos2d_Rect(L, 2, &arg1);

    // void setCapInsets(const Rect& insets)
    self->setCapInsets(arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getCapInsets(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // Rect getCapInsets()
    cocos2d::Rect ret = (cocos2d::Rect)self->getCapInsets();
    int num_ret = manual_luacv_push_cocos2d_Rect(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_resetRender(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // void resetRender()
    self->resetRender();

    return 0;
}

static int luaopen_cocos2d_ui_Scale9Sprite(lua_State *L)
{
    oluacls_class(L, "ccui.Scale9Sprite", "cc.Sprite");
    oluacls_setfunc(L, "create", _cocos2d_ui_Scale9Sprite_create);
    oluacls_setfunc(L, "createWithSpriteFrame", _cocos2d_ui_Scale9Sprite_createWithSpriteFrame);
    oluacls_setfunc(L, "createWithSpriteFrameName", _cocos2d_ui_Scale9Sprite_createWithSpriteFrameName);
    oluacls_setfunc(L, "initWithFile", _cocos2d_ui_Scale9Sprite_initWithFile);
    oluacls_setfunc(L, "initWithSpriteFrame", _cocos2d_ui_Scale9Sprite_initWithSpriteFrame);
    oluacls_setfunc(L, "initWithSpriteFrameName", _cocos2d_ui_Scale9Sprite_initWithSpriteFrameName);
    oluacls_setfunc(L, "init", _cocos2d_ui_Scale9Sprite_init);
    oluacls_setfunc(L, "resizableSpriteWithCapInsets", _cocos2d_ui_Scale9Sprite_resizableSpriteWithCapInsets);
    oluacls_setfunc(L, "updateWithSprite", _cocos2d_ui_Scale9Sprite_updateWithSprite);
    oluacls_setfunc(L, "setSpriteFrame", _cocos2d_ui_Scale9Sprite_setSpriteFrame);
    oluacls_setfunc(L, "setState", _cocos2d_ui_Scale9Sprite_setState);
    oluacls_setfunc(L, "getState", _cocos2d_ui_Scale9Sprite_getState);
    oluacls_setfunc(L, "getOriginalSize", _cocos2d_ui_Scale9Sprite_getOriginalSize);
    oluacls_setfunc(L, "setPreferredSize", _cocos2d_ui_Scale9Sprite_setPreferredSize);
    oluacls_setfunc(L, "getPreferredSize", _cocos2d_ui_Scale9Sprite_getPreferredSize);
    oluacls_setfunc(L, "setInsetLeft", _cocos2d_ui_Scale9Sprite_setInsetLeft);
    oluacls_setfunc(L, "getInsetLeft", _cocos2d_ui_Scale9Sprite_getInsetLeft);
    oluacls_setfunc(L, "setInsetTop", _cocos2d_ui_Scale9Sprite_setInsetTop);
    oluacls_setfunc(L, "getInsetTop", _cocos2d_ui_Scale9Sprite_getInsetTop);
    oluacls_setfunc(L, "setInsetRight", _cocos2d_ui_Scale9Sprite_setInsetRight);
    oluacls_setfunc(L, "getInsetRight", _cocos2d_ui_Scale9Sprite_getInsetRight);
    oluacls_setfunc(L, "setInsetBottom", _cocos2d_ui_Scale9Sprite_setInsetBottom);
    oluacls_setfunc(L, "getInsetBottom", _cocos2d_ui_Scale9Sprite_getInsetBottom);
    oluacls_setfunc(L, "setScale9Enabled", _cocos2d_ui_Scale9Sprite_setScale9Enabled);
    oluacls_setfunc(L, "isScale9Enabled", _cocos2d_ui_Scale9Sprite_isScale9Enabled);
    oluacls_setfunc(L, "getSprite", _cocos2d_ui_Scale9Sprite_getSprite);
    oluacls_setfunc(L, "copyTo", _cocos2d_ui_Scale9Sprite_copyTo);
    oluacls_setfunc(L, "setRenderingType", _cocos2d_ui_Scale9Sprite_setRenderingType);
    oluacls_setfunc(L, "getRenderingType", _cocos2d_ui_Scale9Sprite_getRenderingType);
    oluacls_setfunc(L, "setCapInsets", _cocos2d_ui_Scale9Sprite_setCapInsets);
    oluacls_setfunc(L, "getCapInsets", _cocos2d_ui_Scale9Sprite_getCapInsets);
    oluacls_setfunc(L, "resetRender", _cocos2d_ui_Scale9Sprite_resetRender);
    oluacls_property(L, "state", _cocos2d_ui_Scale9Sprite_getState, _cocos2d_ui_Scale9Sprite_setState);
    oluacls_property(L, "originalSize", _cocos2d_ui_Scale9Sprite_getOriginalSize, nullptr);
    oluacls_property(L, "insetLeft", _cocos2d_ui_Scale9Sprite_getInsetLeft, _cocos2d_ui_Scale9Sprite_setInsetLeft);
    oluacls_property(L, "insetTop", _cocos2d_ui_Scale9Sprite_getInsetTop, _cocos2d_ui_Scale9Sprite_setInsetTop);
    oluacls_property(L, "insetRight", _cocos2d_ui_Scale9Sprite_getInsetRight, _cocos2d_ui_Scale9Sprite_setInsetRight);
    oluacls_property(L, "insetBottom", _cocos2d_ui_Scale9Sprite_getInsetBottom, _cocos2d_ui_Scale9Sprite_setInsetBottom);
    oluacls_property(L, "scale9Enabled", _cocos2d_ui_Scale9Sprite_isScale9Enabled, _cocos2d_ui_Scale9Sprite_setScale9Enabled);
    oluacls_property(L, "sprite", _cocos2d_ui_Scale9Sprite_getSprite, nullptr);
    oluacls_property(L, "renderingType", _cocos2d_ui_Scale9Sprite_getRenderingType, _cocos2d_ui_Scale9Sprite_setRenderingType);

    olua_registerluatype<cocos2d::ui::Scale9Sprite>(L, "ccui.Scale9Sprite");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_LayoutComponent_HorizontalEdge(lua_State *L)
{
    oluacls_class(L, "ccui.LayoutComponent.HorizontalEdge", nullptr);
    oluacls_const_integer(L, "None", (lua_Integer)cocos2d::ui::LayoutComponent::HorizontalEdge::None);
    oluacls_const_integer(L, "Left", (lua_Integer)cocos2d::ui::LayoutComponent::HorizontalEdge::Left);
    oluacls_const_integer(L, "Right", (lua_Integer)cocos2d::ui::LayoutComponent::HorizontalEdge::Right);
    oluacls_const_integer(L, "Center", (lua_Integer)cocos2d::ui::LayoutComponent::HorizontalEdge::Center);

    olua_registerluatype<cocos2d::ui::LayoutComponent::HorizontalEdge>(L, "ccui.LayoutComponent.HorizontalEdge");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_LayoutComponent_VerticalEdge(lua_State *L)
{
    oluacls_class(L, "ccui.LayoutComponent.VerticalEdge", nullptr);
    oluacls_const_integer(L, "None", (lua_Integer)cocos2d::ui::LayoutComponent::VerticalEdge::None);
    oluacls_const_integer(L, "Bottom", (lua_Integer)cocos2d::ui::LayoutComponent::VerticalEdge::Bottom);
    oluacls_const_integer(L, "Top", (lua_Integer)cocos2d::ui::LayoutComponent::VerticalEdge::Top);
    oluacls_const_integer(L, "Center", (lua_Integer)cocos2d::ui::LayoutComponent::VerticalEdge::Center);

    olua_registerluatype<cocos2d::ui::LayoutComponent::VerticalEdge>(L, "ccui.LayoutComponent.VerticalEdge");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_LayoutComponent_create(lua_State *L)
{
    lua_settop(L, 0);

    // static LayoutComponent* create()
    cocos2d::ui::LayoutComponent *ret = (cocos2d::ui::LayoutComponent *)cocos2d::ui::LayoutComponent::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::LayoutComponent>(L, ret, "ccui.LayoutComponent");

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_bindLayoutComponent(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::Node *arg1 = nullptr;   /** node */

    olua_check_cppobj(L, 1, (void **)&arg1, "cc.Node");

    // static LayoutComponent* bindLayoutComponent(Node* node)
    cocos2d::ui::LayoutComponent *ret = (cocos2d::ui::LayoutComponent *)cocos2d::ui::LayoutComponent::bindLayoutComponent(arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::LayoutComponent>(L, ret, "ccui.LayoutComponent");

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setUsingPercentContentSize(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** isUsed */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setUsingPercentContentSize(bool isUsed)
    self->setUsingPercentContentSize(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getUsingPercentContentSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // bool getUsingPercentContentSize()
    bool ret = (bool)self->getUsingPercentContentSize();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPercentContentSize(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    cocos2d::Vec2 arg1;       /** percent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);

    // void setPercentContentSize(const Vec2 &percent)
    self->setPercentContentSize(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getPercentContentSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // Vec2 getPercentContentSize()
    cocos2d::Vec2 ret = (cocos2d::Vec2)self->getPercentContentSize();
    int num_ret = auto_luacv_push_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_getAnchorPosition(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // const Point& getAnchorPosition()
    const cocos2d::Point &ret = (const cocos2d::Point &)self->getAnchorPosition();
    int num_ret = auto_luacv_push_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setAnchorPosition(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    cocos2d::Point arg1;       /** point */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);

    // void setAnchorPosition(const Point& point)
    self->setAnchorPosition(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getPosition(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // const Point& getPosition()
    const cocos2d::Point &ret = (const cocos2d::Point &)self->getPosition();
    int num_ret = auto_luacv_push_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPosition(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    cocos2d::Point arg1;       /** position */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);

    // void setPosition(const Point& position)
    self->setPosition(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_isPositionPercentXEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // bool isPositionPercentXEnabled()
    bool ret = (bool)self->isPositionPercentXEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPositionPercentXEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** isUsed */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setPositionPercentXEnabled(bool isUsed)
    self->setPositionPercentXEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getPositionPercentX(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getPositionPercentX()
    float ret = (float)self->getPositionPercentX();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPositionPercentX(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** percentMargin */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setPositionPercentX(float percentMargin)
    self->setPositionPercentX((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_isPositionPercentYEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // bool isPositionPercentYEnabled()
    bool ret = (bool)self->isPositionPercentYEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPositionPercentYEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** isUsed */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setPositionPercentYEnabled(bool isUsed)
    self->setPositionPercentYEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getPositionPercentY(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getPositionPercentY()
    float ret = (float)self->getPositionPercentY();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPositionPercentY(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** percentMargin */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setPositionPercentY(float percentMargin)
    self->setPositionPercentY((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getHorizontalEdge(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // HorizontalEdge getHorizontalEdge()
    cocos2d::ui::LayoutComponent::HorizontalEdge ret = (cocos2d::ui::LayoutComponent::HorizontalEdge)self->getHorizontalEdge();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setHorizontalEdge(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Unsigned arg1 = 0;   /** hEage */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_uint(L, 2, &arg1);

    // void setHorizontalEdge(HorizontalEdge hEage)
    self->setHorizontalEdge((cocos2d::ui::LayoutComponent::HorizontalEdge)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getVerticalEdge(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // VerticalEdge getVerticalEdge()
    cocos2d::ui::LayoutComponent::VerticalEdge ret = (cocos2d::ui::LayoutComponent::VerticalEdge)self->getVerticalEdge();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setVerticalEdge(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Unsigned arg1 = 0;   /** vEage */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_uint(L, 2, &arg1);

    // void setVerticalEdge(VerticalEdge vEage)
    self->setVerticalEdge((cocos2d::ui::LayoutComponent::VerticalEdge)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getLeftMargin(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getLeftMargin()
    float ret = (float)self->getLeftMargin();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setLeftMargin(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** margin */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setLeftMargin(float margin)
    self->setLeftMargin((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getRightMargin(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getRightMargin()
    float ret = (float)self->getRightMargin();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setRightMargin(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** margin */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setRightMargin(float margin)
    self->setRightMargin((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getTopMargin(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getTopMargin()
    float ret = (float)self->getTopMargin();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setTopMargin(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** margin */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setTopMargin(float margin)
    self->setTopMargin((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getBottomMargin(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getBottomMargin()
    float ret = (float)self->getBottomMargin();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setBottomMargin(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** margin */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setBottomMargin(float margin)
    self->setBottomMargin((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // const Size& getSize()
    const cocos2d::Size &ret = (const cocos2d::Size &)self->getSize();
    int num_ret = auto_luacv_push_cocos2d_Size(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setSize(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    cocos2d::Size arg1;       /** size */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    auto_luacv_check_cocos2d_Size(L, 2, &arg1);

    // void setSize(const Size& size)
    self->setSize(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_isPercentWidthEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // bool isPercentWidthEnabled()
    bool ret = (bool)self->isPercentWidthEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPercentWidthEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** isUsed */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setPercentWidthEnabled(bool isUsed)
    self->setPercentWidthEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getSizeWidth(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getSizeWidth()
    float ret = (float)self->getSizeWidth();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setSizeWidth(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** width */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setSizeWidth(float width)
    self->setSizeWidth((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getPercentWidth(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getPercentWidth()
    float ret = (float)self->getPercentWidth();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPercentWidth(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** percentWidth */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setPercentWidth(float percentWidth)
    self->setPercentWidth((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_isPercentHeightEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // bool isPercentHeightEnabled()
    bool ret = (bool)self->isPercentHeightEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPercentHeightEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** isUsed */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setPercentHeightEnabled(bool isUsed)
    self->setPercentHeightEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getSizeHeight(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getSizeHeight()
    float ret = (float)self->getSizeHeight();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setSizeHeight(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** height */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setSizeHeight(float height)
    self->setSizeHeight((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getPercentHeight(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getPercentHeight()
    float ret = (float)self->getPercentHeight();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPercentHeight(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** percentHeight */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setPercentHeight(float percentHeight)
    self->setPercentHeight((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_isStretchWidthEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // bool isStretchWidthEnabled()
    bool ret = (bool)self->isStretchWidthEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setStretchWidthEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** isUsed */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setStretchWidthEnabled(bool isUsed)
    self->setStretchWidthEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_isStretchHeightEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // bool isStretchHeightEnabled()
    bool ret = (bool)self->isStretchHeightEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setStretchHeightEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** isUsed */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setStretchHeightEnabled(bool isUsed)
    self->setStretchHeightEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_setPercentOnlyEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** enable */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setPercentOnlyEnabled(bool enable)
    self->setPercentOnlyEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_setActiveEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** enable */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setActiveEnabled(bool enable)
    self->setActiveEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_refreshLayout(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // void refreshLayout()
    self->refreshLayout();

    return 0;
}

static int luaopen_cocos2d_ui_LayoutComponent(lua_State *L)
{
    oluacls_class(L, "ccui.LayoutComponent", "cc.Component");
    oluacls_setfunc(L, "create", _cocos2d_ui_LayoutComponent_create);
    oluacls_setfunc(L, "bindLayoutComponent", _cocos2d_ui_LayoutComponent_bindLayoutComponent);
    oluacls_setfunc(L, "setUsingPercentContentSize", _cocos2d_ui_LayoutComponent_setUsingPercentContentSize);
    oluacls_setfunc(L, "getUsingPercentContentSize", _cocos2d_ui_LayoutComponent_getUsingPercentContentSize);
    oluacls_setfunc(L, "setPercentContentSize", _cocos2d_ui_LayoutComponent_setPercentContentSize);
    oluacls_setfunc(L, "getPercentContentSize", _cocos2d_ui_LayoutComponent_getPercentContentSize);
    oluacls_setfunc(L, "getAnchorPosition", _cocos2d_ui_LayoutComponent_getAnchorPosition);
    oluacls_setfunc(L, "setAnchorPosition", _cocos2d_ui_LayoutComponent_setAnchorPosition);
    oluacls_setfunc(L, "getPosition", _cocos2d_ui_LayoutComponent_getPosition);
    oluacls_setfunc(L, "setPosition", _cocos2d_ui_LayoutComponent_setPosition);
    oluacls_setfunc(L, "isPositionPercentXEnabled", _cocos2d_ui_LayoutComponent_isPositionPercentXEnabled);
    oluacls_setfunc(L, "setPositionPercentXEnabled", _cocos2d_ui_LayoutComponent_setPositionPercentXEnabled);
    oluacls_setfunc(L, "getPositionPercentX", _cocos2d_ui_LayoutComponent_getPositionPercentX);
    oluacls_setfunc(L, "setPositionPercentX", _cocos2d_ui_LayoutComponent_setPositionPercentX);
    oluacls_setfunc(L, "isPositionPercentYEnabled", _cocos2d_ui_LayoutComponent_isPositionPercentYEnabled);
    oluacls_setfunc(L, "setPositionPercentYEnabled", _cocos2d_ui_LayoutComponent_setPositionPercentYEnabled);
    oluacls_setfunc(L, "getPositionPercentY", _cocos2d_ui_LayoutComponent_getPositionPercentY);
    oluacls_setfunc(L, "setPositionPercentY", _cocos2d_ui_LayoutComponent_setPositionPercentY);
    oluacls_setfunc(L, "getHorizontalEdge", _cocos2d_ui_LayoutComponent_getHorizontalEdge);
    oluacls_setfunc(L, "setHorizontalEdge", _cocos2d_ui_LayoutComponent_setHorizontalEdge);
    oluacls_setfunc(L, "getVerticalEdge", _cocos2d_ui_LayoutComponent_getVerticalEdge);
    oluacls_setfunc(L, "setVerticalEdge", _cocos2d_ui_LayoutComponent_setVerticalEdge);
    oluacls_setfunc(L, "getLeftMargin", _cocos2d_ui_LayoutComponent_getLeftMargin);
    oluacls_setfunc(L, "setLeftMargin", _cocos2d_ui_LayoutComponent_setLeftMargin);
    oluacls_setfunc(L, "getRightMargin", _cocos2d_ui_LayoutComponent_getRightMargin);
    oluacls_setfunc(L, "setRightMargin", _cocos2d_ui_LayoutComponent_setRightMargin);
    oluacls_setfunc(L, "getTopMargin", _cocos2d_ui_LayoutComponent_getTopMargin);
    oluacls_setfunc(L, "setTopMargin", _cocos2d_ui_LayoutComponent_setTopMargin);
    oluacls_setfunc(L, "getBottomMargin", _cocos2d_ui_LayoutComponent_getBottomMargin);
    oluacls_setfunc(L, "setBottomMargin", _cocos2d_ui_LayoutComponent_setBottomMargin);
    oluacls_setfunc(L, "getSize", _cocos2d_ui_LayoutComponent_getSize);
    oluacls_setfunc(L, "setSize", _cocos2d_ui_LayoutComponent_setSize);
    oluacls_setfunc(L, "isPercentWidthEnabled", _cocos2d_ui_LayoutComponent_isPercentWidthEnabled);
    oluacls_setfunc(L, "setPercentWidthEnabled", _cocos2d_ui_LayoutComponent_setPercentWidthEnabled);
    oluacls_setfunc(L, "getSizeWidth", _cocos2d_ui_LayoutComponent_getSizeWidth);
    oluacls_setfunc(L, "setSizeWidth", _cocos2d_ui_LayoutComponent_setSizeWidth);
    oluacls_setfunc(L, "getPercentWidth", _cocos2d_ui_LayoutComponent_getPercentWidth);
    oluacls_setfunc(L, "setPercentWidth", _cocos2d_ui_LayoutComponent_setPercentWidth);
    oluacls_setfunc(L, "isPercentHeightEnabled", _cocos2d_ui_LayoutComponent_isPercentHeightEnabled);
    oluacls_setfunc(L, "setPercentHeightEnabled", _cocos2d_ui_LayoutComponent_setPercentHeightEnabled);
    oluacls_setfunc(L, "getSizeHeight", _cocos2d_ui_LayoutComponent_getSizeHeight);
    oluacls_setfunc(L, "setSizeHeight", _cocos2d_ui_LayoutComponent_setSizeHeight);
    oluacls_setfunc(L, "getPercentHeight", _cocos2d_ui_LayoutComponent_getPercentHeight);
    oluacls_setfunc(L, "setPercentHeight", _cocos2d_ui_LayoutComponent_setPercentHeight);
    oluacls_setfunc(L, "isStretchWidthEnabled", _cocos2d_ui_LayoutComponent_isStretchWidthEnabled);
    oluacls_setfunc(L, "setStretchWidthEnabled", _cocos2d_ui_LayoutComponent_setStretchWidthEnabled);
    oluacls_setfunc(L, "isStretchHeightEnabled", _cocos2d_ui_LayoutComponent_isStretchHeightEnabled);
    oluacls_setfunc(L, "setStretchHeightEnabled", _cocos2d_ui_LayoutComponent_setStretchHeightEnabled);
    oluacls_setfunc(L, "setPercentOnlyEnabled", _cocos2d_ui_LayoutComponent_setPercentOnlyEnabled);
    oluacls_setfunc(L, "setActiveEnabled", _cocos2d_ui_LayoutComponent_setActiveEnabled);
    oluacls_setfunc(L, "refreshLayout", _cocos2d_ui_LayoutComponent_refreshLayout);
    oluacls_property(L, "usingPercentContentSize", _cocos2d_ui_LayoutComponent_getUsingPercentContentSize, _cocos2d_ui_LayoutComponent_setUsingPercentContentSize);
    oluacls_property(L, "positionPercentXEnabled", _cocos2d_ui_LayoutComponent_isPositionPercentXEnabled, _cocos2d_ui_LayoutComponent_setPositionPercentXEnabled);
    oluacls_property(L, "positionPercentX", _cocos2d_ui_LayoutComponent_getPositionPercentX, _cocos2d_ui_LayoutComponent_setPositionPercentX);
    oluacls_property(L, "positionPercentYEnabled", _cocos2d_ui_LayoutComponent_isPositionPercentYEnabled, _cocos2d_ui_LayoutComponent_setPositionPercentYEnabled);
    oluacls_property(L, "positionPercentY", _cocos2d_ui_LayoutComponent_getPositionPercentY, _cocos2d_ui_LayoutComponent_setPositionPercentY);
    oluacls_property(L, "horizontalEdge", _cocos2d_ui_LayoutComponent_getHorizontalEdge, _cocos2d_ui_LayoutComponent_setHorizontalEdge);
    oluacls_property(L, "verticalEdge", _cocos2d_ui_LayoutComponent_getVerticalEdge, _cocos2d_ui_LayoutComponent_setVerticalEdge);
    oluacls_property(L, "leftMargin", _cocos2d_ui_LayoutComponent_getLeftMargin, _cocos2d_ui_LayoutComponent_setLeftMargin);
    oluacls_property(L, "rightMargin", _cocos2d_ui_LayoutComponent_getRightMargin, _cocos2d_ui_LayoutComponent_setRightMargin);
    oluacls_property(L, "topMargin", _cocos2d_ui_LayoutComponent_getTopMargin, _cocos2d_ui_LayoutComponent_setTopMargin);
    oluacls_property(L, "bottomMargin", _cocos2d_ui_LayoutComponent_getBottomMargin, _cocos2d_ui_LayoutComponent_setBottomMargin);
    oluacls_property(L, "percentWidthEnabled", _cocos2d_ui_LayoutComponent_isPercentWidthEnabled, _cocos2d_ui_LayoutComponent_setPercentWidthEnabled);
    oluacls_property(L, "sizeWidth", _cocos2d_ui_LayoutComponent_getSizeWidth, _cocos2d_ui_LayoutComponent_setSizeWidth);
    oluacls_property(L, "percentWidth", _cocos2d_ui_LayoutComponent_getPercentWidth, _cocos2d_ui_LayoutComponent_setPercentWidth);
    oluacls_property(L, "percentHeightEnabled", _cocos2d_ui_LayoutComponent_isPercentHeightEnabled, _cocos2d_ui_LayoutComponent_setPercentHeightEnabled);
    oluacls_property(L, "sizeHeight", _cocos2d_ui_LayoutComponent_getSizeHeight, _cocos2d_ui_LayoutComponent_setSizeHeight);
    oluacls_property(L, "percentHeight", _cocos2d_ui_LayoutComponent_getPercentHeight, _cocos2d_ui_LayoutComponent_setPercentHeight);
    oluacls_property(L, "stretchWidthEnabled", _cocos2d_ui_LayoutComponent_isStretchWidthEnabled, _cocos2d_ui_LayoutComponent_setStretchWidthEnabled);
    oluacls_property(L, "stretchHeightEnabled", _cocos2d_ui_LayoutComponent_isStretchHeightEnabled, _cocos2d_ui_LayoutComponent_setStretchHeightEnabled);

    olua_registerluatype<cocos2d::ui::LayoutComponent>(L, "ccui.LayoutComponent");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_LayoutParameter_Type(lua_State *L)
{
    oluacls_class(L, "ccui.LayoutParameter.Type", nullptr);
    oluacls_const_integer(L, "NONE", (lua_Integer)cocos2d::ui::LayoutParameter::Type::NONE);
    oluacls_const_integer(L, "LINEAR", (lua_Integer)cocos2d::ui::LayoutParameter::Type::LINEAR);
    oluacls_const_integer(L, "RELATIVE", (lua_Integer)cocos2d::ui::LayoutParameter::Type::RELATIVE);

    olua_registerluatype<cocos2d::ui::LayoutParameter::Type>(L, "ccui.LayoutParameter.Type");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_LayoutParameter_create(lua_State *L)
{
    lua_settop(L, 0);

    // static LayoutParameter* create()
    cocos2d::ui::LayoutParameter *ret = (cocos2d::ui::LayoutParameter *)cocos2d::ui::LayoutParameter::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::LayoutParameter>(L, ret, "ccui.LayoutParameter");

    return num_ret;
}

static int _cocos2d_ui_LayoutParameter_setMargin(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutParameter *self = nullptr;
    cocos2d::ui::Margin arg1;       /** margin */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutParameter");
    auto_luacv_check_cocos2d_ui_Margin(L, 2, &arg1);

    // void setMargin(const Margin& margin)
    self->setMargin(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutParameter_getMargin(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutParameter");

    // const Margin& getMargin()
    const cocos2d::ui::Margin &ret = (const cocos2d::ui::Margin &)self->getMargin();
    int num_ret = auto_luacv_push_cocos2d_ui_Margin(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutParameter_getLayoutType(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutParameter");

    // Type getLayoutType()
    cocos2d::ui::LayoutParameter::Type ret = (cocos2d::ui::LayoutParameter::Type)self->getLayoutType();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutParameter_clone(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutParameter");

    // LayoutParameter* clone()
    cocos2d::ui::LayoutParameter *ret = (cocos2d::ui::LayoutParameter *)self->clone();
    int num_ret = olua_push_cppobj<cocos2d::ui::LayoutParameter>(L, ret, "ccui.LayoutParameter");

    return num_ret;
}

static int _cocos2d_ui_LayoutParameter_createCloneInstance(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutParameter");

    // LayoutParameter* createCloneInstance()
    cocos2d::ui::LayoutParameter *ret = (cocos2d::ui::LayoutParameter *)self->createCloneInstance();
    int num_ret = olua_push_cppobj<cocos2d::ui::LayoutParameter>(L, ret, "ccui.LayoutParameter");

    return num_ret;
}

static int _cocos2d_ui_LayoutParameter_copyProperties(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutParameter *self = nullptr;
    cocos2d::ui::LayoutParameter *arg1 = nullptr;   /** model */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutParameter");
    olua_check_cppobj(L, 2, (void **)&arg1, "ccui.LayoutParameter");

    // void copyProperties(LayoutParameter* model)
    self->copyProperties(arg1);

    return 0;
}

static int luaopen_cocos2d_ui_LayoutParameter(lua_State *L)
{
    oluacls_class(L, "ccui.LayoutParameter", "cc.Ref");
    oluacls_setfunc(L, "create", _cocos2d_ui_LayoutParameter_create);
    oluacls_setfunc(L, "setMargin", _cocos2d_ui_LayoutParameter_setMargin);
    oluacls_setfunc(L, "getMargin", _cocos2d_ui_LayoutParameter_getMargin);
    oluacls_setfunc(L, "getLayoutType", _cocos2d_ui_LayoutParameter_getLayoutType);
    oluacls_setfunc(L, "clone", _cocos2d_ui_LayoutParameter_clone);
    oluacls_setfunc(L, "createCloneInstance", _cocos2d_ui_LayoutParameter_createCloneInstance);
    oluacls_setfunc(L, "copyProperties", _cocos2d_ui_LayoutParameter_copyProperties);
    oluacls_property(L, "margin", _cocos2d_ui_LayoutParameter_getMargin, _cocos2d_ui_LayoutParameter_setMargin);
    oluacls_property(L, "layoutType", _cocos2d_ui_LayoutParameter_getLayoutType, nullptr);

    olua_registerluatype<cocos2d::ui::LayoutParameter>(L, "ccui.LayoutParameter");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_LinearLayoutParameter_LinearGravity(lua_State *L)
{
    oluacls_class(L, "ccui.LinearLayoutParameter.LinearGravity", nullptr);
    oluacls_const_integer(L, "NONE", (lua_Integer)cocos2d::ui::LinearLayoutParameter::LinearGravity::NONE);
    oluacls_const_integer(L, "LEFT", (lua_Integer)cocos2d::ui::LinearLayoutParameter::LinearGravity::LEFT);
    oluacls_const_integer(L, "TOP", (lua_Integer)cocos2d::ui::LinearLayoutParameter::LinearGravity::TOP);
    oluacls_const_integer(L, "RIGHT", (lua_Integer)cocos2d::ui::LinearLayoutParameter::LinearGravity::RIGHT);
    oluacls_const_integer(L, "BOTTOM", (lua_Integer)cocos2d::ui::LinearLayoutParameter::LinearGravity::BOTTOM);
    oluacls_const_integer(L, "CENTER_VERTICAL", (lua_Integer)cocos2d::ui::LinearLayoutParameter::LinearGravity::CENTER_VERTICAL);
    oluacls_const_integer(L, "CENTER_HORIZONTAL", (lua_Integer)cocos2d::ui::LinearLayoutParameter::LinearGravity::CENTER_HORIZONTAL);

    olua_registerluatype<cocos2d::ui::LinearLayoutParameter::LinearGravity>(L, "ccui.LinearLayoutParameter.LinearGravity");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_LinearLayoutParameter_create(lua_State *L)
{
    lua_settop(L, 0);

    // static LinearLayoutParameter* create()
    cocos2d::ui::LinearLayoutParameter *ret = (cocos2d::ui::LinearLayoutParameter *)cocos2d::ui::LinearLayoutParameter::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::LinearLayoutParameter>(L, ret, "ccui.LinearLayoutParameter");

    return num_ret;
}

static int _cocos2d_ui_LinearLayoutParameter_setGravity(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LinearLayoutParameter *self = nullptr;
    lua_Unsigned arg1 = 0;   /** gravity */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LinearLayoutParameter");
    olua_check_uint(L, 2, &arg1);

    // void setGravity(LinearGravity gravity)
    self->setGravity((cocos2d::ui::LinearLayoutParameter::LinearGravity)arg1);

    return 0;
}

static int _cocos2d_ui_LinearLayoutParameter_getGravity(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LinearLayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LinearLayoutParameter");

    // LinearGravity getGravity()
    cocos2d::ui::LinearLayoutParameter::LinearGravity ret = (cocos2d::ui::LinearLayoutParameter::LinearGravity)self->getGravity();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int luaopen_cocos2d_ui_LinearLayoutParameter(lua_State *L)
{
    oluacls_class(L, "ccui.LinearLayoutParameter", "ccui.LayoutParameter");
    oluacls_setfunc(L, "create", _cocos2d_ui_LinearLayoutParameter_create);
    oluacls_setfunc(L, "setGravity", _cocos2d_ui_LinearLayoutParameter_setGravity);
    oluacls_setfunc(L, "getGravity", _cocos2d_ui_LinearLayoutParameter_getGravity);
    oluacls_property(L, "gravity", _cocos2d_ui_LinearLayoutParameter_getGravity, _cocos2d_ui_LinearLayoutParameter_setGravity);

    olua_registerluatype<cocos2d::ui::LinearLayoutParameter>(L, "ccui.LinearLayoutParameter");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_RelativeLayoutParameter_RelativeAlign(lua_State *L)
{
    oluacls_class(L, "ccui.RelativeLayoutParameter.RelativeAlign", nullptr);
    oluacls_const_integer(L, "NONE", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::NONE);
    oluacls_const_integer(L, "PARENT_TOP_LEFT", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_TOP_LEFT);
    oluacls_const_integer(L, "PARENT_TOP_CENTER_HORIZONTAL", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_TOP_CENTER_HORIZONTAL);
    oluacls_const_integer(L, "PARENT_TOP_RIGHT", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_TOP_RIGHT);
    oluacls_const_integer(L, "PARENT_LEFT_CENTER_VERTICAL", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_LEFT_CENTER_VERTICAL);
    oluacls_const_integer(L, "CENTER_IN_PARENT", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::CENTER_IN_PARENT);
    oluacls_const_integer(L, "PARENT_RIGHT_CENTER_VERTICAL", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_RIGHT_CENTER_VERTICAL);
    oluacls_const_integer(L, "PARENT_LEFT_BOTTOM", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_LEFT_BOTTOM);
    oluacls_const_integer(L, "PARENT_BOTTOM_CENTER_HORIZONTAL", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_BOTTOM_CENTER_HORIZONTAL);
    oluacls_const_integer(L, "PARENT_RIGHT_BOTTOM", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_RIGHT_BOTTOM);
    oluacls_const_integer(L, "LOCATION_ABOVE_LEFTALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_ABOVE_LEFTALIGN);
    oluacls_const_integer(L, "LOCATION_ABOVE_CENTER", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_ABOVE_CENTER);
    oluacls_const_integer(L, "LOCATION_ABOVE_RIGHTALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_ABOVE_RIGHTALIGN);
    oluacls_const_integer(L, "LOCATION_LEFT_OF_TOPALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_LEFT_OF_TOPALIGN);
    oluacls_const_integer(L, "LOCATION_LEFT_OF_CENTER", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_LEFT_OF_CENTER);
    oluacls_const_integer(L, "LOCATION_LEFT_OF_BOTTOMALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_LEFT_OF_BOTTOMALIGN);
    oluacls_const_integer(L, "LOCATION_RIGHT_OF_TOPALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_RIGHT_OF_TOPALIGN);
    oluacls_const_integer(L, "LOCATION_RIGHT_OF_CENTER", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_RIGHT_OF_CENTER);
    oluacls_const_integer(L, "LOCATION_RIGHT_OF_BOTTOMALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_RIGHT_OF_BOTTOMALIGN);
    oluacls_const_integer(L, "LOCATION_BELOW_LEFTALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_BELOW_LEFTALIGN);
    oluacls_const_integer(L, "LOCATION_BELOW_CENTER", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_BELOW_CENTER);
    oluacls_const_integer(L, "LOCATION_BELOW_RIGHTALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_BELOW_RIGHTALIGN);

    olua_registerluatype<cocos2d::ui::RelativeLayoutParameter::RelativeAlign>(L, "ccui.RelativeLayoutParameter.RelativeAlign");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_RelativeLayoutParameter_create(lua_State *L)
{
    lua_settop(L, 0);

    // static RelativeLayoutParameter* create()
    cocos2d::ui::RelativeLayoutParameter *ret = (cocos2d::ui::RelativeLayoutParameter *)cocos2d::ui::RelativeLayoutParameter::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::RelativeLayoutParameter>(L, ret, "ccui.RelativeLayoutParameter");

    return num_ret;
}

static int _cocos2d_ui_RelativeLayoutParameter_setAlign(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::RelativeLayoutParameter *self = nullptr;
    lua_Unsigned arg1 = 0;   /** align */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.RelativeLayoutParameter");
    olua_check_uint(L, 2, &arg1);

    // void setAlign(RelativeAlign align)
    self->setAlign((cocos2d::ui::RelativeLayoutParameter::RelativeAlign)arg1);

    return 0;
}

static int _cocos2d_ui_RelativeLayoutParameter_getAlign(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::RelativeLayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.RelativeLayoutParameter");

    // RelativeAlign getAlign()
    cocos2d::ui::RelativeLayoutParameter::RelativeAlign ret = (cocos2d::ui::RelativeLayoutParameter::RelativeAlign)self->getAlign();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_RelativeLayoutParameter_setRelativeToWidgetName(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::RelativeLayoutParameter *self = nullptr;
    std::string arg1;       /** name */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.RelativeLayoutParameter");
    olua_check_std_string(L, 2, &arg1);

    // void setRelativeToWidgetName(const std::string& name)
    self->setRelativeToWidgetName(arg1);

    return 0;
}

static int _cocos2d_ui_RelativeLayoutParameter_getRelativeToWidgetName(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::RelativeLayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.RelativeLayoutParameter");

    // const std::string& getRelativeToWidgetName()
    const std::string &ret = (const std::string &)self->getRelativeToWidgetName();
    int num_ret = olua_push_std_string(L, ret);

    return num_ret;
}

static int _cocos2d_ui_RelativeLayoutParameter_setRelativeName(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::RelativeLayoutParameter *self = nullptr;
    std::string arg1;       /** name */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.RelativeLayoutParameter");
    olua_check_std_string(L, 2, &arg1);

    // void setRelativeName(const std::string& name)
    self->setRelativeName(arg1);

    return 0;
}

static int _cocos2d_ui_RelativeLayoutParameter_getRelativeName(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::RelativeLayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.RelativeLayoutParameter");

    // const std::string& getRelativeName()
    const std::string &ret = (const std::string &)self->getRelativeName();
    int num_ret = olua_push_std_string(L, ret);

    return num_ret;
}

static int luaopen_cocos2d_ui_RelativeLayoutParameter(lua_State *L)
{
    oluacls_class(L, "ccui.RelativeLayoutParameter", "ccui.LayoutParameter");
    oluacls_setfunc(L, "create", _cocos2d_ui_RelativeLayoutParameter_create);
    oluacls_setfunc(L, "setAlign", _cocos2d_ui_RelativeLayoutParameter_setAlign);
    oluacls_setfunc(L, "getAlign", _cocos2d_ui_RelativeLayoutParameter_getAlign);
    oluacls_setfunc(L, "setRelativeToWidgetName", _cocos2d_ui_RelativeLayoutParameter_setRelativeToWidgetName);
    oluacls_setfunc(L, "getRelativeToWidgetName", _cocos2d_ui_RelativeLayoutParameter_getRelativeToWidgetName);
    oluacls_setfunc(L, "setRelativeName", _cocos2d_ui_RelativeLayoutParameter_setRelativeName);
    oluacls_setfunc(L, "getRelativeName", _cocos2d_ui_RelativeLayoutParameter_getRelativeName);
    oluacls_property(L, "align", _cocos2d_ui_RelativeLayoutParameter_getAlign, _cocos2d_ui_RelativeLayoutParameter_setAlign);
    oluacls_property(L, "relativeToWidgetName", _cocos2d_ui_RelativeLayoutParameter_getRelativeToWidgetName, _cocos2d_ui_RelativeLayoutParameter_setRelativeToWidgetName);
    oluacls_property(L, "relativeName", _cocos2d_ui_RelativeLayoutParameter_getRelativeName, _cocos2d_ui_RelativeLayoutParameter_setRelativeName);

    olua_registerluatype<cocos2d::ui::RelativeLayoutParameter>(L, "ccui.RelativeLayoutParameter");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Layout_Type(lua_State *L)
{
    oluacls_class(L, "ccui.Layout.Type", nullptr);
    oluacls_const_integer(L, "ABSOLUTE", (lua_Integer)cocos2d::ui::Layout::Type::ABSOLUTE);
    oluacls_const_integer(L, "VERTICAL", (lua_Integer)cocos2d::ui::Layout::Type::VERTICAL);
    oluacls_const_integer(L, "HORIZONTAL", (lua_Integer)cocos2d::ui::Layout::Type::HORIZONTAL);
    oluacls_const_integer(L, "RELATIVE", (lua_Integer)cocos2d::ui::Layout::Type::RELATIVE);

    olua_registerluatype<cocos2d::ui::Layout::Type>(L, "ccui.Layout.Type");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Layout_ClippingType(lua_State *L)
{
    oluacls_class(L, "ccui.Layout.ClippingType", nullptr);
    oluacls_const_integer(L, "STENCIL", (lua_Integer)cocos2d::ui::Layout::ClippingType::STENCIL);
    oluacls_const_integer(L, "SCISSOR", (lua_Integer)cocos2d::ui::Layout::ClippingType::SCISSOR);

    olua_registerluatype<cocos2d::ui::Layout::ClippingType>(L, "ccui.Layout.ClippingType");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Layout_BackGroundColorType(lua_State *L)
{
    oluacls_class(L, "ccui.Layout.BackGroundColorType", nullptr);
    oluacls_const_integer(L, "NONE", (lua_Integer)cocos2d::ui::Layout::BackGroundColorType::NONE);
    oluacls_const_integer(L, "SOLID", (lua_Integer)cocos2d::ui::Layout::BackGroundColorType::SOLID);
    oluacls_const_integer(L, "GRADIENT", (lua_Integer)cocos2d::ui::Layout::BackGroundColorType::GRADIENT);

    olua_registerluatype<cocos2d::ui::Layout::BackGroundColorType>(L, "ccui.Layout.BackGroundColorType");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_Layout_create(lua_State *L)
{
    lua_settop(L, 0);

    // static Layout* create()
    cocos2d::ui::Layout *ret = (cocos2d::ui::Layout *)cocos2d::ui::Layout::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::Layout>(L, ret, "ccui.Layout");

    return num_ret;
}

static int _cocos2d_ui_Layout_setBackGroundImage(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Layout *self = nullptr;
    std::string arg1;       /** fileName */
    lua_Unsigned arg2 = 0;   /** texType */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");
    olua_check_std_string(L, 2, &arg1);
    olua_opt_uint(L, 3, &arg2, (lua_Unsigned)cocos2d::ui::Widget::TextureResType::LOCAL);

    // void setBackGroundImage(const std::string& fileName, Widget::TextureResType texType = Widget::TextureResType::LOCAL)
    self->setBackGroundImage(arg1, (cocos2d::ui::Widget::TextureResType)arg2);

    return 0;
}

static int _cocos2d_ui_Layout_setBackGroundImageCapInsets(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Layout *self = nullptr;
    cocos2d::Rect arg1;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");
    manual_luacv_check_cocos2d_Rect(L, 2, &arg1);

    // void setBackGroundImageCapInsets(const Rect& capInsets)
    self->setBackGroundImageCapInsets(arg1);

    return 0;
}

static int _cocos2d_ui_Layout_getBackGroundImageCapInsets(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // const Rect& getBackGroundImageCapInsets()
    const cocos2d::Rect &ret = (const cocos2d::Rect &)self->getBackGroundImageCapInsets();
    int num_ret = manual_luacv_push_cocos2d_Rect(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_setBackGroundColorType(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Layout *self = nullptr;
    lua_Unsigned arg1 = 0;   /** type */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");
    olua_check_uint(L, 2, &arg1);

    // void setBackGroundColorType(BackGroundColorType type)
    self->setBackGroundColorType((cocos2d::ui::Layout::BackGroundColorType)arg1);

    return 0;
}

static int _cocos2d_ui_Layout_getBackGroundColorType(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // BackGroundColorType getBackGroundColorType()
    cocos2d::ui::Layout::BackGroundColorType ret = (cocos2d::ui::Layout::BackGroundColorType)self->getBackGroundColorType();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_setBackGroundImageScale9Enabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Layout *self = nullptr;
    bool arg1 = false;   /** enabled */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");
    olua_check_bool(L, 2, &arg1);

    // void setBackGroundImageScale9Enabled(bool enabled)
    self->setBackGroundImageScale9Enabled(arg1);

    return 0;
}

static int _cocos2d_ui_Layout_isBackGroundImageScale9Enabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // bool isBackGroundImageScale9Enabled()
    bool ret = (bool)self->isBackGroundImageScale9Enabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_setBackGroundColor1(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Layout *self = nullptr;
    cocos2d::Color3B arg1;       /** color */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");
    manual_luacv_check_cocos2d_Color3B(L, 2, &arg1);

    // void setBackGroundColor(const Color3B &color)
    self->setBackGroundColor(arg1);

    return 0;
}

static int _cocos2d_ui_Layout_setBackGroundColor2(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Layout *self = nullptr;
    cocos2d::Color3B arg1;       /** startColor */
    cocos2d::Color3B arg2;       /** endColor */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");
    manual_luacv_check_cocos2d_Color3B(L, 2, &arg1);
    manual_luacv_check_cocos2d_Color3B(L, 3, &arg2);

    // void setBackGroundColor(const Color3B &startColor, const Color3B &endColor)
    self->setBackGroundColor(arg1, arg2);

    return 0;
}

static int _cocos2d_ui_Layout_setBackGroundColor(lua_State *L)
{
    int num_args = lua_gettop(L) - 1;

    if (num_args == 1) {
        // if (manual_luacv_is_cocos2d_Color3B(L, 2)) {
            return _cocos2d_ui_Layout_setBackGroundColor1(L);
        // }
    }

    if (num_args == 2) {
        // if (manual_luacv_is_cocos2d_Color3B(L, 2) && manual_luacv_is_cocos2d_Color3B(L, 3)) {
            return _cocos2d_ui_Layout_setBackGroundColor2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Layout::setBackGroundColor' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Layout_getBackGroundColor(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // const Color3B& getBackGroundColor()
    const cocos2d::Color3B &ret = (const cocos2d::Color3B &)self->getBackGroundColor();
    int num_ret = manual_luacv_push_cocos2d_Color3B(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_getBackGroundStartColor(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // const Color3B& getBackGroundStartColor()
    const cocos2d::Color3B &ret = (const cocos2d::Color3B &)self->getBackGroundStartColor();
    int num_ret = manual_luacv_push_cocos2d_Color3B(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_getBackGroundEndColor(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // const Color3B& getBackGroundEndColor()
    const cocos2d::Color3B &ret = (const cocos2d::Color3B &)self->getBackGroundEndColor();
    int num_ret = manual_luacv_push_cocos2d_Color3B(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_setBackGroundColorOpacity(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Layout *self = nullptr;
    lua_Unsigned arg1 = 0;   /** opacity */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");
    olua_check_uint(L, 2, &arg1);

    // void setBackGroundColorOpacity(GLubyte opacity)
    self->setBackGroundColorOpacity((GLubyte)arg1);

    return 0;
}

static int _cocos2d_ui_Layout_getBackGroundColorOpacity(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // GLubyte getBackGroundColorOpacity()
    GLubyte ret = (GLubyte)self->getBackGroundColorOpacity();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_setBackGroundColorVector(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Layout *self = nullptr;
    cocos2d::Vec2 arg1;       /** vector */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);

    // void setBackGroundColorVector(Vec2 &vector)
    self->setBackGroundColorVector(arg1);

    return 0;
}

static int _cocos2d_ui_Layout_getBackGroundColorVector(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // const Vec2& getBackGroundColorVector()
    const cocos2d::Vec2 &ret = (const cocos2d::Vec2 &)self->getBackGroundColorVector();
    int num_ret = auto_luacv_push_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_setBackGroundImageColor(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Layout *self = nullptr;
    cocos2d::Color3B arg1;       /** color */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");
    manual_luacv_check_cocos2d_Color3B(L, 2, &arg1);

    // void setBackGroundImageColor(const Color3B& color)
    self->setBackGroundImageColor(arg1);

    return 0;
}

static int _cocos2d_ui_Layout_setBackGroundImageOpacity(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Layout *self = nullptr;
    lua_Unsigned arg1 = 0;   /** opacity */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");
    olua_check_uint(L, 2, &arg1);

    // void setBackGroundImageOpacity(GLubyte opacity)
    self->setBackGroundImageOpacity((GLubyte)arg1);

    return 0;
}

static int _cocos2d_ui_Layout_getBackGroundImageColor(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // const Color3B& getBackGroundImageColor()
    const cocos2d::Color3B &ret = (const cocos2d::Color3B &)self->getBackGroundImageColor();
    int num_ret = manual_luacv_push_cocos2d_Color3B(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_getBackGroundImageOpacity(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // GLubyte getBackGroundImageOpacity()
    GLubyte ret = (GLubyte)self->getBackGroundImageOpacity();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_removeBackGroundImage(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // void removeBackGroundImage()
    self->removeBackGroundImage();

    return 0;
}

static int _cocos2d_ui_Layout_getBackGroundImageTextureSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // const Size& getBackGroundImageTextureSize()
    const cocos2d::Size &ret = (const cocos2d::Size &)self->getBackGroundImageTextureSize();
    int num_ret = auto_luacv_push_cocos2d_Size(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_setClippingEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Layout *self = nullptr;
    bool arg1 = false;   /** enabled */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");
    olua_check_bool(L, 2, &arg1);

    // void setClippingEnabled(bool enabled)
    self->setClippingEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_Layout_setClippingType(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Layout *self = nullptr;
    lua_Unsigned arg1 = 0;   /** type */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");
    olua_check_uint(L, 2, &arg1);

    // void setClippingType(ClippingType type)
    self->setClippingType((cocos2d::ui::Layout::ClippingType)arg1);

    return 0;
}

static int _cocos2d_ui_Layout_getClippingType(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // ClippingType getClippingType()
    cocos2d::ui::Layout::ClippingType ret = (cocos2d::ui::Layout::ClippingType)self->getClippingType();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_isClippingEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // bool isClippingEnabled()
    bool ret = (bool)self->isClippingEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_setLayoutType(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Layout *self = nullptr;
    lua_Unsigned arg1 = 0;   /** type */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");
    olua_check_uint(L, 2, &arg1);

    // void setLayoutType(Type type)
    self->setLayoutType((cocos2d::ui::Layout::Type)arg1);

    return 0;
}

static int _cocos2d_ui_Layout_getLayoutType(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // Type getLayoutType()
    cocos2d::ui::Layout::Type ret = (cocos2d::ui::Layout::Type)self->getLayoutType();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_forceDoLayout(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // void forceDoLayout()
    self->forceDoLayout();

    return 0;
}

static int _cocos2d_ui_Layout_requestDoLayout(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // void requestDoLayout()
    self->requestDoLayout();

    return 0;
}

static int _cocos2d_ui_Layout_setLoopFocus(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Layout *self = nullptr;
    bool arg1 = false;   /** loop */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");
    olua_check_bool(L, 2, &arg1);

    // void setLoopFocus(bool loop)
    self->setLoopFocus(arg1);

    return 0;
}

static int _cocos2d_ui_Layout_isLoopFocus(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // bool isLoopFocus()
    bool ret = (bool)self->isLoopFocus();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_setPassFocusToChild(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Layout *self = nullptr;
    bool arg1 = false;   /** pass */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");
    olua_check_bool(L, 2, &arg1);

    // void setPassFocusToChild(bool pass)
    self->setPassFocusToChild(arg1);

    return 0;
}

static int _cocos2d_ui_Layout_isPassFocusToChild(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // bool isPassFocusToChild()
    bool ret = (bool)self->isPassFocusToChild();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_getRenderFile(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    // ResourceData getRenderFile()
    cocos2d::ResourceData ret = (cocos2d::ResourceData)self->getRenderFile();
    int num_ret = auto_luacv_push_cocos2d_ResourceData(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_get_onPassFocusToChild(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Layout *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    void *callback_store_obj = (void *)self;
    std::string tag = olua_makecallbacktag("onPassFocusToChild");
    olua_getcallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);

    // <function var>
    std::function<int(cocos2d::ui::Widget::FocusDirection, cocos2d::ui::Widget *)> ret = (std::function<int(cocos2d::ui::Widget::FocusDirection, cocos2d::ui::Widget *)>)self->onPassFocusToChild;
    int num_ret = olua_push_std_function(L, (std::function<int(cocos2d::ui::Widget::FocusDirection, cocos2d::ui::Widget *)>)ret);

    return num_ret;
}

static int _cocos2d_ui_Layout_set_onPassFocusToChild(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Layout *self = nullptr;
    std::function<int(cocos2d::ui::Widget::FocusDirection, cocos2d::ui::Widget *)> arg1 = nullptr;   /** onPassFocusToChild */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Layout");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("onPassFocusToChild");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::ui::Widget::FocusDirection arg1, cocos2d::ui::Widget *arg2) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);
            lua_Integer ret = 0;
            olua_push_uint(L, (lua_Unsigned)arg1);
            olua_push_cppobj<cocos2d::ui::Widget>(L, arg2, "ccui.Widget");
            olua_callback(L, callback_store_obj, func.c_str(), 2);
            olua_opt_int(L, -1, &ret, 0);

            lua_settop(L, top);
            return ret;
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("onPassFocusToChild");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // <function var>
    self->onPassFocusToChild = arg1;

    return 0;
}

static int luaopen_cocos2d_ui_Layout(lua_State *L)
{
    oluacls_class(L, "ccui.Layout", "ccui.Widget");
    oluacls_setfunc(L, "create", _cocos2d_ui_Layout_create);
    oluacls_setfunc(L, "setBackGroundImage", _cocos2d_ui_Layout_setBackGroundImage);
    oluacls_setfunc(L, "setBackGroundImageCapInsets", _cocos2d_ui_Layout_setBackGroundImageCapInsets);
    oluacls_setfunc(L, "getBackGroundImageCapInsets", _cocos2d_ui_Layout_getBackGroundImageCapInsets);
    oluacls_setfunc(L, "setBackGroundColorType", _cocos2d_ui_Layout_setBackGroundColorType);
    oluacls_setfunc(L, "getBackGroundColorType", _cocos2d_ui_Layout_getBackGroundColorType);
    oluacls_setfunc(L, "setBackGroundImageScale9Enabled", _cocos2d_ui_Layout_setBackGroundImageScale9Enabled);
    oluacls_setfunc(L, "isBackGroundImageScale9Enabled", _cocos2d_ui_Layout_isBackGroundImageScale9Enabled);
    oluacls_setfunc(L, "setBackGroundColor", _cocos2d_ui_Layout_setBackGroundColor);
    oluacls_setfunc(L, "getBackGroundColor", _cocos2d_ui_Layout_getBackGroundColor);
    oluacls_setfunc(L, "getBackGroundStartColor", _cocos2d_ui_Layout_getBackGroundStartColor);
    oluacls_setfunc(L, "getBackGroundEndColor", _cocos2d_ui_Layout_getBackGroundEndColor);
    oluacls_setfunc(L, "setBackGroundColorOpacity", _cocos2d_ui_Layout_setBackGroundColorOpacity);
    oluacls_setfunc(L, "getBackGroundColorOpacity", _cocos2d_ui_Layout_getBackGroundColorOpacity);
    oluacls_setfunc(L, "setBackGroundColorVector", _cocos2d_ui_Layout_setBackGroundColorVector);
    oluacls_setfunc(L, "getBackGroundColorVector", _cocos2d_ui_Layout_getBackGroundColorVector);
    oluacls_setfunc(L, "setBackGroundImageColor", _cocos2d_ui_Layout_setBackGroundImageColor);
    oluacls_setfunc(L, "setBackGroundImageOpacity", _cocos2d_ui_Layout_setBackGroundImageOpacity);
    oluacls_setfunc(L, "getBackGroundImageColor", _cocos2d_ui_Layout_getBackGroundImageColor);
    oluacls_setfunc(L, "getBackGroundImageOpacity", _cocos2d_ui_Layout_getBackGroundImageOpacity);
    oluacls_setfunc(L, "removeBackGroundImage", _cocos2d_ui_Layout_removeBackGroundImage);
    oluacls_setfunc(L, "getBackGroundImageTextureSize", _cocos2d_ui_Layout_getBackGroundImageTextureSize);
    oluacls_setfunc(L, "setClippingEnabled", _cocos2d_ui_Layout_setClippingEnabled);
    oluacls_setfunc(L, "setClippingType", _cocos2d_ui_Layout_setClippingType);
    oluacls_setfunc(L, "getClippingType", _cocos2d_ui_Layout_getClippingType);
    oluacls_setfunc(L, "isClippingEnabled", _cocos2d_ui_Layout_isClippingEnabled);
    oluacls_setfunc(L, "setLayoutType", _cocos2d_ui_Layout_setLayoutType);
    oluacls_setfunc(L, "getLayoutType", _cocos2d_ui_Layout_getLayoutType);
    oluacls_setfunc(L, "forceDoLayout", _cocos2d_ui_Layout_forceDoLayout);
    oluacls_setfunc(L, "requestDoLayout", _cocos2d_ui_Layout_requestDoLayout);
    oluacls_setfunc(L, "setLoopFocus", _cocos2d_ui_Layout_setLoopFocus);
    oluacls_setfunc(L, "isLoopFocus", _cocos2d_ui_Layout_isLoopFocus);
    oluacls_setfunc(L, "setPassFocusToChild", _cocos2d_ui_Layout_setPassFocusToChild);
    oluacls_setfunc(L, "isPassFocusToChild", _cocos2d_ui_Layout_isPassFocusToChild);
    oluacls_setfunc(L, "getRenderFile", _cocos2d_ui_Layout_getRenderFile);
    oluacls_property(L, "backGroundImageCapInsets", _cocos2d_ui_Layout_getBackGroundImageCapInsets, _cocos2d_ui_Layout_setBackGroundImageCapInsets);
    oluacls_property(L, "backGroundColorType", _cocos2d_ui_Layout_getBackGroundColorType, _cocos2d_ui_Layout_setBackGroundColorType);
    oluacls_property(L, "backGroundImageScale9Enabled", _cocos2d_ui_Layout_isBackGroundImageScale9Enabled, _cocos2d_ui_Layout_setBackGroundImageScale9Enabled);
    oluacls_property(L, "backGroundColor", _cocos2d_ui_Layout_getBackGroundColor, _cocos2d_ui_Layout_setBackGroundColor);
    oluacls_property(L, "backGroundStartColor", _cocos2d_ui_Layout_getBackGroundStartColor, nullptr);
    oluacls_property(L, "backGroundEndColor", _cocos2d_ui_Layout_getBackGroundEndColor, nullptr);
    oluacls_property(L, "backGroundColorOpacity", _cocos2d_ui_Layout_getBackGroundColorOpacity, _cocos2d_ui_Layout_setBackGroundColorOpacity);
    oluacls_property(L, "backGroundImageColor", _cocos2d_ui_Layout_getBackGroundImageColor, _cocos2d_ui_Layout_setBackGroundImageColor);
    oluacls_property(L, "backGroundImageOpacity", _cocos2d_ui_Layout_getBackGroundImageOpacity, _cocos2d_ui_Layout_setBackGroundImageOpacity);
    oluacls_property(L, "backGroundImageTextureSize", _cocos2d_ui_Layout_getBackGroundImageTextureSize, nullptr);
    oluacls_property(L, "clippingType", _cocos2d_ui_Layout_getClippingType, _cocos2d_ui_Layout_setClippingType);
    oluacls_property(L, "clippingEnabled", _cocos2d_ui_Layout_isClippingEnabled, _cocos2d_ui_Layout_setClippingEnabled);
    oluacls_property(L, "layoutType", _cocos2d_ui_Layout_getLayoutType, _cocos2d_ui_Layout_setLayoutType);
    oluacls_property(L, "loopFocus", _cocos2d_ui_Layout_isLoopFocus, _cocos2d_ui_Layout_setLoopFocus);
    oluacls_property(L, "passFocusToChild", _cocos2d_ui_Layout_isPassFocusToChild, _cocos2d_ui_Layout_setPassFocusToChild);
    oluacls_property(L, "renderFile", _cocos2d_ui_Layout_getRenderFile, nullptr);
    oluacls_property(L, "onPassFocusToChild", _cocos2d_ui_Layout_get_onPassFocusToChild, _cocos2d_ui_Layout_set_onPassFocusToChild);

    olua_registerluatype<cocos2d::ui::Layout>(L, "ccui.Layout");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_HBox_create1(lua_State *L)
{
    lua_settop(L, 0);

    // static HBox* create()
    cocos2d::ui::HBox *ret = (cocos2d::ui::HBox *)cocos2d::ui::HBox::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::HBox>(L, ret, "ccui.HBox");

    return num_ret;
}

static int _cocos2d_ui_HBox_create2(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::Size arg1;       /** size */

    auto_luacv_check_cocos2d_Size(L, 1, &arg1);

    // static HBox* create(Size& size)
    cocos2d::ui::HBox *ret = (cocos2d::ui::HBox *)cocos2d::ui::HBox::create(arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::HBox>(L, ret, "ccui.HBox");

    return num_ret;
}

static int _cocos2d_ui_HBox_create(lua_State *L)
{
    int num_args = lua_gettop(L);

    if (num_args == 0) {
        return _cocos2d_ui_HBox_create1(L);
    }

    if (num_args == 1) {
        // if (auto_luacv_is_cocos2d_Size(L, 1)) {
            return _cocos2d_ui_HBox_create2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::HBox::create' not support '%d' arguments", num_args);

    return 0;
}

static int luaopen_cocos2d_ui_HBox(lua_State *L)
{
    oluacls_class(L, "ccui.HBox", "ccui.Layout");
    oluacls_setfunc(L, "create", _cocos2d_ui_HBox_create);

    olua_registerluatype<cocos2d::ui::HBox>(L, "ccui.HBox");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_VBox_create1(lua_State *L)
{
    lua_settop(L, 0);

    // static VBox* create()
    cocos2d::ui::VBox *ret = (cocos2d::ui::VBox *)cocos2d::ui::VBox::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::VBox>(L, ret, "ccui.VBox");

    return num_ret;
}

static int _cocos2d_ui_VBox_create2(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::Size arg1;       /** size */

    auto_luacv_check_cocos2d_Size(L, 1, &arg1);

    // static VBox* create(Size& size)
    cocos2d::ui::VBox *ret = (cocos2d::ui::VBox *)cocos2d::ui::VBox::create(arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::VBox>(L, ret, "ccui.VBox");

    return num_ret;
}

static int _cocos2d_ui_VBox_create(lua_State *L)
{
    int num_args = lua_gettop(L);

    if (num_args == 0) {
        return _cocos2d_ui_VBox_create1(L);
    }

    if (num_args == 1) {
        // if (auto_luacv_is_cocos2d_Size(L, 1)) {
            return _cocos2d_ui_VBox_create2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::VBox::create' not support '%d' arguments", num_args);

    return 0;
}

static int luaopen_cocos2d_ui_VBox(lua_State *L)
{
    oluacls_class(L, "ccui.VBox", "ccui.Layout");
    oluacls_setfunc(L, "create", _cocos2d_ui_VBox_create);

    olua_registerluatype<cocos2d::ui::VBox>(L, "ccui.VBox");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_RelativeBox_create1(lua_State *L)
{
    lua_settop(L, 0);

    // static RelativeBox* create()
    cocos2d::ui::RelativeBox *ret = (cocos2d::ui::RelativeBox *)cocos2d::ui::RelativeBox::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::RelativeBox>(L, ret, "ccui.RelativeBox");

    return num_ret;
}

static int _cocos2d_ui_RelativeBox_create2(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::Size arg1;       /** size */

    auto_luacv_check_cocos2d_Size(L, 1, &arg1);

    // static RelativeBox* create(Size& size)
    cocos2d::ui::RelativeBox *ret = (cocos2d::ui::RelativeBox *)cocos2d::ui::RelativeBox::create(arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::RelativeBox>(L, ret, "ccui.RelativeBox");

    return num_ret;
}

static int _cocos2d_ui_RelativeBox_create(lua_State *L)
{
    int num_args = lua_gettop(L);

    if (num_args == 0) {
        return _cocos2d_ui_RelativeBox_create1(L);
    }

    if (num_args == 1) {
        // if (auto_luacv_is_cocos2d_Size(L, 1)) {
            return _cocos2d_ui_RelativeBox_create2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::RelativeBox::create' not support '%d' arguments", num_args);

    return 0;
}

static int luaopen_cocos2d_ui_RelativeBox(lua_State *L)
{
    oluacls_class(L, "ccui.RelativeBox", "ccui.Layout");
    oluacls_setfunc(L, "create", _cocos2d_ui_RelativeBox_create);

    olua_registerluatype<cocos2d::ui::RelativeBox>(L, "ccui.RelativeBox");
    oluacls_createclassproxy(L);

    return 1;
}

#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS || CC_TARGET_PLATFORM == CC_PLATFORM_TIZEN)
static int _cocos2d_experimental_ui_WebView_create(lua_State *L)
{
    lua_settop(L, 0);

    // static WebView *create()
    cocos2d::experimental::ui::WebView *ret = (cocos2d::experimental::ui::WebView *)cocos2d::experimental::ui::WebView::create();
    int num_ret = olua_push_cppobj<cocos2d::experimental::ui::WebView>(L, ret, "ccui.WebView");

    return num_ret;
}

static int _cocos2d_experimental_ui_WebView_setJavascriptInterfaceScheme(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::WebView *self = nullptr;
    std::string arg1;       /** scheme */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");
    olua_check_std_string(L, 2, &arg1);

    // void setJavascriptInterfaceScheme(const std::string &scheme)
    self->setJavascriptInterfaceScheme(arg1);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_loadData(lua_State *L)
{
    lua_settop(L, 5);

    cocos2d::experimental::ui::WebView *self = nullptr;
    cocos2d::Data arg1;       /** data */
    std::string arg2;       /** MIMEType */
    std::string arg3;       /** encoding */
    std::string arg4;       /** baseURL */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");
    manual_luacv_check_cocos2d_Data(L, 2, &arg1);
    olua_check_std_string(L, 3, &arg2);
    olua_check_std_string(L, 4, &arg3);
    olua_check_std_string(L, 5, &arg4);

    // void loadData(const cocos2d::Data &data, const std::string &MIMEType, const std::string &encoding, const std::string &baseURL)
    self->loadData(arg1, arg2, arg3, arg4);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_loadHTMLString(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::experimental::ui::WebView *self = nullptr;
    std::string arg1;       /** string */
    std::string arg2;       /** baseURL */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");
    olua_check_std_string(L, 2, &arg1);
    olua_opt_std_string(L, 3, &arg2, (std::string)"");

    // void loadHTMLString(const std::string &string, const std::string &baseURL = "")
    self->loadHTMLString(arg1, arg2);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_loadURL1(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::WebView *self = nullptr;
    std::string arg1;       /** url */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");
    olua_check_std_string(L, 2, &arg1);

    // void loadURL(const std::string &url)
    self->loadURL(arg1);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_loadURL2(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::experimental::ui::WebView *self = nullptr;
    std::string arg1;       /** url */
    bool arg2 = false;   /** cleanCachedData */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");
    olua_check_std_string(L, 2, &arg1);
    olua_check_bool(L, 3, &arg2);

    // void loadURL(const std::string &url, bool cleanCachedData)
    self->loadURL(arg1, arg2);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_loadURL(lua_State *L)
{
    int num_args = lua_gettop(L) - 1;

    if (num_args == 1) {
        // if (olua_is_std_string(L, 2)) {
            return _cocos2d_experimental_ui_WebView_loadURL1(L);
        // }
    }

    if (num_args == 2) {
        // if (olua_is_std_string(L, 2) && olua_is_bool(L, 3)) {
            return _cocos2d_experimental_ui_WebView_loadURL2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::experimental::ui::WebView::loadURL' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_loadFile(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::WebView *self = nullptr;
    std::string arg1;       /** fileName */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");
    olua_check_std_string(L, 2, &arg1);

    // void loadFile(const std::string &fileName)
    self->loadFile(arg1);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_stopLoading(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::WebView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    // void stopLoading()
    self->stopLoading();

    return 0;
}

static int _cocos2d_experimental_ui_WebView_reload(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::WebView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    // void reload()
    self->reload();

    return 0;
}

static int _cocos2d_experimental_ui_WebView_canGoBack(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::WebView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    // bool canGoBack()
    bool ret = (bool)self->canGoBack();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_experimental_ui_WebView_canGoForward(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::WebView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    // bool canGoForward()
    bool ret = (bool)self->canGoForward();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_experimental_ui_WebView_goBack(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::WebView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    // void goBack()
    self->goBack();

    return 0;
}

static int _cocos2d_experimental_ui_WebView_goForward(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::WebView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    // void goForward()
    self->goForward();

    return 0;
}

static int _cocos2d_experimental_ui_WebView_evaluateJS(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::WebView *self = nullptr;
    std::string arg1;       /** js */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");
    olua_check_std_string(L, 2, &arg1);

    // void evaluateJS(const std::string &js)
    self->evaluateJS(arg1);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_setScalesPageToFit(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::WebView *self = nullptr;
    bool arg1 = false;   /** scalesPageToFit */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");
    olua_check_bool(L, 2, &arg1);

    // void setScalesPageToFit(const bool scalesPageToFit)
    self->setScalesPageToFit(arg1);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_setBounces(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::WebView *self = nullptr;
    bool arg1 = false;   /** bounce */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");
    olua_check_bool(L, 2, &arg1);

    // void setBounces(bool bounce)
    self->setBounces(arg1);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_draw(lua_State *L)
{
    lua_settop(L, 4);

    cocos2d::experimental::ui::WebView *self = nullptr;
    cocos2d::Renderer *arg1 = nullptr;   /** renderer */
    cocos2d::Mat4 arg2;       /** const */
    lua_Unsigned arg3 = 0;   /** flags */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Renderer");
    manual_luacv_check_cocos2d_Mat4(L, 3, &arg2);
    olua_check_uint(L, 4, &arg3);

    // void draw(cocos2d::Renderer *renderer, cocos2d::Mat4 const &transform, uint32_t flags)
    self->draw(arg1, arg2, (uint32_t)arg3);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_setOpacityWebView(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::WebView *self = nullptr;
    lua_Number arg1 = 0;   /** opacity */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");
    olua_check_number(L, 2, &arg1);

    // void setOpacityWebView(float opacity)
    self->setOpacityWebView((float)arg1);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_getOpacityWebView(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::WebView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    // float getOpacityWebView()
    float ret = (float)self->getOpacityWebView();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_experimental_ui_WebView_setBackgroundTransparent(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::WebView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    // void setBackgroundTransparent()
    self->setBackgroundTransparent();

    return 0;
}

static int _cocos2d_experimental_ui_WebView_setOnShouldStartLoading(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::WebView *self = nullptr;
    std::function<bool(cocos2d::experimental::ui::WebView *, const std::string &)> arg1 = nullptr;   /** callback */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("OnShouldStartLoading");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::experimental::ui::WebView *arg1, const std::string &arg2) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);
            bool ret = false;
            olua_push_cppobj<cocos2d::experimental::ui::WebView>(L, arg1, "ccui.WebView");
            olua_push_std_string(L, arg2);
            olua_callback(L, callback_store_obj, func.c_str(), 2);
            olua_opt_bool(L, -1, &ret, false);

            lua_settop(L, top);
            return ret;
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("OnShouldStartLoading");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // void setOnShouldStartLoading(@nullable const std::function<bool(WebView *sender, const std::string &url)>& callback)
    self->setOnShouldStartLoading(arg1);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_setOnDidFinishLoading(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::WebView *self = nullptr;
    std::function<void(cocos2d::experimental::ui::WebView *, const std::string &)> arg1 = nullptr;   /** callback */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("OnDidFinishLoading");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::experimental::ui::WebView *arg1, const std::string &arg2) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);

            olua_push_cppobj<cocos2d::experimental::ui::WebView>(L, arg1, "ccui.WebView");
            olua_push_std_string(L, arg2);
            olua_callback(L, callback_store_obj, func.c_str(), 2);

            lua_settop(L, top);
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("OnDidFinishLoading");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // void setOnDidFinishLoading(@nullable const std::function<void(WebView *sender, const std::string &url)>& callback)
    self->setOnDidFinishLoading(arg1);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_setOnDidFailLoading(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::WebView *self = nullptr;
    std::function<void(cocos2d::experimental::ui::WebView *, const std::string &)> arg1 = nullptr;   /** callback */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("OnDidFailLoading");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::experimental::ui::WebView *arg1, const std::string &arg2) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);

            olua_push_cppobj<cocos2d::experimental::ui::WebView>(L, arg1, "ccui.WebView");
            olua_push_std_string(L, arg2);
            olua_callback(L, callback_store_obj, func.c_str(), 2);

            lua_settop(L, top);
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("OnDidFailLoading");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // void setOnDidFailLoading(@nullable const std::function<void(WebView *sender, const std::string &url)>& callback)
    self->setOnDidFailLoading(arg1);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_setOnJSCallback(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::WebView *self = nullptr;
    std::function<void(cocos2d::experimental::ui::WebView *, const std::string &)> arg1 = nullptr;   /** callback */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("OnJSCallback");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::experimental::ui::WebView *arg1, const std::string &arg2) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);

            olua_push_cppobj<cocos2d::experimental::ui::WebView>(L, arg1, "ccui.WebView");
            olua_push_std_string(L, arg2);
            olua_callback(L, callback_store_obj, func.c_str(), 2);

            lua_settop(L, top);
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("OnJSCallback");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // void setOnJSCallback(@nullable const std::function<void(WebView *sender, const std::string &url)>& callback)
    self->setOnJSCallback(arg1);

    return 0;
}

static int _cocos2d_experimental_ui_WebView_getOnShouldStartLoading(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::WebView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    void *callback_store_obj = (void *)self;
    std::string tag = olua_makecallbacktag("OnShouldStartLoading");
    olua_getcallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);

    // std::function<bool(WebView *sender, const std::string &url)> getOnShouldStartLoading()
    std::function<bool(cocos2d::experimental::ui::WebView *, const std::string &)> ret = (std::function<bool(cocos2d::experimental::ui::WebView *, const std::string &)>)self->getOnShouldStartLoading();
    int num_ret = olua_push_std_function(L, (std::function<bool(cocos2d::experimental::ui::WebView *, const std::string &)>)ret);

    return num_ret;
}

static int _cocos2d_experimental_ui_WebView_getOnDidFinishLoading(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::WebView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    void *callback_store_obj = (void *)self;
    std::string tag = olua_makecallbacktag("OnDidFinishLoading");
    olua_getcallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);

    // std::function<void(WebView *sender, const std::string &url)> getOnDidFinishLoading()
    std::function<void(cocos2d::experimental::ui::WebView *, const std::string &)> ret = (std::function<void(cocos2d::experimental::ui::WebView *, const std::string &)>)self->getOnDidFinishLoading();
    int num_ret = olua_push_std_function(L, (std::function<void(cocos2d::experimental::ui::WebView *, const std::string &)>)ret);

    return num_ret;
}

static int _cocos2d_experimental_ui_WebView_getOnDidFailLoading(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::WebView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    void *callback_store_obj = (void *)self;
    std::string tag = olua_makecallbacktag("OnDidFailLoading");
    olua_getcallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);

    // std::function<void(WebView *sender, const std::string &url)> getOnDidFailLoading()
    std::function<void(cocos2d::experimental::ui::WebView *, const std::string &)> ret = (std::function<void(cocos2d::experimental::ui::WebView *, const std::string &)>)self->getOnDidFailLoading();
    int num_ret = olua_push_std_function(L, (std::function<void(cocos2d::experimental::ui::WebView *, const std::string &)>)ret);

    return num_ret;
}

static int _cocos2d_experimental_ui_WebView_getOnJSCallback(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::WebView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.WebView");

    void *callback_store_obj = (void *)self;
    std::string tag = olua_makecallbacktag("OnJSCallback");
    olua_getcallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);

    // std::function<void(WebView *sender, const std::string &url)> getOnJSCallback()
    std::function<void(cocos2d::experimental::ui::WebView *, const std::string &)> ret = (std::function<void(cocos2d::experimental::ui::WebView *, const std::string &)>)self->getOnJSCallback();
    int num_ret = olua_push_std_function(L, (std::function<void(cocos2d::experimental::ui::WebView *, const std::string &)>)ret);

    return num_ret;
}

static int luaopen_cocos2d_experimental_ui_WebView(lua_State *L)
{
    oluacls_class(L, "ccui.WebView", "ccui.Widget");
    oluacls_setfunc(L, "create", _cocos2d_experimental_ui_WebView_create);
    oluacls_setfunc(L, "setJavascriptInterfaceScheme", _cocos2d_experimental_ui_WebView_setJavascriptInterfaceScheme);
    oluacls_setfunc(L, "loadData", _cocos2d_experimental_ui_WebView_loadData);
    oluacls_setfunc(L, "loadHTMLString", _cocos2d_experimental_ui_WebView_loadHTMLString);
    oluacls_setfunc(L, "loadURL", _cocos2d_experimental_ui_WebView_loadURL);
    oluacls_setfunc(L, "loadFile", _cocos2d_experimental_ui_WebView_loadFile);
    oluacls_setfunc(L, "stopLoading", _cocos2d_experimental_ui_WebView_stopLoading);
    oluacls_setfunc(L, "reload", _cocos2d_experimental_ui_WebView_reload);
    oluacls_setfunc(L, "canGoBack", _cocos2d_experimental_ui_WebView_canGoBack);
    oluacls_setfunc(L, "canGoForward", _cocos2d_experimental_ui_WebView_canGoForward);
    oluacls_setfunc(L, "goBack", _cocos2d_experimental_ui_WebView_goBack);
    oluacls_setfunc(L, "goForward", _cocos2d_experimental_ui_WebView_goForward);
    oluacls_setfunc(L, "evaluateJS", _cocos2d_experimental_ui_WebView_evaluateJS);
    oluacls_setfunc(L, "setScalesPageToFit", _cocos2d_experimental_ui_WebView_setScalesPageToFit);
    oluacls_setfunc(L, "setBounces", _cocos2d_experimental_ui_WebView_setBounces);
    oluacls_setfunc(L, "draw", _cocos2d_experimental_ui_WebView_draw);
    oluacls_setfunc(L, "setOpacityWebView", _cocos2d_experimental_ui_WebView_setOpacityWebView);
    oluacls_setfunc(L, "getOpacityWebView", _cocos2d_experimental_ui_WebView_getOpacityWebView);
    oluacls_setfunc(L, "setBackgroundTransparent", _cocos2d_experimental_ui_WebView_setBackgroundTransparent);
    oluacls_setfunc(L, "setOnShouldStartLoading", _cocos2d_experimental_ui_WebView_setOnShouldStartLoading);
    oluacls_setfunc(L, "setOnDidFinishLoading", _cocos2d_experimental_ui_WebView_setOnDidFinishLoading);
    oluacls_setfunc(L, "setOnDidFailLoading", _cocos2d_experimental_ui_WebView_setOnDidFailLoading);
    oluacls_setfunc(L, "setOnJSCallback", _cocos2d_experimental_ui_WebView_setOnJSCallback);
    oluacls_setfunc(L, "getOnShouldStartLoading", _cocos2d_experimental_ui_WebView_getOnShouldStartLoading);
    oluacls_setfunc(L, "getOnDidFinishLoading", _cocos2d_experimental_ui_WebView_getOnDidFinishLoading);
    oluacls_setfunc(L, "getOnDidFailLoading", _cocos2d_experimental_ui_WebView_getOnDidFailLoading);
    oluacls_setfunc(L, "getOnJSCallback", _cocos2d_experimental_ui_WebView_getOnJSCallback);
    oluacls_property(L, "onShouldStartLoading", _cocos2d_experimental_ui_WebView_getOnShouldStartLoading, _cocos2d_experimental_ui_WebView_setOnShouldStartLoading);
    oluacls_property(L, "onDidFinishLoading", _cocos2d_experimental_ui_WebView_getOnDidFinishLoading, _cocos2d_experimental_ui_WebView_setOnDidFinishLoading);
    oluacls_property(L, "onDidFailLoading", _cocos2d_experimental_ui_WebView_getOnDidFailLoading, _cocos2d_experimental_ui_WebView_setOnDidFailLoading);
    oluacls_property(L, "onJSCallback", _cocos2d_experimental_ui_WebView_getOnJSCallback, _cocos2d_experimental_ui_WebView_setOnJSCallback);

    olua_registerluatype<cocos2d::experimental::ui::WebView>(L, "ccui.WebView");
    oluacls_createclassproxy(L);

    return 1;
}
#endif

#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS || CC_TARGET_PLATFORM == CC_PLATFORM_TIZEN) && !defined(CC_PLATFORM_OS_TVOS)
static int luaopen_cocos2d_experimental_ui_VideoPlayer_EventType(lua_State *L)
{
    oluacls_class(L, "ccui.VideoPlayer.EventType", nullptr);
    oluacls_const_integer(L, "PLAYING", (lua_Integer)cocos2d::experimental::ui::VideoPlayer::EventType::PLAYING);
    oluacls_const_integer(L, "PAUSED", (lua_Integer)cocos2d::experimental::ui::VideoPlayer::EventType::PAUSED);
    oluacls_const_integer(L, "STOPPED", (lua_Integer)cocos2d::experimental::ui::VideoPlayer::EventType::STOPPED);
    oluacls_const_integer(L, "COMPLETED", (lua_Integer)cocos2d::experimental::ui::VideoPlayer::EventType::COMPLETED);

    olua_registerluatype<cocos2d::experimental::ui::VideoPlayer::EventType>(L, "ccui.VideoPlayer.EventType");
    oluacls_createclassproxy(L);

    return 1;
}
#endif

#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS || CC_TARGET_PLATFORM == CC_PLATFORM_TIZEN) && !defined(CC_PLATFORM_OS_TVOS)
static int _cocos2d_experimental_ui_VideoPlayer_create(lua_State *L)
{
    lua_settop(L, 0);

    // static VideoPlayer* create()
    cocos2d::experimental::ui::VideoPlayer *ret = (cocos2d::experimental::ui::VideoPlayer *)cocos2d::experimental::ui::VideoPlayer::create();
    int num_ret = olua_push_cppobj<cocos2d::experimental::ui::VideoPlayer>(L, ret, "ccui.VideoPlayer");

    return num_ret;
}

static int _cocos2d_experimental_ui_VideoPlayer_setFileName(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::VideoPlayer *self = nullptr;
    std::string arg1;       /** videoPath */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.VideoPlayer");
    olua_check_std_string(L, 2, &arg1);

    // void setFileName(const std::string& videoPath)
    self->setFileName(arg1);

    return 0;
}

static int _cocos2d_experimental_ui_VideoPlayer_getFileName(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::VideoPlayer *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.VideoPlayer");

    // const std::string& getFileName()
    const std::string &ret = (const std::string &)self->getFileName();
    int num_ret = olua_push_std_string(L, ret);

    return num_ret;
}

static int _cocos2d_experimental_ui_VideoPlayer_setURL(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::VideoPlayer *self = nullptr;
    std::string arg1;       /** _videoURL */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.VideoPlayer");
    olua_check_std_string(L, 2, &arg1);

    // void setURL(const std::string& _videoURL)
    self->setURL(arg1);

    return 0;
}

static int _cocos2d_experimental_ui_VideoPlayer_getURL(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::VideoPlayer *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.VideoPlayer");

    // const std::string& getURL()
    const std::string &ret = (const std::string &)self->getURL();
    int num_ret = olua_push_std_string(L, ret);

    return num_ret;
}

static int _cocos2d_experimental_ui_VideoPlayer_play(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::VideoPlayer *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.VideoPlayer");

    // void play()
    self->play();

    return 0;
}

static int _cocos2d_experimental_ui_VideoPlayer_stop(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::VideoPlayer *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.VideoPlayer");

    // void stop()
    self->stop();

    return 0;
}

static int _cocos2d_experimental_ui_VideoPlayer_seekTo(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::VideoPlayer *self = nullptr;
    lua_Number arg1 = 0;   /** sec */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.VideoPlayer");
    olua_check_number(L, 2, &arg1);

    // void seekTo(float sec)
    self->seekTo((float)arg1);

    return 0;
}

static int _cocos2d_experimental_ui_VideoPlayer_isPlaying(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::VideoPlayer *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.VideoPlayer");

    // bool isPlaying()
    bool ret = (bool)self->isPlaying();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_experimental_ui_VideoPlayer_setKeepAspectRatioEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::VideoPlayer *self = nullptr;
    bool arg1 = false;   /** enable */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.VideoPlayer");
    olua_check_bool(L, 2, &arg1);

    // void setKeepAspectRatioEnabled(bool enable)
    self->setKeepAspectRatioEnabled(arg1);

    return 0;
}

static int _cocos2d_experimental_ui_VideoPlayer_isKeepAspectRatioEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::VideoPlayer *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.VideoPlayer");

    // bool isKeepAspectRatioEnabled()
    bool ret = (bool)self->isKeepAspectRatioEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_experimental_ui_VideoPlayer_setFullScreenEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::VideoPlayer *self = nullptr;
    bool arg1 = false;   /** fullscreen */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.VideoPlayer");
    olua_check_bool(L, 2, &arg1);

    // void setFullScreenEnabled(bool fullscreen)
    self->setFullScreenEnabled(arg1);

    return 0;
}

static int _cocos2d_experimental_ui_VideoPlayer_isFullScreenEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::experimental::ui::VideoPlayer *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.VideoPlayer");

    // bool isFullScreenEnabled()
    bool ret = (bool)self->isFullScreenEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_experimental_ui_VideoPlayer_onPlayEvent(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::VideoPlayer *self = nullptr;
    lua_Integer arg1 = 0;   /** event */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.VideoPlayer");
    olua_check_int(L, 2, &arg1);

    // void onPlayEvent(int event)
    self->onPlayEvent((int)arg1);

    return 0;
}

static int _cocos2d_experimental_ui_VideoPlayer_addEventListener(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::experimental::ui::VideoPlayer *self = nullptr;
    std::function<void(cocos2d::Ref *, cocos2d::experimental::ui::VideoPlayer::EventType)> arg1 = nullptr;   /** callback */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.VideoPlayer");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("VideoPlayerCallback");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::Ref *arg1, cocos2d::experimental::ui::VideoPlayer::EventType arg2) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);

            olua_push_cppobj<cocos2d::Ref>(L, arg1, "cc.Ref");
            olua_push_uint(L, (lua_Unsigned)arg2);
            olua_callback(L, callback_store_obj, func.c_str(), 2);

            lua_settop(L, top);
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("VideoPlayerCallback");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // void addEventListener(@nullable const std::function<void(Ref*,VideoPlayer::EventType)>& callback)
    self->addEventListener(arg1);

    return 0;
}

static int luaopen_cocos2d_experimental_ui_VideoPlayer(lua_State *L)
{
    oluacls_class(L, "ccui.VideoPlayer", "ccui.Widget");
    oluacls_setfunc(L, "create", _cocos2d_experimental_ui_VideoPlayer_create);
    oluacls_setfunc(L, "setFileName", _cocos2d_experimental_ui_VideoPlayer_setFileName);
    oluacls_setfunc(L, "getFileName", _cocos2d_experimental_ui_VideoPlayer_getFileName);
    oluacls_setfunc(L, "setURL", _cocos2d_experimental_ui_VideoPlayer_setURL);
    oluacls_setfunc(L, "getURL", _cocos2d_experimental_ui_VideoPlayer_getURL);
    oluacls_setfunc(L, "play", _cocos2d_experimental_ui_VideoPlayer_play);
    oluacls_setfunc(L, "stop", _cocos2d_experimental_ui_VideoPlayer_stop);
    oluacls_setfunc(L, "seekTo", _cocos2d_experimental_ui_VideoPlayer_seekTo);
    oluacls_setfunc(L, "isPlaying", _cocos2d_experimental_ui_VideoPlayer_isPlaying);
    oluacls_setfunc(L, "setKeepAspectRatioEnabled", _cocos2d_experimental_ui_VideoPlayer_setKeepAspectRatioEnabled);
    oluacls_setfunc(L, "isKeepAspectRatioEnabled", _cocos2d_experimental_ui_VideoPlayer_isKeepAspectRatioEnabled);
    oluacls_setfunc(L, "setFullScreenEnabled", _cocos2d_experimental_ui_VideoPlayer_setFullScreenEnabled);
    oluacls_setfunc(L, "isFullScreenEnabled", _cocos2d_experimental_ui_VideoPlayer_isFullScreenEnabled);
    oluacls_setfunc(L, "onPlayEvent", _cocos2d_experimental_ui_VideoPlayer_onPlayEvent);
    oluacls_setfunc(L, "addEventListener", _cocos2d_experimental_ui_VideoPlayer_addEventListener);
    oluacls_property(L, "fileName", _cocos2d_experimental_ui_VideoPlayer_getFileName, _cocos2d_experimental_ui_VideoPlayer_setFileName);
    oluacls_property(L, "url", _cocos2d_experimental_ui_VideoPlayer_getURL, _cocos2d_experimental_ui_VideoPlayer_setURL);
    oluacls_property(L, "playing", _cocos2d_experimental_ui_VideoPlayer_isPlaying, nullptr);
    oluacls_property(L, "keepAspectRatioEnabled", _cocos2d_experimental_ui_VideoPlayer_isKeepAspectRatioEnabled, _cocos2d_experimental_ui_VideoPlayer_setKeepAspectRatioEnabled);
    oluacls_property(L, "fullScreenEnabled", _cocos2d_experimental_ui_VideoPlayer_isFullScreenEnabled, _cocos2d_experimental_ui_VideoPlayer_setFullScreenEnabled);

    olua_registerluatype<cocos2d::experimental::ui::VideoPlayer>(L, "ccui.VideoPlayer");
    oluacls_createclassproxy(L);

    return 1;
}
#endif

static int _cocos2d_ui_AbstractCheckButton_loadTextures(lua_State *L)
{
    lua_settop(L, 7);

    cocos2d::ui::AbstractCheckButton *self = nullptr;
    std::string arg1;       /** background */
    std::string arg2;       /** backgroundSelected */
    std::string arg3;       /** cross */
    std::string arg4;       /** backgroundDisabled */
    std::string arg5;       /** frontCrossDisabled */
    lua_Unsigned arg6 = 0;   /** texType */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");
    olua_check_std_string(L, 2, &arg1);
    olua_check_std_string(L, 3, &arg2);
    olua_check_std_string(L, 4, &arg3);
    olua_check_std_string(L, 5, &arg4);
    olua_check_std_string(L, 6, &arg5);
    olua_opt_uint(L, 7, &arg6, (lua_Unsigned)cocos2d::ui::Widget::TextureResType::LOCAL);

    // void loadTextures(const std::string& background,const std::string& backgroundSelected,const std::string& cross,const std::string& backgroundDisabled,const std::string& frontCrossDisabled,Widget::TextureResType texType = Widget::TextureResType::LOCAL)
    self->loadTextures(arg1, arg2, arg3, arg4, arg5, (cocos2d::ui::Widget::TextureResType)arg6);

    return 0;
}

static int _cocos2d_ui_AbstractCheckButton_loadTextureBackGround(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::AbstractCheckButton *self = nullptr;
    std::string arg1;       /** backGround */
    lua_Unsigned arg2 = 0;   /** type */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");
    olua_check_std_string(L, 2, &arg1);
    olua_opt_uint(L, 3, &arg2, (lua_Unsigned)cocos2d::ui::Widget::TextureResType::LOCAL);

    // void loadTextureBackGround(const std::string& backGround,Widget::TextureResType type = Widget::TextureResType::LOCAL)
    self->loadTextureBackGround(arg1, (cocos2d::ui::Widget::TextureResType)arg2);

    return 0;
}

static int _cocos2d_ui_AbstractCheckButton_loadTextureBackGroundSelected(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::AbstractCheckButton *self = nullptr;
    std::string arg1;       /** backGroundSelected */
    lua_Unsigned arg2 = 0;   /** texType */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");
    olua_check_std_string(L, 2, &arg1);
    olua_opt_uint(L, 3, &arg2, (lua_Unsigned)cocos2d::ui::Widget::TextureResType::LOCAL);

    // void loadTextureBackGroundSelected(const std::string& backGroundSelected,Widget::TextureResType texType = Widget::TextureResType::LOCAL)
    self->loadTextureBackGroundSelected(arg1, (cocos2d::ui::Widget::TextureResType)arg2);

    return 0;
}

static int _cocos2d_ui_AbstractCheckButton_loadTextureFrontCross(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::AbstractCheckButton *self = nullptr;
    std::string arg1;       /** crossTextureName */
    lua_Unsigned arg2 = 0;   /** texType */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");
    olua_check_std_string(L, 2, &arg1);
    olua_opt_uint(L, 3, &arg2, (lua_Unsigned)cocos2d::ui::Widget::TextureResType::LOCAL);

    // void loadTextureFrontCross(const std::string& crossTextureName,Widget::TextureResType texType = Widget::TextureResType::LOCAL)
    self->loadTextureFrontCross(arg1, (cocos2d::ui::Widget::TextureResType)arg2);

    return 0;
}

static int _cocos2d_ui_AbstractCheckButton_loadTextureBackGroundDisabled(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::AbstractCheckButton *self = nullptr;
    std::string arg1;       /** backGroundDisabled */
    lua_Unsigned arg2 = 0;   /** texType */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");
    olua_check_std_string(L, 2, &arg1);
    olua_opt_uint(L, 3, &arg2, (lua_Unsigned)cocos2d::ui::Widget::TextureResType::LOCAL);

    // void loadTextureBackGroundDisabled(const std::string& backGroundDisabled,Widget::TextureResType texType = Widget::TextureResType::LOCAL)
    self->loadTextureBackGroundDisabled(arg1, (cocos2d::ui::Widget::TextureResType)arg2);

    return 0;
}

static int _cocos2d_ui_AbstractCheckButton_loadTextureFrontCrossDisabled(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::AbstractCheckButton *self = nullptr;
    std::string arg1;       /** frontCrossDisabled */
    lua_Unsigned arg2 = 0;   /** texType */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");
    olua_check_std_string(L, 2, &arg1);
    olua_opt_uint(L, 3, &arg2, (lua_Unsigned)cocos2d::ui::Widget::TextureResType::LOCAL);

    // void loadTextureFrontCrossDisabled(const std::string& frontCrossDisabled,Widget::TextureResType texType = Widget::TextureResType::LOCAL)
    self->loadTextureFrontCrossDisabled(arg1, (cocos2d::ui::Widget::TextureResType)arg2);

    return 0;
}

static int _cocos2d_ui_AbstractCheckButton_isSelected(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::AbstractCheckButton *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");

    // bool isSelected()
    bool ret = (bool)self->isSelected();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_AbstractCheckButton_setSelected(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::AbstractCheckButton *self = nullptr;
    bool arg1 = false;   /** selected */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");
    olua_check_bool(L, 2, &arg1);

    // void setSelected(bool selected)
    self->setSelected(arg1);

    return 0;
}

static int _cocos2d_ui_AbstractCheckButton_setZoomScale(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::AbstractCheckButton *self = nullptr;
    lua_Number arg1 = 0;   /** scale */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");
    olua_check_number(L, 2, &arg1);

    // void setZoomScale(float scale)
    self->setZoomScale((float)arg1);

    return 0;
}

static int _cocos2d_ui_AbstractCheckButton_getZoomScale(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::AbstractCheckButton *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");

    // float getZoomScale()
    float ret = (float)self->getZoomScale();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_AbstractCheckButton_getRendererBackground(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::AbstractCheckButton *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");

    // Sprite* getRendererBackground()
    cocos2d::Sprite *ret = (cocos2d::Sprite *)self->getRendererBackground();
    int num_ret = olua_push_cppobj<cocos2d::Sprite>(L, ret, "cc.Sprite");

    return num_ret;
}

static int _cocos2d_ui_AbstractCheckButton_getRendererBackgroundSelected(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::AbstractCheckButton *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");

    // Sprite* getRendererBackgroundSelected()
    cocos2d::Sprite *ret = (cocos2d::Sprite *)self->getRendererBackgroundSelected();
    int num_ret = olua_push_cppobj<cocos2d::Sprite>(L, ret, "cc.Sprite");

    return num_ret;
}

static int _cocos2d_ui_AbstractCheckButton_getRendererFrontCross(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::AbstractCheckButton *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");

    // Sprite* getRendererFrontCross()
    cocos2d::Sprite *ret = (cocos2d::Sprite *)self->getRendererFrontCross();
    int num_ret = olua_push_cppobj<cocos2d::Sprite>(L, ret, "cc.Sprite");

    return num_ret;
}

static int _cocos2d_ui_AbstractCheckButton_getRendererBackgroundDisabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::AbstractCheckButton *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");

    // Sprite* getRendererBackgroundDisabled()
    cocos2d::Sprite *ret = (cocos2d::Sprite *)self->getRendererBackgroundDisabled();
    int num_ret = olua_push_cppobj<cocos2d::Sprite>(L, ret, "cc.Sprite");

    return num_ret;
}

static int _cocos2d_ui_AbstractCheckButton_getRendererFrontCrossDisabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::AbstractCheckButton *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");

    // Sprite* getRendererFrontCrossDisabled()
    cocos2d::Sprite *ret = (cocos2d::Sprite *)self->getRendererFrontCrossDisabled();
    int num_ret = olua_push_cppobj<cocos2d::Sprite>(L, ret, "cc.Sprite");

    return num_ret;
}

static int _cocos2d_ui_AbstractCheckButton_getBackNormalFile(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::AbstractCheckButton *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");

    // ResourceData getBackNormalFile()
    cocos2d::ResourceData ret = (cocos2d::ResourceData)self->getBackNormalFile();
    int num_ret = auto_luacv_push_cocos2d_ResourceData(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_AbstractCheckButton_getBackPressedFile(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::AbstractCheckButton *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");

    // ResourceData getBackPressedFile()
    cocos2d::ResourceData ret = (cocos2d::ResourceData)self->getBackPressedFile();
    int num_ret = auto_luacv_push_cocos2d_ResourceData(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_AbstractCheckButton_getBackDisabledFile(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::AbstractCheckButton *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");

    // ResourceData getBackDisabledFile()
    cocos2d::ResourceData ret = (cocos2d::ResourceData)self->getBackDisabledFile();
    int num_ret = auto_luacv_push_cocos2d_ResourceData(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_AbstractCheckButton_getCrossNormalFile(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::AbstractCheckButton *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");

    // ResourceData getCrossNormalFile()
    cocos2d::ResourceData ret = (cocos2d::ResourceData)self->getCrossNormalFile();
    int num_ret = auto_luacv_push_cocos2d_ResourceData(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_AbstractCheckButton_getCrossDisabledFile(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::AbstractCheckButton *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.AbstractCheckButton");

    // ResourceData getCrossDisabledFile()
    cocos2d::ResourceData ret = (cocos2d::ResourceData)self->getCrossDisabledFile();
    int num_ret = auto_luacv_push_cocos2d_ResourceData(L, &ret);

    return num_ret;
}

static int luaopen_cocos2d_ui_AbstractCheckButton(lua_State *L)
{
    oluacls_class(L, "ccui.AbstractCheckButton", "ccui.Widget");
    oluacls_setfunc(L, "loadTextures", _cocos2d_ui_AbstractCheckButton_loadTextures);
    oluacls_setfunc(L, "loadTextureBackGround", _cocos2d_ui_AbstractCheckButton_loadTextureBackGround);
    oluacls_setfunc(L, "loadTextureBackGroundSelected", _cocos2d_ui_AbstractCheckButton_loadTextureBackGroundSelected);
    oluacls_setfunc(L, "loadTextureFrontCross", _cocos2d_ui_AbstractCheckButton_loadTextureFrontCross);
    oluacls_setfunc(L, "loadTextureBackGroundDisabled", _cocos2d_ui_AbstractCheckButton_loadTextureBackGroundDisabled);
    oluacls_setfunc(L, "loadTextureFrontCrossDisabled", _cocos2d_ui_AbstractCheckButton_loadTextureFrontCrossDisabled);
    oluacls_setfunc(L, "isSelected", _cocos2d_ui_AbstractCheckButton_isSelected);
    oluacls_setfunc(L, "setSelected", _cocos2d_ui_AbstractCheckButton_setSelected);
    oluacls_setfunc(L, "setZoomScale", _cocos2d_ui_AbstractCheckButton_setZoomScale);
    oluacls_setfunc(L, "getZoomScale", _cocos2d_ui_AbstractCheckButton_getZoomScale);
    oluacls_setfunc(L, "getRendererBackground", _cocos2d_ui_AbstractCheckButton_getRendererBackground);
    oluacls_setfunc(L, "getRendererBackgroundSelected", _cocos2d_ui_AbstractCheckButton_getRendererBackgroundSelected);
    oluacls_setfunc(L, "getRendererFrontCross", _cocos2d_ui_AbstractCheckButton_getRendererFrontCross);
    oluacls_setfunc(L, "getRendererBackgroundDisabled", _cocos2d_ui_AbstractCheckButton_getRendererBackgroundDisabled);
    oluacls_setfunc(L, "getRendererFrontCrossDisabled", _cocos2d_ui_AbstractCheckButton_getRendererFrontCrossDisabled);
    oluacls_setfunc(L, "getBackNormalFile", _cocos2d_ui_AbstractCheckButton_getBackNormalFile);
    oluacls_setfunc(L, "getBackPressedFile", _cocos2d_ui_AbstractCheckButton_getBackPressedFile);
    oluacls_setfunc(L, "getBackDisabledFile", _cocos2d_ui_AbstractCheckButton_getBackDisabledFile);
    oluacls_setfunc(L, "getCrossNormalFile", _cocos2d_ui_AbstractCheckButton_getCrossNormalFile);
    oluacls_setfunc(L, "getCrossDisabledFile", _cocos2d_ui_AbstractCheckButton_getCrossDisabledFile);
    oluacls_property(L, "selected", _cocos2d_ui_AbstractCheckButton_isSelected, _cocos2d_ui_AbstractCheckButton_setSelected);
    oluacls_property(L, "zoomScale", _cocos2d_ui_AbstractCheckButton_getZoomScale, _cocos2d_ui_AbstractCheckButton_setZoomScale);
    oluacls_property(L, "rendererBackground", _cocos2d_ui_AbstractCheckButton_getRendererBackground, nullptr);
    oluacls_property(L, "rendererBackgroundSelected", _cocos2d_ui_AbstractCheckButton_getRendererBackgroundSelected, nullptr);
    oluacls_property(L, "rendererFrontCross", _cocos2d_ui_AbstractCheckButton_getRendererFrontCross, nullptr);
    oluacls_property(L, "rendererBackgroundDisabled", _cocos2d_ui_AbstractCheckButton_getRendererBackgroundDisabled, nullptr);
    oluacls_property(L, "rendererFrontCrossDisabled", _cocos2d_ui_AbstractCheckButton_getRendererFrontCrossDisabled, nullptr);
    oluacls_property(L, "backNormalFile", _cocos2d_ui_AbstractCheckButton_getBackNormalFile, nullptr);
    oluacls_property(L, "backPressedFile", _cocos2d_ui_AbstractCheckButton_getBackPressedFile, nullptr);
    oluacls_property(L, "backDisabledFile", _cocos2d_ui_AbstractCheckButton_getBackDisabledFile, nullptr);
    oluacls_property(L, "crossNormalFile", _cocos2d_ui_AbstractCheckButton_getCrossNormalFile, nullptr);
    oluacls_property(L, "crossDisabledFile", _cocos2d_ui_AbstractCheckButton_getCrossDisabledFile, nullptr);

    olua_registerluatype<cocos2d::ui::AbstractCheckButton>(L, "ccui.AbstractCheckButton");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_TabHeader_EventType(lua_State *L)
{
    oluacls_class(L, "ccui.TabHeader.EventType", nullptr);
    oluacls_const_integer(L, "SELECTED", (lua_Integer)cocos2d::ui::TabHeader::EventType::SELECTED);
    oluacls_const_integer(L, "UNSELECTED", (lua_Integer)cocos2d::ui::TabHeader::EventType::UNSELECTED);

    olua_registerluatype<cocos2d::ui::TabHeader::EventType>(L, "ccui.TabHeader.EventType");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_TabHeader_create1(lua_State *L)
{
    lua_settop(L, 0);

    // static TabHeader* create()
    cocos2d::ui::TabHeader *ret = (cocos2d::ui::TabHeader *)cocos2d::ui::TabHeader::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::TabHeader>(L, ret, "ccui.TabHeader");

    return num_ret;
}

static int _cocos2d_ui_TabHeader_create2(lua_State *L)
{
    lua_settop(L, 4);

    std::string arg1;       /** titleStr */
    std::string arg2;       /** backGround */
    std::string arg3;       /** cross */
    lua_Unsigned arg4 = 0;   /** texType */

    olua_check_std_string(L, 1, &arg1);
    olua_check_std_string(L, 2, &arg2);
    olua_check_std_string(L, 3, &arg3);
    olua_opt_uint(L, 4, &arg4, (lua_Unsigned)cocos2d::ui::Widget::TextureResType::LOCAL);

    // static TabHeader* create(const std::string& titleStr, const std::string& backGround, const std::string& cross, Widget::TextureResType texType = Widget::TextureResType::LOCAL)
    cocos2d::ui::TabHeader *ret = (cocos2d::ui::TabHeader *)cocos2d::ui::TabHeader::create(arg1, arg2, arg3, (cocos2d::ui::Widget::TextureResType)arg4);
    int num_ret = olua_push_cppobj<cocos2d::ui::TabHeader>(L, ret, "ccui.TabHeader");

    return num_ret;
}

static int _cocos2d_ui_TabHeader_create3(lua_State *L)
{
    lua_settop(L, 7);

    std::string arg1;       /** titleStr */
    std::string arg2;       /** backGround */
    std::string arg3;       /** backGroundSelected */
    std::string arg4;       /** cross */
    std::string arg5;       /** backGroundDisabled */
    std::string arg6;       /** frontCrossDisabled */
    lua_Unsigned arg7 = 0;   /** texType */

    olua_check_std_string(L, 1, &arg1);
    olua_check_std_string(L, 2, &arg2);
    olua_check_std_string(L, 3, &arg3);
    olua_check_std_string(L, 4, &arg4);
    olua_check_std_string(L, 5, &arg5);
    olua_check_std_string(L, 6, &arg6);
    olua_opt_uint(L, 7, &arg7, (lua_Unsigned)cocos2d::ui::Widget::TextureResType::LOCAL);

    // static TabHeader* create(const std::string& titleStr, const std::string& backGround, const std::string& backGroundSelected, const std::string& cross, const std::string& backGroundDisabled, const std::string& frontCrossDisabled, Widget::TextureResType texType = Widget::TextureResType::LOCAL)
    cocos2d::ui::TabHeader *ret = (cocos2d::ui::TabHeader *)cocos2d::ui::TabHeader::create(arg1, arg2, arg3, arg4, arg5, arg6, (cocos2d::ui::Widget::TextureResType)arg7);
    int num_ret = olua_push_cppobj<cocos2d::ui::TabHeader>(L, ret, "ccui.TabHeader");

    return num_ret;
}

static int _cocos2d_ui_TabHeader_create(lua_State *L)
{
    int num_args = lua_gettop(L);

    if (num_args == 0) {
        return _cocos2d_ui_TabHeader_create1(L);
    }

    if (num_args == 4) {
        // if (olua_is_std_string(L, 1) && olua_is_std_string(L, 2) && olua_is_std_string(L, 3) && (olua_is_uint(L, 4) || olua_isnil(L, 4))) {
            return _cocos2d_ui_TabHeader_create2(L);
        // }
    }

    if (num_args == 7) {
        // if (olua_is_std_string(L, 1) && olua_is_std_string(L, 2) && olua_is_std_string(L, 3) && olua_is_std_string(L, 4) && olua_is_std_string(L, 5) && olua_is_std_string(L, 6) && (olua_is_uint(L, 7) || olua_isnil(L, 7))) {
            return _cocos2d_ui_TabHeader_create3(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::TabHeader::create' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_TabHeader_getTitleRenderer(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::TabHeader *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabHeader");

    // Label* getTitleRenderer()
    cocos2d::Label *ret = (cocos2d::Label *)self->getTitleRenderer();
    int num_ret = olua_push_cppobj<cocos2d::Label>(L, ret, "cc.Label");

    return num_ret;
}

static int _cocos2d_ui_TabHeader_setTitleText(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabHeader *self = nullptr;
    std::string arg1;       /** text */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabHeader");
    olua_check_std_string(L, 2, &arg1);

    // void setTitleText(const std::string& text)
    self->setTitleText(arg1);

    return 0;
}

static int _cocos2d_ui_TabHeader_getTitleText(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::TabHeader *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabHeader");

    // std::string getTitleText()
    std::string ret = (std::string)self->getTitleText();
    int num_ret = olua_push_std_string(L, ret);

    return num_ret;
}

static int _cocos2d_ui_TabHeader_setTitleColor(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabHeader *self = nullptr;
    cocos2d::Color4B arg1;       /** color */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabHeader");
    manual_luacv_check_cocos2d_Color4B(L, 2, &arg1);

    // void setTitleColor(const Color4B& color)
    self->setTitleColor(arg1);

    return 0;
}

static int _cocos2d_ui_TabHeader_getTitleColor(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::TabHeader *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabHeader");

    // const Color4B& getTitleColor()
    const cocos2d::Color4B &ret = (const cocos2d::Color4B &)self->getTitleColor();
    int num_ret = manual_luacv_push_cocos2d_Color4B(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_TabHeader_setTitleFontSize(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabHeader *self = nullptr;
    lua_Number arg1 = 0;   /** size */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabHeader");
    olua_check_number(L, 2, &arg1);

    // void setTitleFontSize(float size)
    self->setTitleFontSize((float)arg1);

    return 0;
}

static int _cocos2d_ui_TabHeader_getTitleFontSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::TabHeader *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabHeader");

    // float getTitleFontSize()
    float ret = (float)self->getTitleFontSize();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_TabHeader_setTitleFontName(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabHeader *self = nullptr;
    std::string arg1;       /** fontName */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabHeader");
    olua_check_std_string(L, 2, &arg1);

    // void setTitleFontName(const std::string& fontName)
    self->setTitleFontName(arg1);

    return 0;
}

static int _cocos2d_ui_TabHeader_getTitleFontName(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::TabHeader *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabHeader");

    // std::string getTitleFontName()
    std::string ret = (std::string)self->getTitleFontName();
    int num_ret = olua_push_std_string(L, ret);

    return num_ret;
}

static int _cocos2d_ui_TabHeader_getIndexInTabControl(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::TabHeader *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabHeader");

    // int   getIndexInTabControl()
    int ret = (int)self->getIndexInTabControl();
    int num_ret = olua_push_int(L, (lua_Integer)ret);

    return num_ret;
}

static int luaopen_cocos2d_ui_TabHeader(lua_State *L)
{
    oluacls_class(L, "ccui.TabHeader", "ccui.AbstractCheckButton");
    oluacls_setfunc(L, "create", _cocos2d_ui_TabHeader_create);
    oluacls_setfunc(L, "getTitleRenderer", _cocos2d_ui_TabHeader_getTitleRenderer);
    oluacls_setfunc(L, "setTitleText", _cocos2d_ui_TabHeader_setTitleText);
    oluacls_setfunc(L, "getTitleText", _cocos2d_ui_TabHeader_getTitleText);
    oluacls_setfunc(L, "setTitleColor", _cocos2d_ui_TabHeader_setTitleColor);
    oluacls_setfunc(L, "getTitleColor", _cocos2d_ui_TabHeader_getTitleColor);
    oluacls_setfunc(L, "setTitleFontSize", _cocos2d_ui_TabHeader_setTitleFontSize);
    oluacls_setfunc(L, "getTitleFontSize", _cocos2d_ui_TabHeader_getTitleFontSize);
    oluacls_setfunc(L, "setTitleFontName", _cocos2d_ui_TabHeader_setTitleFontName);
    oluacls_setfunc(L, "getTitleFontName", _cocos2d_ui_TabHeader_getTitleFontName);
    oluacls_setfunc(L, "getIndexInTabControl", _cocos2d_ui_TabHeader_getIndexInTabControl);

    olua_registerluatype<cocos2d::ui::TabHeader>(L, "ccui.TabHeader");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_TabControl_Dock(lua_State *L)
{
    oluacls_class(L, "ccui.TabControl.Dock", nullptr);
    oluacls_const_integer(L, "TOP", (lua_Integer)cocos2d::ui::TabControl::Dock::TOP);
    oluacls_const_integer(L, "LEFT", (lua_Integer)cocos2d::ui::TabControl::Dock::LEFT);
    oluacls_const_integer(L, "BOTTOM", (lua_Integer)cocos2d::ui::TabControl::Dock::BOTTOM);
    oluacls_const_integer(L, "RIGHT", (lua_Integer)cocos2d::ui::TabControl::Dock::RIGHT);

    olua_registerluatype<cocos2d::ui::TabControl::Dock>(L, "ccui.TabControl.Dock");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_TabControl_EventType(lua_State *L)
{
    oluacls_class(L, "ccui.TabControl.EventType", nullptr);
    oluacls_const_integer(L, "SELECT_CHANGED", (lua_Integer)cocos2d::ui::TabControl::EventType::SELECT_CHANGED);

    olua_registerluatype<cocos2d::ui::TabControl::EventType>(L, "ccui.TabControl.EventType");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_TabControl_create(lua_State *L)
{
    lua_settop(L, 0);

    // static TabControl* create()
    cocos2d::ui::TabControl *ret = (cocos2d::ui::TabControl *)cocos2d::ui::TabControl::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::TabControl>(L, ret, "ccui.TabControl");

    return num_ret;
}

static int _cocos2d_ui_TabControl_removeTab(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabControl *self = nullptr;
    lua_Integer arg1 = 0;   /** index */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");
    olua_check_int(L, 2, &arg1);

    // void      removeTab(int index)
    self->removeTab((int)arg1);

    return 0;
}

static int _cocos2d_ui_TabControl_setSelectTab1(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabControl *self = nullptr;
    lua_Integer arg1 = 0;   /** index */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");
    olua_check_int(L, 2, &arg1);

    // void      setSelectTab(int index)
    self->setSelectTab((int)arg1);

    return 0;
}

static int _cocos2d_ui_TabControl_setSelectTab2(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabControl *self = nullptr;
    cocos2d::ui::TabHeader *arg1 = nullptr;   /** tabHeader */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");
    olua_check_cppobj(L, 2, (void **)&arg1, "ccui.TabHeader");

    // void      setSelectTab(TabHeader* tabHeader)
    self->setSelectTab(arg1);

    return 0;
}

static int _cocos2d_ui_TabControl_setSelectTab(lua_State *L)
{
    int num_args = lua_gettop(L) - 1;

    if (num_args == 1) {
        if (olua_is_int(L, 2)) {
            return _cocos2d_ui_TabControl_setSelectTab1(L);
        }

        // if (olua_is_cppobj(L, 2, "ccui.TabHeader")) {
            return _cocos2d_ui_TabControl_setSelectTab2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::TabControl::setSelectTab' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_TabControl_getTabHeader(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabControl *self = nullptr;
    lua_Integer arg1 = 0;   /** index */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");
    olua_check_int(L, 2, &arg1);

    // TabHeader* getTabHeader(int index)
    cocos2d::ui::TabHeader *ret = (cocos2d::ui::TabHeader *)self->getTabHeader((int)arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::TabHeader>(L, ret, "ccui.TabHeader");

    return num_ret;
}

static int _cocos2d_ui_TabControl_getTabContainer(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabControl *self = nullptr;
    lua_Integer arg1 = 0;   /** index */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");
    olua_check_int(L, 2, &arg1);

    // Layout*   getTabContainer(int index)
    cocos2d::ui::Layout *ret = (cocos2d::ui::Layout *)self->getTabContainer((int)arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::Layout>(L, ret, "ccui.Layout");

    return num_ret;
}

static int _cocos2d_ui_TabControl_insertTab(lua_State *L)
{
    lua_settop(L, 4);

    cocos2d::ui::TabControl *self = nullptr;
    lua_Integer arg1 = 0;   /** index */
    cocos2d::ui::TabHeader *arg2 = nullptr;   /** header */
    cocos2d::ui::Layout *arg3 = nullptr;   /** container */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");
    olua_check_int(L, 2, &arg1);
    olua_check_cppobj(L, 3, (void **)&arg2, "ccui.TabHeader");
    olua_check_cppobj(L, 4, (void **)&arg3, "ccui.Layout");

    // void      insertTab(int index, TabHeader* header, Layout* container)
    self->insertTab((int)arg1, arg2, arg3);

    return 0;
}

static int _cocos2d_ui_TabControl_getTabCount(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::TabControl *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");

    // size_t    getTabCount()
    size_t ret = (size_t)self->getTabCount();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_TabControl_getSelectedTabIndex(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::TabControl *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");

    // int getSelectedTabIndex()
    int ret = (int)self->getSelectedTabIndex();
    int num_ret = olua_push_int(L, (lua_Integer)ret);

    return num_ret;
}

static int _cocos2d_ui_TabControl_indexOfTabHeader(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabControl *self = nullptr;
    cocos2d::ui::TabHeader *arg1 = nullptr;   /** tabCell */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");
    olua_check_cppobj(L, 2, (void **)&arg1, "ccui.TabHeader");

    // int indexOfTabHeader(const TabHeader* tabCell)
    int ret = (int)self->indexOfTabHeader(arg1);
    int num_ret = olua_push_int(L, (lua_Integer)ret);

    return num_ret;
}

static int _cocos2d_ui_TabControl_setHeaderWidth(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabControl *self = nullptr;
    lua_Number arg1 = 0;   /** headerWidth */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");
    olua_check_number(L, 2, &arg1);

    // void  setHeaderWidth(float headerWidth)
    self->setHeaderWidth((float)arg1);

    return 0;
}

static int _cocos2d_ui_TabControl_getHeaderWidth(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::TabControl *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");

    // float getHeaderWidth()
    float ret = (float)self->getHeaderWidth();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_TabControl_setHeaderHeight(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabControl *self = nullptr;
    lua_Number arg1 = 0;   /** headerHeight */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");
    olua_check_number(L, 2, &arg1);

    // void  setHeaderHeight(float headerHeight)
    self->setHeaderHeight((float)arg1);

    return 0;
}

static int _cocos2d_ui_TabControl_getHeaderHeight(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::TabControl *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");

    // int   getHeaderHeight()
    int ret = (int)self->getHeaderHeight();
    int num_ret = olua_push_int(L, (lua_Integer)ret);

    return num_ret;
}

static int _cocos2d_ui_TabControl_ignoreHeadersTextureSize(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabControl *self = nullptr;
    bool arg1 = false;   /** ignore */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");
    olua_check_bool(L, 2, &arg1);

    // void  ignoreHeadersTextureSize(bool ignore)
    self->ignoreHeadersTextureSize(arg1);

    return 0;
}

static int _cocos2d_ui_TabControl_isIgnoreHeadersTextureSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::TabControl *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");

    // bool  isIgnoreHeadersTextureSize()
    bool ret = (bool)self->isIgnoreHeadersTextureSize();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_TabControl_setHeaderSelectedZoom(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabControl *self = nullptr;
    lua_Number arg1 = 0;   /** zoom */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");
    olua_check_number(L, 2, &arg1);

    // void  setHeaderSelectedZoom(float zoom)
    self->setHeaderSelectedZoom((float)arg1);

    return 0;
}

static int _cocos2d_ui_TabControl_getHeaderSelectedZoom(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::TabControl *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");

    // float getHeaderSelectedZoom()
    float ret = (float)self->getHeaderSelectedZoom();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_TabControl_setHeaderDockPlace(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabControl *self = nullptr;
    lua_Unsigned arg1 = 0;   /** dockPlace */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");
    olua_check_uint(L, 2, &arg1);

    // void         setHeaderDockPlace(TabControl::Dock dockPlace)
    self->setHeaderDockPlace((cocos2d::ui::TabControl::Dock)arg1);

    return 0;
}

static int _cocos2d_ui_TabControl_getHeaderDockPlace(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::TabControl *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");

    // TabControl::Dock getHeaderDockPlace()
    cocos2d::ui::TabControl::Dock ret = (cocos2d::ui::TabControl::Dock)self->getHeaderDockPlace();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_TabControl_setTabChangedEventListener(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::TabControl *self = nullptr;
    std::function<void(int, cocos2d::ui::TabControl::EventType)> arg1 = nullptr;   /** callback */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.TabControl");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("TabChangedEventListener");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](int arg1, cocos2d::ui::TabControl::EventType arg2) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);

            olua_push_int(L, (lua_Integer)arg1);
            olua_push_uint(L, (lua_Unsigned)arg2);
            olua_callback(L, callback_store_obj, func.c_str(), 2);

            lua_settop(L, top);
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("TabChangedEventListener");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // void setTabChangedEventListener(@nullable const std::function<void(int tabIndex, EventType)>& callback)
    self->setTabChangedEventListener(arg1);

    return 0;
}

static int luaopen_cocos2d_ui_TabControl(lua_State *L)
{
    oluacls_class(L, "ccui.TabControl", "ccui.Widget");
    oluacls_setfunc(L, "create", _cocos2d_ui_TabControl_create);
    oluacls_setfunc(L, "removeTab", _cocos2d_ui_TabControl_removeTab);
    oluacls_setfunc(L, "setSelectTab", _cocos2d_ui_TabControl_setSelectTab);
    oluacls_setfunc(L, "getTabHeader", _cocos2d_ui_TabControl_getTabHeader);
    oluacls_setfunc(L, "getTabContainer", _cocos2d_ui_TabControl_getTabContainer);
    oluacls_setfunc(L, "insertTab", _cocos2d_ui_TabControl_insertTab);
    oluacls_setfunc(L, "getTabCount", _cocos2d_ui_TabControl_getTabCount);
    oluacls_setfunc(L, "getSelectedTabIndex", _cocos2d_ui_TabControl_getSelectedTabIndex);
    oluacls_setfunc(L, "indexOfTabHeader", _cocos2d_ui_TabControl_indexOfTabHeader);
    oluacls_setfunc(L, "setHeaderWidth", _cocos2d_ui_TabControl_setHeaderWidth);
    oluacls_setfunc(L, "getHeaderWidth", _cocos2d_ui_TabControl_getHeaderWidth);
    oluacls_setfunc(L, "setHeaderHeight", _cocos2d_ui_TabControl_setHeaderHeight);
    oluacls_setfunc(L, "getHeaderHeight", _cocos2d_ui_TabControl_getHeaderHeight);
    oluacls_setfunc(L, "ignoreHeadersTextureSize", _cocos2d_ui_TabControl_ignoreHeadersTextureSize);
    oluacls_setfunc(L, "isIgnoreHeadersTextureSize", _cocos2d_ui_TabControl_isIgnoreHeadersTextureSize);
    oluacls_setfunc(L, "setHeaderSelectedZoom", _cocos2d_ui_TabControl_setHeaderSelectedZoom);
    oluacls_setfunc(L, "getHeaderSelectedZoom", _cocos2d_ui_TabControl_getHeaderSelectedZoom);
    oluacls_setfunc(L, "setHeaderDockPlace", _cocos2d_ui_TabControl_setHeaderDockPlace);
    oluacls_setfunc(L, "getHeaderDockPlace", _cocos2d_ui_TabControl_getHeaderDockPlace);
    oluacls_setfunc(L, "setTabChangedEventListener", _cocos2d_ui_TabControl_setTabChangedEventListener);

    olua_registerluatype<cocos2d::ui::TabControl>(L, "ccui.TabControl");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_ScrollView_Direction(lua_State *L)
{
    oluacls_class(L, "ccui.ScrollView.Direction", nullptr);
    oluacls_const_integer(L, "NONE", (lua_Integer)cocos2d::ui::ScrollView::Direction::NONE);
    oluacls_const_integer(L, "VERTICAL", (lua_Integer)cocos2d::ui::ScrollView::Direction::VERTICAL);
    oluacls_const_integer(L, "HORIZONTAL", (lua_Integer)cocos2d::ui::ScrollView::Direction::HORIZONTAL);
    oluacls_const_integer(L, "BOTH", (lua_Integer)cocos2d::ui::ScrollView::Direction::BOTH);

    olua_registerluatype<cocos2d::ui::ScrollView::Direction>(L, "ccui.ScrollView.Direction");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_ScrollView_EventType(lua_State *L)
{
    oluacls_class(L, "ccui.ScrollView.EventType", nullptr);
    oluacls_const_integer(L, "SCROLL_TO_TOP", (lua_Integer)cocos2d::ui::ScrollView::EventType::SCROLL_TO_TOP);
    oluacls_const_integer(L, "SCROLL_TO_BOTTOM", (lua_Integer)cocos2d::ui::ScrollView::EventType::SCROLL_TO_BOTTOM);
    oluacls_const_integer(L, "SCROLL_TO_LEFT", (lua_Integer)cocos2d::ui::ScrollView::EventType::SCROLL_TO_LEFT);
    oluacls_const_integer(L, "SCROLL_TO_RIGHT", (lua_Integer)cocos2d::ui::ScrollView::EventType::SCROLL_TO_RIGHT);
    oluacls_const_integer(L, "SCROLLING", (lua_Integer)cocos2d::ui::ScrollView::EventType::SCROLLING);
    oluacls_const_integer(L, "BOUNCE_TOP", (lua_Integer)cocos2d::ui::ScrollView::EventType::BOUNCE_TOP);
    oluacls_const_integer(L, "BOUNCE_BOTTOM", (lua_Integer)cocos2d::ui::ScrollView::EventType::BOUNCE_BOTTOM);
    oluacls_const_integer(L, "BOUNCE_LEFT", (lua_Integer)cocos2d::ui::ScrollView::EventType::BOUNCE_LEFT);
    oluacls_const_integer(L, "BOUNCE_RIGHT", (lua_Integer)cocos2d::ui::ScrollView::EventType::BOUNCE_RIGHT);
    oluacls_const_integer(L, "CONTAINER_MOVED", (lua_Integer)cocos2d::ui::ScrollView::EventType::CONTAINER_MOVED);
    oluacls_const_integer(L, "SCROLLING_BEGAN", (lua_Integer)cocos2d::ui::ScrollView::EventType::SCROLLING_BEGAN);
    oluacls_const_integer(L, "SCROLLING_ENDED", (lua_Integer)cocos2d::ui::ScrollView::EventType::SCROLLING_ENDED);
    oluacls_const_integer(L, "AUTOSCROLL_ENDED", (lua_Integer)cocos2d::ui::ScrollView::EventType::AUTOSCROLL_ENDED);

    olua_registerluatype<cocos2d::ui::ScrollView::EventType>(L, "ccui.ScrollView.EventType");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_ScrollView_create(lua_State *L)
{
    lua_settop(L, 0);

    // static ScrollView* create()
    cocos2d::ui::ScrollView *ret = (cocos2d::ui::ScrollView *)cocos2d::ui::ScrollView::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::ScrollView>(L, ret, "ccui.ScrollView");

    return num_ret;
}

static int _cocos2d_ui_ScrollView_setDirection(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Unsigned arg1 = 0;   /** dir */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_uint(L, 2, &arg1);

    // void setDirection(Direction dir)
    self->setDirection((cocos2d::ui::ScrollView::Direction)arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_getDirection(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // Direction getDirection()
    cocos2d::ui::ScrollView::Direction ret = (cocos2d::ui::ScrollView::Direction)self->getDirection();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_getInnerContainer(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // Layout* getInnerContainer()
    cocos2d::ui::Layout *ret = (cocos2d::ui::Layout *)self->getInnerContainer();
    int num_ret = olua_push_cppobj<cocos2d::ui::Layout>(L, ret, "ccui.Layout");

    return num_ret;
}

static int _cocos2d_ui_ScrollView_stopScroll(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // void stopScroll()
    self->stopScroll();

    return 0;
}

static int _cocos2d_ui_ScrollView_stopAutoScroll(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // void stopAutoScroll()
    self->stopAutoScroll();

    return 0;
}

static int _cocos2d_ui_ScrollView_stopOverallScroll(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // void stopOverallScroll()
    self->stopOverallScroll();

    return 0;
}

static int _cocos2d_ui_ScrollView_scrollToBottom(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Number arg1 = 0;   /** timeInSec */
    bool arg2 = false;   /** attenuated */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_number(L, 2, &arg1);
    olua_check_bool(L, 3, &arg2);

    // void scrollToBottom(float timeInSec, bool attenuated)
    self->scrollToBottom((float)arg1, arg2);

    return 0;
}

static int _cocos2d_ui_ScrollView_scrollToTop(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Number arg1 = 0;   /** timeInSec */
    bool arg2 = false;   /** attenuated */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_number(L, 2, &arg1);
    olua_check_bool(L, 3, &arg2);

    // void scrollToTop(float timeInSec, bool attenuated)
    self->scrollToTop((float)arg1, arg2);

    return 0;
}

static int _cocos2d_ui_ScrollView_scrollToLeft(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Number arg1 = 0;   /** timeInSec */
    bool arg2 = false;   /** attenuated */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_number(L, 2, &arg1);
    olua_check_bool(L, 3, &arg2);

    // void scrollToLeft(float timeInSec, bool attenuated)
    self->scrollToLeft((float)arg1, arg2);

    return 0;
}

static int _cocos2d_ui_ScrollView_scrollToRight(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Number arg1 = 0;   /** timeInSec */
    bool arg2 = false;   /** attenuated */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_number(L, 2, &arg1);
    olua_check_bool(L, 3, &arg2);

    // void scrollToRight(float timeInSec, bool attenuated)
    self->scrollToRight((float)arg1, arg2);

    return 0;
}

static int _cocos2d_ui_ScrollView_scrollToTopLeft(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Number arg1 = 0;   /** timeInSec */
    bool arg2 = false;   /** attenuated */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_number(L, 2, &arg1);
    olua_check_bool(L, 3, &arg2);

    // void scrollToTopLeft(float timeInSec, bool attenuated)
    self->scrollToTopLeft((float)arg1, arg2);

    return 0;
}

static int _cocos2d_ui_ScrollView_scrollToTopRight(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Number arg1 = 0;   /** timeInSec */
    bool arg2 = false;   /** attenuated */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_number(L, 2, &arg1);
    olua_check_bool(L, 3, &arg2);

    // void scrollToTopRight(float timeInSec, bool attenuated)
    self->scrollToTopRight((float)arg1, arg2);

    return 0;
}

static int _cocos2d_ui_ScrollView_scrollToBottomLeft(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Number arg1 = 0;   /** timeInSec */
    bool arg2 = false;   /** attenuated */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_number(L, 2, &arg1);
    olua_check_bool(L, 3, &arg2);

    // void scrollToBottomLeft(float timeInSec, bool attenuated)
    self->scrollToBottomLeft((float)arg1, arg2);

    return 0;
}

static int _cocos2d_ui_ScrollView_scrollToBottomRight(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Number arg1 = 0;   /** timeInSec */
    bool arg2 = false;   /** attenuated */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_number(L, 2, &arg1);
    olua_check_bool(L, 3, &arg2);

    // void scrollToBottomRight(float timeInSec, bool attenuated)
    self->scrollToBottomRight((float)arg1, arg2);

    return 0;
}

static int _cocos2d_ui_ScrollView_scrollToPercentVertical(lua_State *L)
{
    lua_settop(L, 4);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Number arg1 = 0;   /** percent */
    lua_Number arg2 = 0;   /** timeInSec */
    bool arg3 = false;   /** attenuated */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_number(L, 2, &arg1);
    olua_check_number(L, 3, &arg2);
    olua_check_bool(L, 4, &arg3);

    // void scrollToPercentVertical(float percent, float timeInSec, bool attenuated)
    self->scrollToPercentVertical((float)arg1, (float)arg2, arg3);

    return 0;
}

static int _cocos2d_ui_ScrollView_scrollToPercentHorizontal(lua_State *L)
{
    lua_settop(L, 4);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Number arg1 = 0;   /** percent */
    lua_Number arg2 = 0;   /** timeInSec */
    bool arg3 = false;   /** attenuated */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_number(L, 2, &arg1);
    olua_check_number(L, 3, &arg2);
    olua_check_bool(L, 4, &arg3);

    // void scrollToPercentHorizontal(float percent, float timeInSec, bool attenuated)
    self->scrollToPercentHorizontal((float)arg1, (float)arg2, arg3);

    return 0;
}

static int _cocos2d_ui_ScrollView_scrollToPercentBothDirection(lua_State *L)
{
    lua_settop(L, 4);

    cocos2d::ui::ScrollView *self = nullptr;
    cocos2d::Vec2 arg1;       /** percent */
    lua_Number arg2 = 0;   /** timeInSec */
    bool arg3 = false;   /** attenuated */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);
    olua_check_number(L, 3, &arg2);
    olua_check_bool(L, 4, &arg3);

    // void scrollToPercentBothDirection(const Vec2& percent, float timeInSec, bool attenuated)
    self->scrollToPercentBothDirection(arg1, (float)arg2, arg3);

    return 0;
}

static int _cocos2d_ui_ScrollView_getScrolledPercentVertical(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // float getScrolledPercentVertical()
    float ret = (float)self->getScrolledPercentVertical();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_getScrolledPercentHorizontal(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // float getScrolledPercentHorizontal()
    float ret = (float)self->getScrolledPercentHorizontal();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_getScrolledPercentBothDirection(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // Vec2 getScrolledPercentBothDirection()
    cocos2d::Vec2 ret = (cocos2d::Vec2)self->getScrolledPercentBothDirection();
    int num_ret = auto_luacv_push_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_jumpToBottom(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // void jumpToBottom()
    self->jumpToBottom();

    return 0;
}

static int _cocos2d_ui_ScrollView_jumpToTop(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // void jumpToTop()
    self->jumpToTop();

    return 0;
}

static int _cocos2d_ui_ScrollView_jumpToLeft(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // void jumpToLeft()
    self->jumpToLeft();

    return 0;
}

static int _cocos2d_ui_ScrollView_jumpToRight(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // void jumpToRight()
    self->jumpToRight();

    return 0;
}

static int _cocos2d_ui_ScrollView_jumpToTopLeft(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // void jumpToTopLeft()
    self->jumpToTopLeft();

    return 0;
}

static int _cocos2d_ui_ScrollView_jumpToTopRight(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // void jumpToTopRight()
    self->jumpToTopRight();

    return 0;
}

static int _cocos2d_ui_ScrollView_jumpToBottomLeft(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // void jumpToBottomLeft()
    self->jumpToBottomLeft();

    return 0;
}

static int _cocos2d_ui_ScrollView_jumpToBottomRight(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // void jumpToBottomRight()
    self->jumpToBottomRight();

    return 0;
}

static int _cocos2d_ui_ScrollView_jumpToPercentVertical(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Number arg1 = 0;   /** percent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_number(L, 2, &arg1);

    // void jumpToPercentVertical(float percent)
    self->jumpToPercentVertical((float)arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_jumpToPercentHorizontal(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Number arg1 = 0;   /** percent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_number(L, 2, &arg1);

    // void jumpToPercentHorizontal(float percent)
    self->jumpToPercentHorizontal((float)arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_jumpToPercentBothDirection(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    cocos2d::Vec2 arg1;       /** percent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);

    // void jumpToPercentBothDirection(const Vec2& percent)
    self->jumpToPercentBothDirection(arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_setInnerContainerSize(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    cocos2d::Size arg1;       /** size */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    auto_luacv_check_cocos2d_Size(L, 2, &arg1);

    // void setInnerContainerSize(const Size &size)
    self->setInnerContainerSize(arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_getInnerContainerSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // const Size& getInnerContainerSize()
    const cocos2d::Size &ret = (const cocos2d::Size &)self->getInnerContainerSize();
    int num_ret = auto_luacv_push_cocos2d_Size(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_setInnerContainerPosition(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    cocos2d::Vec2 arg1;       /** pos */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);

    // void setInnerContainerPosition(const Vec2 &pos)
    self->setInnerContainerPosition(arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_getInnerContainerPosition(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // const Vec2& getInnerContainerPosition()
    const cocos2d::Vec2 &ret = (const cocos2d::Vec2 &)self->getInnerContainerPosition();
    int num_ret = auto_luacv_push_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_getChildren(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // Vector<Node*>& getChildren()
    cocos2d::Vector<cocos2d::Node *> &ret = (cocos2d::Vector<cocos2d::Node *> &)self->getChildren();
    int num_ret = manual_luacv_push_cocos2d_Vector(L, ret, "cc.Node");

    return num_ret;
}

static int _cocos2d_ui_ScrollView_setBounceEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    bool arg1 = false;   /** enabled */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_bool(L, 2, &arg1);

    // void setBounceEnabled(bool enabled)
    self->setBounceEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_isBounceEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // bool isBounceEnabled()
    bool ret = (bool)self->isBounceEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_setInertiaScrollEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    bool arg1 = false;   /** enabled */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_bool(L, 2, &arg1);

    // void setInertiaScrollEnabled(bool enabled)
    self->setInertiaScrollEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_isInertiaScrollEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // bool isInertiaScrollEnabled()
    bool ret = (bool)self->isInertiaScrollEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_setScrollBarEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    bool arg1 = false;   /** enabled */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_bool(L, 2, &arg1);

    // void setScrollBarEnabled(bool enabled)
    self->setScrollBarEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_isScrollBarEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // bool isScrollBarEnabled()
    bool ret = (bool)self->isScrollBarEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_setScrollBarPositionFromCorner(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    cocos2d::Vec2 arg1;       /** positionFromCorner */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);

    // void setScrollBarPositionFromCorner(const Vec2& positionFromCorner)
    self->setScrollBarPositionFromCorner(arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_setScrollBarPositionFromCornerForVertical(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    cocos2d::Vec2 arg1;       /** positionFromCorner */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);

    // void setScrollBarPositionFromCornerForVertical(const Vec2& positionFromCorner)
    self->setScrollBarPositionFromCornerForVertical(arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_getScrollBarPositionFromCornerForVertical(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // Vec2 getScrollBarPositionFromCornerForVertical()
    cocos2d::Vec2 ret = (cocos2d::Vec2)self->getScrollBarPositionFromCornerForVertical();
    int num_ret = auto_luacv_push_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_setScrollBarPositionFromCornerForHorizontal(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    cocos2d::Vec2 arg1;       /** positionFromCorner */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);

    // void setScrollBarPositionFromCornerForHorizontal(const Vec2& positionFromCorner)
    self->setScrollBarPositionFromCornerForHorizontal(arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_getScrollBarPositionFromCornerForHorizontal(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // Vec2 getScrollBarPositionFromCornerForHorizontal()
    cocos2d::Vec2 ret = (cocos2d::Vec2)self->getScrollBarPositionFromCornerForHorizontal();
    int num_ret = auto_luacv_push_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_setScrollBarWidth(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Number arg1 = 0;   /** width */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_number(L, 2, &arg1);

    // void setScrollBarWidth(float width)
    self->setScrollBarWidth((float)arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_getScrollBarWidth(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // float getScrollBarWidth()
    float ret = (float)self->getScrollBarWidth();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_setScrollBarColor(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    cocos2d::Color3B arg1;       /** color */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    manual_luacv_check_cocos2d_Color3B(L, 2, &arg1);

    // void setScrollBarColor(const Color3B& color)
    self->setScrollBarColor(arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_getScrollBarColor(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // const Color3B& getScrollBarColor()
    const cocos2d::Color3B &ret = (const cocos2d::Color3B &)self->getScrollBarColor();
    int num_ret = manual_luacv_push_cocos2d_Color3B(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_setScrollBarOpacity(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Unsigned arg1 = 0;   /** opacity */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_uint(L, 2, &arg1);

    // void setScrollBarOpacity(GLubyte opacity)
    self->setScrollBarOpacity((GLubyte)arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_getScrollBarOpacity(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // GLubyte getScrollBarOpacity()
    GLubyte ret = (GLubyte)self->getScrollBarOpacity();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_setScrollBarAutoHideEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    bool arg1 = false;   /** autoHideEnabled */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_bool(L, 2, &arg1);

    // void setScrollBarAutoHideEnabled(bool autoHideEnabled)
    self->setScrollBarAutoHideEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_isScrollBarAutoHideEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // bool isScrollBarAutoHideEnabled()
    bool ret = (bool)self->isScrollBarAutoHideEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_setScrollBarAutoHideTime(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Number arg1 = 0;   /** autoHideTime */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_number(L, 2, &arg1);

    // void setScrollBarAutoHideTime(float autoHideTime)
    self->setScrollBarAutoHideTime((float)arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_getScrollBarAutoHideTime(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // float getScrollBarAutoHideTime()
    float ret = (float)self->getScrollBarAutoHideTime();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_setTouchTotalTimeThreshold(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    lua_Number arg1 = 0;   /** touchTotalTimeThreshold */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");
    olua_check_number(L, 2, &arg1);

    // void setTouchTotalTimeThreshold(float touchTotalTimeThreshold)
    self->setTouchTotalTimeThreshold((float)arg1);

    return 0;
}

static int _cocos2d_ui_ScrollView_getTouchTotalTimeThreshold(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // float getTouchTotalTimeThreshold()
    float ret = (float)self->getTouchTotalTimeThreshold();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_isScrolling(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // bool isScrolling()
    bool ret = (bool)self->isScrolling();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_isAutoScrolling(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ScrollView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    // bool isAutoScrolling()
    bool ret = (bool)self->isAutoScrolling();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_ScrollView_addEventListener(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ScrollView *self = nullptr;
    std::function<void(cocos2d::Ref *, cocos2d::ui::ScrollView::EventType)> arg1 = nullptr;   /** callback */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ScrollView");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("ScrollCallback");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::Ref *arg1, cocos2d::ui::ScrollView::EventType arg2) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);

            olua_push_cppobj<cocos2d::Ref>(L, arg1, "cc.Ref");
            olua_push_uint(L, (lua_Unsigned)arg2);
            olua_callback(L, callback_store_obj, func.c_str(), 2);

            lua_settop(L, top);
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("ScrollCallback");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // void addEventListener(@nullable const std::function<void(Ref*, EventType)>& callback)
    self->addEventListener(arg1);

    return 0;
}

static int luaopen_cocos2d_ui_ScrollView(lua_State *L)
{
    oluacls_class(L, "ccui.ScrollView", "ccui.Layout");
    oluacls_setfunc(L, "create", _cocos2d_ui_ScrollView_create);
    oluacls_setfunc(L, "setDirection", _cocos2d_ui_ScrollView_setDirection);
    oluacls_setfunc(L, "getDirection", _cocos2d_ui_ScrollView_getDirection);
    oluacls_setfunc(L, "getInnerContainer", _cocos2d_ui_ScrollView_getInnerContainer);
    oluacls_setfunc(L, "stopScroll", _cocos2d_ui_ScrollView_stopScroll);
    oluacls_setfunc(L, "stopAutoScroll", _cocos2d_ui_ScrollView_stopAutoScroll);
    oluacls_setfunc(L, "stopOverallScroll", _cocos2d_ui_ScrollView_stopOverallScroll);
    oluacls_setfunc(L, "scrollToBottom", _cocos2d_ui_ScrollView_scrollToBottom);
    oluacls_setfunc(L, "scrollToTop", _cocos2d_ui_ScrollView_scrollToTop);
    oluacls_setfunc(L, "scrollToLeft", _cocos2d_ui_ScrollView_scrollToLeft);
    oluacls_setfunc(L, "scrollToRight", _cocos2d_ui_ScrollView_scrollToRight);
    oluacls_setfunc(L, "scrollToTopLeft", _cocos2d_ui_ScrollView_scrollToTopLeft);
    oluacls_setfunc(L, "scrollToTopRight", _cocos2d_ui_ScrollView_scrollToTopRight);
    oluacls_setfunc(L, "scrollToBottomLeft", _cocos2d_ui_ScrollView_scrollToBottomLeft);
    oluacls_setfunc(L, "scrollToBottomRight", _cocos2d_ui_ScrollView_scrollToBottomRight);
    oluacls_setfunc(L, "scrollToPercentVertical", _cocos2d_ui_ScrollView_scrollToPercentVertical);
    oluacls_setfunc(L, "scrollToPercentHorizontal", _cocos2d_ui_ScrollView_scrollToPercentHorizontal);
    oluacls_setfunc(L, "scrollToPercentBothDirection", _cocos2d_ui_ScrollView_scrollToPercentBothDirection);
    oluacls_setfunc(L, "getScrolledPercentVertical", _cocos2d_ui_ScrollView_getScrolledPercentVertical);
    oluacls_setfunc(L, "getScrolledPercentHorizontal", _cocos2d_ui_ScrollView_getScrolledPercentHorizontal);
    oluacls_setfunc(L, "getScrolledPercentBothDirection", _cocos2d_ui_ScrollView_getScrolledPercentBothDirection);
    oluacls_setfunc(L, "jumpToBottom", _cocos2d_ui_ScrollView_jumpToBottom);
    oluacls_setfunc(L, "jumpToTop", _cocos2d_ui_ScrollView_jumpToTop);
    oluacls_setfunc(L, "jumpToLeft", _cocos2d_ui_ScrollView_jumpToLeft);
    oluacls_setfunc(L, "jumpToRight", _cocos2d_ui_ScrollView_jumpToRight);
    oluacls_setfunc(L, "jumpToTopLeft", _cocos2d_ui_ScrollView_jumpToTopLeft);
    oluacls_setfunc(L, "jumpToTopRight", _cocos2d_ui_ScrollView_jumpToTopRight);
    oluacls_setfunc(L, "jumpToBottomLeft", _cocos2d_ui_ScrollView_jumpToBottomLeft);
    oluacls_setfunc(L, "jumpToBottomRight", _cocos2d_ui_ScrollView_jumpToBottomRight);
    oluacls_setfunc(L, "jumpToPercentVertical", _cocos2d_ui_ScrollView_jumpToPercentVertical);
    oluacls_setfunc(L, "jumpToPercentHorizontal", _cocos2d_ui_ScrollView_jumpToPercentHorizontal);
    oluacls_setfunc(L, "jumpToPercentBothDirection", _cocos2d_ui_ScrollView_jumpToPercentBothDirection);
    oluacls_setfunc(L, "setInnerContainerSize", _cocos2d_ui_ScrollView_setInnerContainerSize);
    oluacls_setfunc(L, "getInnerContainerSize", _cocos2d_ui_ScrollView_getInnerContainerSize);
    oluacls_setfunc(L, "setInnerContainerPosition", _cocos2d_ui_ScrollView_setInnerContainerPosition);
    oluacls_setfunc(L, "getInnerContainerPosition", _cocos2d_ui_ScrollView_getInnerContainerPosition);
    oluacls_setfunc(L, "getChildren", _cocos2d_ui_ScrollView_getChildren);
    oluacls_setfunc(L, "setBounceEnabled", _cocos2d_ui_ScrollView_setBounceEnabled);
    oluacls_setfunc(L, "isBounceEnabled", _cocos2d_ui_ScrollView_isBounceEnabled);
    oluacls_setfunc(L, "setInertiaScrollEnabled", _cocos2d_ui_ScrollView_setInertiaScrollEnabled);
    oluacls_setfunc(L, "isInertiaScrollEnabled", _cocos2d_ui_ScrollView_isInertiaScrollEnabled);
    oluacls_setfunc(L, "setScrollBarEnabled", _cocos2d_ui_ScrollView_setScrollBarEnabled);
    oluacls_setfunc(L, "isScrollBarEnabled", _cocos2d_ui_ScrollView_isScrollBarEnabled);
    oluacls_setfunc(L, "setScrollBarPositionFromCorner", _cocos2d_ui_ScrollView_setScrollBarPositionFromCorner);
    oluacls_setfunc(L, "setScrollBarPositionFromCornerForVertical", _cocos2d_ui_ScrollView_setScrollBarPositionFromCornerForVertical);
    oluacls_setfunc(L, "getScrollBarPositionFromCornerForVertical", _cocos2d_ui_ScrollView_getScrollBarPositionFromCornerForVertical);
    oluacls_setfunc(L, "setScrollBarPositionFromCornerForHorizontal", _cocos2d_ui_ScrollView_setScrollBarPositionFromCornerForHorizontal);
    oluacls_setfunc(L, "getScrollBarPositionFromCornerForHorizontal", _cocos2d_ui_ScrollView_getScrollBarPositionFromCornerForHorizontal);
    oluacls_setfunc(L, "setScrollBarWidth", _cocos2d_ui_ScrollView_setScrollBarWidth);
    oluacls_setfunc(L, "getScrollBarWidth", _cocos2d_ui_ScrollView_getScrollBarWidth);
    oluacls_setfunc(L, "setScrollBarColor", _cocos2d_ui_ScrollView_setScrollBarColor);
    oluacls_setfunc(L, "getScrollBarColor", _cocos2d_ui_ScrollView_getScrollBarColor);
    oluacls_setfunc(L, "setScrollBarOpacity", _cocos2d_ui_ScrollView_setScrollBarOpacity);
    oluacls_setfunc(L, "getScrollBarOpacity", _cocos2d_ui_ScrollView_getScrollBarOpacity);
    oluacls_setfunc(L, "setScrollBarAutoHideEnabled", _cocos2d_ui_ScrollView_setScrollBarAutoHideEnabled);
    oluacls_setfunc(L, "isScrollBarAutoHideEnabled", _cocos2d_ui_ScrollView_isScrollBarAutoHideEnabled);
    oluacls_setfunc(L, "setScrollBarAutoHideTime", _cocos2d_ui_ScrollView_setScrollBarAutoHideTime);
    oluacls_setfunc(L, "getScrollBarAutoHideTime", _cocos2d_ui_ScrollView_getScrollBarAutoHideTime);
    oluacls_setfunc(L, "setTouchTotalTimeThreshold", _cocos2d_ui_ScrollView_setTouchTotalTimeThreshold);
    oluacls_setfunc(L, "getTouchTotalTimeThreshold", _cocos2d_ui_ScrollView_getTouchTotalTimeThreshold);
    oluacls_setfunc(L, "isScrolling", _cocos2d_ui_ScrollView_isScrolling);
    oluacls_setfunc(L, "isAutoScrolling", _cocos2d_ui_ScrollView_isAutoScrolling);
    oluacls_setfunc(L, "addEventListener", _cocos2d_ui_ScrollView_addEventListener);
    oluacls_setfunc(L, "addScrollEventListener", _cocos2d_ui_ScrollView_addEventListener);
    oluacls_property(L, "direction", _cocos2d_ui_ScrollView_getDirection, _cocos2d_ui_ScrollView_setDirection);
    oluacls_property(L, "innerContainer", _cocos2d_ui_ScrollView_getInnerContainer, nullptr);
    oluacls_property(L, "scrolledPercentVertical", _cocos2d_ui_ScrollView_getScrolledPercentVertical, nullptr);
    oluacls_property(L, "scrolledPercentHorizontal", _cocos2d_ui_ScrollView_getScrolledPercentHorizontal, nullptr);
    oluacls_property(L, "children", _cocos2d_ui_ScrollView_getChildren, nullptr);
    oluacls_property(L, "bounceEnabled", _cocos2d_ui_ScrollView_isBounceEnabled, _cocos2d_ui_ScrollView_setBounceEnabled);
    oluacls_property(L, "inertiaScrollEnabled", _cocos2d_ui_ScrollView_isInertiaScrollEnabled, _cocos2d_ui_ScrollView_setInertiaScrollEnabled);
    oluacls_property(L, "scrollBarEnabled", _cocos2d_ui_ScrollView_isScrollBarEnabled, _cocos2d_ui_ScrollView_setScrollBarEnabled);
    oluacls_property(L, "scrollBarWidth", _cocos2d_ui_ScrollView_getScrollBarWidth, _cocos2d_ui_ScrollView_setScrollBarWidth);
    oluacls_property(L, "scrollBarColor", _cocos2d_ui_ScrollView_getScrollBarColor, _cocos2d_ui_ScrollView_setScrollBarColor);
    oluacls_property(L, "scrollBarOpacity", _cocos2d_ui_ScrollView_getScrollBarOpacity, _cocos2d_ui_ScrollView_setScrollBarOpacity);
    oluacls_property(L, "scrollBarAutoHideEnabled", _cocos2d_ui_ScrollView_isScrollBarAutoHideEnabled, _cocos2d_ui_ScrollView_setScrollBarAutoHideEnabled);
    oluacls_property(L, "scrollBarAutoHideTime", _cocos2d_ui_ScrollView_getScrollBarAutoHideTime, _cocos2d_ui_ScrollView_setScrollBarAutoHideTime);
    oluacls_property(L, "touchTotalTimeThreshold", _cocos2d_ui_ScrollView_getTouchTotalTimeThreshold, _cocos2d_ui_ScrollView_setTouchTotalTimeThreshold);
    oluacls_property(L, "scrolling", _cocos2d_ui_ScrollView_isScrolling, nullptr);
    oluacls_property(L, "autoScrolling", _cocos2d_ui_ScrollView_isAutoScrolling, nullptr);

    olua_registerluatype<cocos2d::ui::ScrollView>(L, "ccui.ScrollView");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_ListView_Gravity(lua_State *L)
{
    oluacls_class(L, "ccui.ListView.Gravity", nullptr);
    oluacls_const_integer(L, "LEFT", (lua_Integer)cocos2d::ui::ListView::Gravity::LEFT);
    oluacls_const_integer(L, "RIGHT", (lua_Integer)cocos2d::ui::ListView::Gravity::RIGHT);
    oluacls_const_integer(L, "CENTER_HORIZONTAL", (lua_Integer)cocos2d::ui::ListView::Gravity::CENTER_HORIZONTAL);
    oluacls_const_integer(L, "TOP", (lua_Integer)cocos2d::ui::ListView::Gravity::TOP);
    oluacls_const_integer(L, "BOTTOM", (lua_Integer)cocos2d::ui::ListView::Gravity::BOTTOM);
    oluacls_const_integer(L, "CENTER_VERTICAL", (lua_Integer)cocos2d::ui::ListView::Gravity::CENTER_VERTICAL);

    olua_registerluatype<cocos2d::ui::ListView::Gravity>(L, "ccui.ListView.Gravity");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_ListView_EventType(lua_State *L)
{
    oluacls_class(L, "ccui.ListView.EventType", nullptr);
    oluacls_const_integer(L, "ON_SELECTED_ITEM_START", (lua_Integer)cocos2d::ui::ListView::EventType::ON_SELECTED_ITEM_START);
    oluacls_const_integer(L, "ON_SELECTED_ITEM_END", (lua_Integer)cocos2d::ui::ListView::EventType::ON_SELECTED_ITEM_END);

    olua_registerluatype<cocos2d::ui::ListView::EventType>(L, "ccui.ListView.EventType");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_ListView_MagneticType(lua_State *L)
{
    oluacls_class(L, "ccui.ListView.MagneticType", nullptr);
    oluacls_const_integer(L, "NONE", (lua_Integer)cocos2d::ui::ListView::MagneticType::NONE);
    oluacls_const_integer(L, "CENTER", (lua_Integer)cocos2d::ui::ListView::MagneticType::CENTER);
    oluacls_const_integer(L, "BOTH_END", (lua_Integer)cocos2d::ui::ListView::MagneticType::BOTH_END);
    oluacls_const_integer(L, "LEFT", (lua_Integer)cocos2d::ui::ListView::MagneticType::LEFT);
    oluacls_const_integer(L, "RIGHT", (lua_Integer)cocos2d::ui::ListView::MagneticType::RIGHT);
    oluacls_const_integer(L, "TOP", (lua_Integer)cocos2d::ui::ListView::MagneticType::TOP);
    oluacls_const_integer(L, "BOTTOM", (lua_Integer)cocos2d::ui::ListView::MagneticType::BOTTOM);

    olua_registerluatype<cocos2d::ui::ListView::MagneticType>(L, "ccui.ListView.MagneticType");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_ListView_create(lua_State *L)
{
    lua_settop(L, 0);

    // static ListView* create()
    cocos2d::ui::ListView *ret = (cocos2d::ui::ListView *)cocos2d::ui::ListView::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::ListView>(L, ret, "ccui.ListView");

    return num_ret;
}

static int _cocos2d_ui_ListView_setItemModel(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    cocos2d::ui::Widget *arg1 = nullptr;   /** model */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_cppobj(L, 2, (void **)&arg1, "ccui.Widget");

    // void setItemModel(Widget* model)
    self->setItemModel(arg1);

    return 0;
}

static int _cocos2d_ui_ListView_pushBackDefaultItem(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // void pushBackDefaultItem()
    self->pushBackDefaultItem();

    return 0;
}

static int _cocos2d_ui_ListView_insertDefaultItem(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    lua_Integer arg1 = 0;   /** index */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_int(L, 2, &arg1);

    // void insertDefaultItem(ssize_t index)
    self->insertDefaultItem((ssize_t)arg1);

    return 0;
}

static int _cocos2d_ui_ListView_pushBackCustomItem(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    cocos2d::ui::Widget *arg1 = nullptr;   /** item */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_cppobj(L, 2, (void **)&arg1, "ccui.Widget");

    // void pushBackCustomItem(Widget* item)
    self->pushBackCustomItem(arg1);

    return 0;
}

static int _cocos2d_ui_ListView_insertCustomItem(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::ListView *self = nullptr;
    cocos2d::ui::Widget *arg1 = nullptr;   /** item */
    lua_Integer arg2 = 0;   /** index */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_cppobj(L, 2, (void **)&arg1, "ccui.Widget");
    olua_check_int(L, 3, &arg2);

    // void insertCustomItem(Widget* item, ssize_t index)
    self->insertCustomItem(arg1, (ssize_t)arg2);

    return 0;
}

static int _cocos2d_ui_ListView_removeLastItem(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // void removeLastItem()
    self->removeLastItem();

    return 0;
}

static int _cocos2d_ui_ListView_removeItem(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    lua_Integer arg1 = 0;   /** index */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_int(L, 2, &arg1);

    // void removeItem(ssize_t index)
    self->removeItem((ssize_t)arg1);

    return 0;
}

static int _cocos2d_ui_ListView_removeAllItems(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // void removeAllItems()
    self->removeAllItems();

    return 0;
}

static int _cocos2d_ui_ListView_getItem(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    lua_Integer arg1 = 0;   /** index */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_int(L, 2, &arg1);

    // Widget* getItem(ssize_t index)
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)self->getItem((ssize_t)arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_ListView_getItems(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // Vector<Widget*>& getItems()
    cocos2d::Vector<cocos2d::ui::Widget *> &ret = (cocos2d::Vector<cocos2d::ui::Widget *> &)self->getItems();
    int num_ret = manual_luacv_push_cocos2d_Vector(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_ListView_getIndex(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    cocos2d::ui::Widget *arg1 = nullptr;   /** item */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_cppobj(L, 2, (void **)&arg1, "ccui.Widget");

    // ssize_t getIndex(Widget* item)
    ssize_t ret = (ssize_t)self->getIndex(arg1);
    int num_ret = olua_push_int(L, (lua_Integer)ret);

    return num_ret;
}

static int _cocos2d_ui_ListView_setGravity(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    lua_Unsigned arg1 = 0;   /** gravity */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_uint(L, 2, &arg1);

    // void setGravity(Gravity gravity)
    self->setGravity((cocos2d::ui::ListView::Gravity)arg1);

    return 0;
}

static int _cocos2d_ui_ListView_setMagneticType(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    lua_Unsigned arg1 = 0;   /** magneticType */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_uint(L, 2, &arg1);

    // void setMagneticType(MagneticType magneticType)
    self->setMagneticType((cocos2d::ui::ListView::MagneticType)arg1);

    return 0;
}

static int _cocos2d_ui_ListView_getMagneticType(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // MagneticType getMagneticType()
    cocos2d::ui::ListView::MagneticType ret = (cocos2d::ui::ListView::MagneticType)self->getMagneticType();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_ListView_setMagneticAllowedOutOfBoundary(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    bool arg1 = false;   /** magneticAllowedOutOfBoundary */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_bool(L, 2, &arg1);

    // void setMagneticAllowedOutOfBoundary(bool magneticAllowedOutOfBoundary)
    self->setMagneticAllowedOutOfBoundary(arg1);

    return 0;
}

static int _cocos2d_ui_ListView_getMagneticAllowedOutOfBoundary(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // bool getMagneticAllowedOutOfBoundary()
    bool ret = (bool)self->getMagneticAllowedOutOfBoundary();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_ListView_setItemsMargin(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    lua_Number arg1 = 0;   /** margin */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_number(L, 2, &arg1);

    // void setItemsMargin(float margin)
    self->setItemsMargin((float)arg1);

    return 0;
}

static int _cocos2d_ui_ListView_getItemsMargin(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // float getItemsMargin()
    float ret = (float)self->getItemsMargin();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_ListView_setPadding(lua_State *L)
{
    lua_settop(L, 5);

    cocos2d::ui::ListView *self = nullptr;
    lua_Number arg1 = 0;   /** l */
    lua_Number arg2 = 0;   /** t */
    lua_Number arg3 = 0;   /** r */
    lua_Number arg4 = 0;   /** b */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_number(L, 2, &arg1);
    olua_check_number(L, 3, &arg2);
    olua_check_number(L, 4, &arg3);
    olua_check_number(L, 5, &arg4);

    // void setPadding(float l, float t, float r, float b)
    self->setPadding((float)arg1, (float)arg2, (float)arg3, (float)arg4);

    return 0;
}

static int _cocos2d_ui_ListView_setLeftPadding(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    lua_Number arg1 = 0;   /** l */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_number(L, 2, &arg1);

    // void setLeftPadding(float l)
    self->setLeftPadding((float)arg1);

    return 0;
}

static int _cocos2d_ui_ListView_setTopPadding(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    lua_Number arg1 = 0;   /** t */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_number(L, 2, &arg1);

    // void setTopPadding(float t)
    self->setTopPadding((float)arg1);

    return 0;
}

static int _cocos2d_ui_ListView_setRightPadding(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    lua_Number arg1 = 0;   /** r */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_number(L, 2, &arg1);

    // void setRightPadding(float r)
    self->setRightPadding((float)arg1);

    return 0;
}

static int _cocos2d_ui_ListView_setBottomPadding(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    lua_Number arg1 = 0;   /** b */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_number(L, 2, &arg1);

    // void setBottomPadding(float b)
    self->setBottomPadding((float)arg1);

    return 0;
}

static int _cocos2d_ui_ListView_getLeftPadding(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // float getLeftPadding()
    float ret = (float)self->getLeftPadding();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_ListView_getTopPadding(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // float getTopPadding()
    float ret = (float)self->getTopPadding();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_ListView_getRightPadding(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // float getRightPadding()
    float ret = (float)self->getRightPadding();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_ListView_getBottomPadding(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // float getBottomPadding()
    float ret = (float)self->getBottomPadding();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_ListView_setScrollDuration(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    lua_Number arg1 = 0;   /** time */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_number(L, 2, &arg1);

    // void  setScrollDuration(float time)
    self->setScrollDuration((float)arg1);

    return 0;
}

static int _cocos2d_ui_ListView_getScrollDuration(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // float getScrollDuration()
    float ret = (float)self->getScrollDuration();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_ListView_getClosestItemToPosition(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::ListView *self = nullptr;
    cocos2d::Vec2 arg1;       /** targetPosition */
    cocos2d::Vec2 arg2;       /** itemAnchorPoint */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);
    auto_luacv_check_cocos2d_Vec2(L, 3, &arg2);

    // Widget* getClosestItemToPosition(const Vec2& targetPosition, const Vec2& itemAnchorPoint)
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)self->getClosestItemToPosition(arg1, arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_ListView_getClosestItemToPositionInCurrentView(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::ListView *self = nullptr;
    cocos2d::Vec2 arg1;       /** positionRatioInView */
    cocos2d::Vec2 arg2;       /** itemAnchorPoint */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);
    auto_luacv_check_cocos2d_Vec2(L, 3, &arg2);

    // Widget* getClosestItemToPositionInCurrentView(const Vec2& positionRatioInView, const Vec2& itemAnchorPoint)
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)self->getClosestItemToPositionInCurrentView(arg1, arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_ListView_getCenterItemInCurrentView(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // Widget* getCenterItemInCurrentView()
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)self->getCenterItemInCurrentView();
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_ListView_getLeftmostItemInCurrentView(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // Widget* getLeftmostItemInCurrentView()
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)self->getLeftmostItemInCurrentView();
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_ListView_getRightmostItemInCurrentView(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // Widget* getRightmostItemInCurrentView()
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)self->getRightmostItemInCurrentView();
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_ListView_getTopmostItemInCurrentView(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // Widget* getTopmostItemInCurrentView()
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)self->getTopmostItemInCurrentView();
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_ListView_getBottommostItemInCurrentView(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // Widget* getBottommostItemInCurrentView()
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)self->getBottommostItemInCurrentView();
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_ListView_jumpToItem(lua_State *L)
{
    lua_settop(L, 4);

    cocos2d::ui::ListView *self = nullptr;
    lua_Integer arg1 = 0;   /** itemIndex */
    cocos2d::Vec2 arg2;       /** positionRatioInView */
    cocos2d::Vec2 arg3;       /** itemAnchorPoint */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_int(L, 2, &arg1);
    auto_luacv_check_cocos2d_Vec2(L, 3, &arg2);
    auto_luacv_check_cocos2d_Vec2(L, 4, &arg3);

    // void jumpToItem(ssize_t itemIndex, const Vec2& positionRatioInView, const Vec2& itemAnchorPoint)
    self->jumpToItem((ssize_t)arg1, arg2, arg3);

    return 0;
}

static int _cocos2d_ui_ListView_scrollToItem1(lua_State *L)
{
    lua_settop(L, 4);

    cocos2d::ui::ListView *self = nullptr;
    lua_Integer arg1 = 0;   /** itemIndex */
    cocos2d::Vec2 arg2;       /** positionRatioInView */
    cocos2d::Vec2 arg3;       /** itemAnchorPoint */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_int(L, 2, &arg1);
    auto_luacv_check_cocos2d_Vec2(L, 3, &arg2);
    auto_luacv_check_cocos2d_Vec2(L, 4, &arg3);

    // void scrollToItem(ssize_t itemIndex, const Vec2& positionRatioInView, const Vec2& itemAnchorPoint)
    self->scrollToItem((ssize_t)arg1, arg2, arg3);

    return 0;
}

static int _cocos2d_ui_ListView_scrollToItem2(lua_State *L)
{
    lua_settop(L, 5);

    cocos2d::ui::ListView *self = nullptr;
    lua_Integer arg1 = 0;   /** itemIndex */
    cocos2d::Vec2 arg2;       /** positionRatioInView */
    cocos2d::Vec2 arg3;       /** itemAnchorPoint */
    lua_Number arg4 = 0;   /** timeInSec */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_int(L, 2, &arg1);
    auto_luacv_check_cocos2d_Vec2(L, 3, &arg2);
    auto_luacv_check_cocos2d_Vec2(L, 4, &arg3);
    olua_check_number(L, 5, &arg4);

    // void scrollToItem(ssize_t itemIndex, const Vec2& positionRatioInView, const Vec2& itemAnchorPoint, float timeInSec)
    self->scrollToItem((ssize_t)arg1, arg2, arg3, (float)arg4);

    return 0;
}

static int _cocos2d_ui_ListView_scrollToItem(lua_State *L)
{
    int num_args = lua_gettop(L) - 1;

    if (num_args == 3) {
        // if (olua_is_int(L, 2) && auto_luacv_is_cocos2d_Vec2(L, 3) && auto_luacv_is_cocos2d_Vec2(L, 4)) {
            return _cocos2d_ui_ListView_scrollToItem1(L);
        // }
    }

    if (num_args == 4) {
        // if (olua_is_int(L, 2) && auto_luacv_is_cocos2d_Vec2(L, 3) && auto_luacv_is_cocos2d_Vec2(L, 4) && olua_is_number(L, 5)) {
            return _cocos2d_ui_ListView_scrollToItem2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::ListView::scrollToItem' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_ListView_getCurSelectedIndex(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::ListView *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    // ssize_t getCurSelectedIndex()
    ssize_t ret = (ssize_t)self->getCurSelectedIndex();
    int num_ret = olua_push_int(L, (lua_Integer)ret);

    return num_ret;
}

static int _cocos2d_ui_ListView_setCurSelectedIndex(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    lua_Integer arg1 = 0;   /** itemIndex */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");
    olua_check_int(L, 2, &arg1);

    // void setCurSelectedIndex(int itemIndex)
    self->setCurSelectedIndex((int)arg1);

    return 0;
}

static int _cocos2d_ui_ListView_addEventListener(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::ListView *self = nullptr;
    std::function<void(cocos2d::Ref *, cocos2d::ui::ListView::EventType)> arg1 = nullptr;   /** callback */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.ListView");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("ListCallback");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::Ref *arg1, cocos2d::ui::ListView::EventType arg2) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);

            olua_push_cppobj<cocos2d::Ref>(L, arg1, "cc.Ref");
            olua_push_uint(L, (lua_Unsigned)arg2);
            olua_callback(L, callback_store_obj, func.c_str(), 2);

            lua_settop(L, top);
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("ListCallback");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // void addEventListener(@nullable const std::function<void(Ref*, EventType)>& callback)
    self->addEventListener(arg1);

    return 0;
}

static int luaopen_cocos2d_ui_ListView(lua_State *L)
{
    oluacls_class(L, "ccui.ListView", "ccui.ScrollView");
    oluacls_setfunc(L, "create", _cocos2d_ui_ListView_create);
    oluacls_setfunc(L, "setItemModel", _cocos2d_ui_ListView_setItemModel);
    oluacls_setfunc(L, "pushBackDefaultItem", _cocos2d_ui_ListView_pushBackDefaultItem);
    oluacls_setfunc(L, "insertDefaultItem", _cocos2d_ui_ListView_insertDefaultItem);
    oluacls_setfunc(L, "pushBackCustomItem", _cocos2d_ui_ListView_pushBackCustomItem);
    oluacls_setfunc(L, "insertCustomItem", _cocos2d_ui_ListView_insertCustomItem);
    oluacls_setfunc(L, "removeLastItem", _cocos2d_ui_ListView_removeLastItem);
    oluacls_setfunc(L, "removeItem", _cocos2d_ui_ListView_removeItem);
    oluacls_setfunc(L, "removeAllItems", _cocos2d_ui_ListView_removeAllItems);
    oluacls_setfunc(L, "getItem", _cocos2d_ui_ListView_getItem);
    oluacls_setfunc(L, "getItems", _cocos2d_ui_ListView_getItems);
    oluacls_setfunc(L, "getIndex", _cocos2d_ui_ListView_getIndex);
    oluacls_setfunc(L, "setGravity", _cocos2d_ui_ListView_setGravity);
    oluacls_setfunc(L, "setMagneticType", _cocos2d_ui_ListView_setMagneticType);
    oluacls_setfunc(L, "getMagneticType", _cocos2d_ui_ListView_getMagneticType);
    oluacls_setfunc(L, "setMagneticAllowedOutOfBoundary", _cocos2d_ui_ListView_setMagneticAllowedOutOfBoundary);
    oluacls_setfunc(L, "getMagneticAllowedOutOfBoundary", _cocos2d_ui_ListView_getMagneticAllowedOutOfBoundary);
    oluacls_setfunc(L, "setItemsMargin", _cocos2d_ui_ListView_setItemsMargin);
    oluacls_setfunc(L, "getItemsMargin", _cocos2d_ui_ListView_getItemsMargin);
    oluacls_setfunc(L, "setPadding", _cocos2d_ui_ListView_setPadding);
    oluacls_setfunc(L, "setLeftPadding", _cocos2d_ui_ListView_setLeftPadding);
    oluacls_setfunc(L, "setTopPadding", _cocos2d_ui_ListView_setTopPadding);
    oluacls_setfunc(L, "setRightPadding", _cocos2d_ui_ListView_setRightPadding);
    oluacls_setfunc(L, "setBottomPadding", _cocos2d_ui_ListView_setBottomPadding);
    oluacls_setfunc(L, "getLeftPadding", _cocos2d_ui_ListView_getLeftPadding);
    oluacls_setfunc(L, "getTopPadding", _cocos2d_ui_ListView_getTopPadding);
    oluacls_setfunc(L, "getRightPadding", _cocos2d_ui_ListView_getRightPadding);
    oluacls_setfunc(L, "getBottomPadding", _cocos2d_ui_ListView_getBottomPadding);
    oluacls_setfunc(L, "setScrollDuration", _cocos2d_ui_ListView_setScrollDuration);
    oluacls_setfunc(L, "getScrollDuration", _cocos2d_ui_ListView_getScrollDuration);
    oluacls_setfunc(L, "getClosestItemToPosition", _cocos2d_ui_ListView_getClosestItemToPosition);
    oluacls_setfunc(L, "getClosestItemToPositionInCurrentView", _cocos2d_ui_ListView_getClosestItemToPositionInCurrentView);
    oluacls_setfunc(L, "getCenterItemInCurrentView", _cocos2d_ui_ListView_getCenterItemInCurrentView);
    oluacls_setfunc(L, "getLeftmostItemInCurrentView", _cocos2d_ui_ListView_getLeftmostItemInCurrentView);
    oluacls_setfunc(L, "getRightmostItemInCurrentView", _cocos2d_ui_ListView_getRightmostItemInCurrentView);
    oluacls_setfunc(L, "getTopmostItemInCurrentView", _cocos2d_ui_ListView_getTopmostItemInCurrentView);
    oluacls_setfunc(L, "getBottommostItemInCurrentView", _cocos2d_ui_ListView_getBottommostItemInCurrentView);
    oluacls_setfunc(L, "jumpToItem", _cocos2d_ui_ListView_jumpToItem);
    oluacls_setfunc(L, "scrollToItem", _cocos2d_ui_ListView_scrollToItem);
    oluacls_setfunc(L, "getCurSelectedIndex", _cocos2d_ui_ListView_getCurSelectedIndex);
    oluacls_setfunc(L, "setCurSelectedIndex", _cocos2d_ui_ListView_setCurSelectedIndex);
    oluacls_setfunc(L, "addEventListener", _cocos2d_ui_ListView_addEventListener);
    oluacls_setfunc(L, "addListEventListener", _cocos2d_ui_ListView_addEventListener);

    olua_registerluatype<cocos2d::ui::ListView>(L, "ccui.ListView");
    oluacls_createclassproxy(L);

    return 1;
}

int luaopen_cocos2d_ui(lua_State *L)
{
    olua_require(L, "ccui.Widget.FocusDirection", luaopen_cocos2d_ui_Widget_FocusDirection);
    olua_require(L, "ccui.Widget.PositionType", luaopen_cocos2d_ui_Widget_PositionType);
    olua_require(L, "ccui.Widget.SizeType", luaopen_cocos2d_ui_Widget_SizeType);
    olua_require(L, "ccui.Widget.TouchEventType", luaopen_cocos2d_ui_Widget_TouchEventType);
    olua_require(L, "ccui.Widget.TextureResType", luaopen_cocos2d_ui_Widget_TextureResType);
    olua_require(L, "ccui.Widget.BrightStyle", luaopen_cocos2d_ui_Widget_BrightStyle);
    olua_require(L, "ccui.Widget", luaopen_cocos2d_ui_Widget);
    olua_require(L, "ccui.Helper", luaopen_cocos2d_ui_Helper);
    olua_require(L, "ccui.Scale9Sprite.State", luaopen_cocos2d_ui_Scale9Sprite_State);
    olua_require(L, "ccui.Scale9Sprite.RenderingType", luaopen_cocos2d_ui_Scale9Sprite_RenderingType);
    olua_require(L, "ccui.Scale9Sprite", luaopen_cocos2d_ui_Scale9Sprite);
    olua_require(L, "ccui.LayoutComponent.HorizontalEdge", luaopen_cocos2d_ui_LayoutComponent_HorizontalEdge);
    olua_require(L, "ccui.LayoutComponent.VerticalEdge", luaopen_cocos2d_ui_LayoutComponent_VerticalEdge);
    olua_require(L, "ccui.LayoutComponent", luaopen_cocos2d_ui_LayoutComponent);
    olua_require(L, "ccui.LayoutParameter.Type", luaopen_cocos2d_ui_LayoutParameter_Type);
    olua_require(L, "ccui.LayoutParameter", luaopen_cocos2d_ui_LayoutParameter);
    olua_require(L, "ccui.LinearLayoutParameter.LinearGravity", luaopen_cocos2d_ui_LinearLayoutParameter_LinearGravity);
    olua_require(L, "ccui.LinearLayoutParameter", luaopen_cocos2d_ui_LinearLayoutParameter);
    olua_require(L, "ccui.RelativeLayoutParameter.RelativeAlign", luaopen_cocos2d_ui_RelativeLayoutParameter_RelativeAlign);
    olua_require(L, "ccui.RelativeLayoutParameter", luaopen_cocos2d_ui_RelativeLayoutParameter);
    olua_require(L, "ccui.Layout.Type", luaopen_cocos2d_ui_Layout_Type);
    olua_require(L, "ccui.Layout.ClippingType", luaopen_cocos2d_ui_Layout_ClippingType);
    olua_require(L, "ccui.Layout.BackGroundColorType", luaopen_cocos2d_ui_Layout_BackGroundColorType);
    olua_require(L, "ccui.Layout", luaopen_cocos2d_ui_Layout);
    olua_require(L, "ccui.HBox", luaopen_cocos2d_ui_HBox);
    olua_require(L, "ccui.VBox", luaopen_cocos2d_ui_VBox);
    olua_require(L, "ccui.RelativeBox", luaopen_cocos2d_ui_RelativeBox);
#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS || CC_TARGET_PLATFORM == CC_PLATFORM_TIZEN)
    olua_require(L, "ccui.WebView", luaopen_cocos2d_experimental_ui_WebView);
#endif
#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS || CC_TARGET_PLATFORM == CC_PLATFORM_TIZEN) && !defined(CC_PLATFORM_OS_TVOS)
    olua_require(L, "ccui.VideoPlayer.EventType", luaopen_cocos2d_experimental_ui_VideoPlayer_EventType);
#endif
#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_IOS || CC_TARGET_PLATFORM == CC_PLATFORM_TIZEN) && !defined(CC_PLATFORM_OS_TVOS)
    olua_require(L, "ccui.VideoPlayer", luaopen_cocos2d_experimental_ui_VideoPlayer);
#endif
    olua_require(L, "ccui.AbstractCheckButton", luaopen_cocos2d_ui_AbstractCheckButton);
    olua_require(L, "ccui.TabHeader.EventType", luaopen_cocos2d_ui_TabHeader_EventType);
    olua_require(L, "ccui.TabHeader", luaopen_cocos2d_ui_TabHeader);
    olua_require(L, "ccui.TabControl.Dock", luaopen_cocos2d_ui_TabControl_Dock);
    olua_require(L, "ccui.TabControl.EventType", luaopen_cocos2d_ui_TabControl_EventType);
    olua_require(L, "ccui.TabControl", luaopen_cocos2d_ui_TabControl);
    olua_require(L, "ccui.ScrollView.Direction", luaopen_cocos2d_ui_ScrollView_Direction);
    olua_require(L, "ccui.ScrollView.EventType", luaopen_cocos2d_ui_ScrollView_EventType);
    olua_require(L, "ccui.ScrollView", luaopen_cocos2d_ui_ScrollView);
    olua_require(L, "ccui.ListView.Gravity", luaopen_cocos2d_ui_ListView_Gravity);
    olua_require(L, "ccui.ListView.EventType", luaopen_cocos2d_ui_ListView_EventType);
    olua_require(L, "ccui.ListView.MagneticType", luaopen_cocos2d_ui_ListView_MagneticType);
    olua_require(L, "ccui.ListView", luaopen_cocos2d_ui_ListView);
    return 0;
}
