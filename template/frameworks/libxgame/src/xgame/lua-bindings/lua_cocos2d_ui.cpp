//
// generated by olua
//
#include "xgame/lua-bindings/lua_cocos2d_ui.h"
#include "xgame/lua-bindings/lua_conv.h"
#include "xgame/lua-bindings/lua_conv_manual.h"
#include "xgame/xlua.h"
#include "xgame/xruntime.h"
#include "olua/olua.hpp"
#include "cocos2d.h"
#include "ui/CocosGUI.h"



static int luaopen_cocos2d_ui_Widget_FocusDirection(lua_State *L)
{
    oluacls_class(L, "ccui.Widget.FocusDirection", nullptr);
    oluacls_const_integer(L, "LEFT", (lua_Integer)cocos2d::ui::Widget::FocusDirection::LEFT);
    oluacls_const_integer(L, "RIGHT", (lua_Integer)cocos2d::ui::Widget::FocusDirection::RIGHT);
    oluacls_const_integer(L, "UP", (lua_Integer)cocos2d::ui::Widget::FocusDirection::UP);
    oluacls_const_integer(L, "DOWN", (lua_Integer)cocos2d::ui::Widget::FocusDirection::DOWN);

    olua_registerluatype<cocos2d::ui::Widget::FocusDirection>(L, "ccui.Widget.FocusDirection");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Widget_PositionType(lua_State *L)
{
    oluacls_class(L, "ccui.Widget.PositionType", nullptr);
    oluacls_const_integer(L, "ABSOLUTE", (lua_Integer)cocos2d::ui::Widget::PositionType::ABSOLUTE);
    oluacls_const_integer(L, "PERCENT", (lua_Integer)cocos2d::ui::Widget::PositionType::PERCENT);

    olua_registerluatype<cocos2d::ui::Widget::PositionType>(L, "ccui.Widget.PositionType");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Widget_SizeType(lua_State *L)
{
    oluacls_class(L, "ccui.Widget.SizeType", nullptr);
    oluacls_const_integer(L, "ABSOLUTE", (lua_Integer)cocos2d::ui::Widget::SizeType::ABSOLUTE);
    oluacls_const_integer(L, "PERCENT", (lua_Integer)cocos2d::ui::Widget::SizeType::PERCENT);

    olua_registerluatype<cocos2d::ui::Widget::SizeType>(L, "ccui.Widget.SizeType");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Widget_TouchEventType(lua_State *L)
{
    oluacls_class(L, "ccui.Widget.TouchEventType", nullptr);
    oluacls_const_integer(L, "BEGAN", (lua_Integer)cocos2d::ui::Widget::TouchEventType::BEGAN);
    oluacls_const_integer(L, "MOVED", (lua_Integer)cocos2d::ui::Widget::TouchEventType::MOVED);
    oluacls_const_integer(L, "ENDED", (lua_Integer)cocos2d::ui::Widget::TouchEventType::ENDED);
    oluacls_const_integer(L, "CANCELED", (lua_Integer)cocos2d::ui::Widget::TouchEventType::CANCELED);

    olua_registerluatype<cocos2d::ui::Widget::TouchEventType>(L, "ccui.Widget.TouchEventType");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Widget_TextureResType(lua_State *L)
{
    oluacls_class(L, "ccui.Widget.TextureResType", nullptr);
    oluacls_const_integer(L, "LOCAL", (lua_Integer)cocos2d::ui::Widget::TextureResType::LOCAL);
    oluacls_const_integer(L, "PLIST", (lua_Integer)cocos2d::ui::Widget::TextureResType::PLIST);

    olua_registerluatype<cocos2d::ui::Widget::TextureResType>(L, "ccui.Widget.TextureResType");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Widget_BrightStyle(lua_State *L)
{
    oluacls_class(L, "ccui.Widget.BrightStyle", nullptr);
    oluacls_const_integer(L, "NONE", (lua_Integer)cocos2d::ui::Widget::BrightStyle::NONE);
    oluacls_const_integer(L, "NORMAL", (lua_Integer)cocos2d::ui::Widget::BrightStyle::NORMAL);
    oluacls_const_integer(L, "HIGHLIGHT", (lua_Integer)cocos2d::ui::Widget::BrightStyle::HIGHLIGHT);

    olua_registerluatype<cocos2d::ui::Widget::BrightStyle>(L, "ccui.Widget.BrightStyle");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_Widget_create(lua_State *L)
{
    lua_settop(L, 0);

    // static Widget* create()
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)cocos2d::ui::Widget::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_Widget_setEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** enabled */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setEnabled(bool enabled)
    self->setEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isEnabled()
    bool ret = (bool)self->isEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setBright(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** bright */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setBright(bool bright)
    self->setBright(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isBright(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isBright()
    bool ret = (bool)self->isBright();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setTouchEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** enabled */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setTouchEnabled(bool enabled)
    self->setTouchEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_setBrightStyle(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    lua_Unsigned arg1 = 0;   /** style */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_uint(L, 2, &arg1);

    // void setBrightStyle(BrightStyle style)
    self->setBrightStyle((cocos2d::ui::Widget::BrightStyle)arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isTouchEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isTouchEnabled()
    bool ret = (bool)self->isTouchEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_isHighlighted(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isHighlighted()
    bool ret = (bool)self->isHighlighted();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setHighlighted(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** highlight */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setHighlighted(bool highlight)
    self->setHighlighted(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getLeftBoundary(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // float getLeftBoundary()
    float ret = (float)self->getLeftBoundary();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getBottomBoundary(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // float getBottomBoundary()
    float ret = (float)self->getBottomBoundary();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getRightBoundary(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // float getRightBoundary()
    float ret = (float)self->getRightBoundary();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getTopBoundary(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // float getTopBoundary()
    float ret = (float)self->getTopBoundary();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setPositionPercent(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Vec2 arg1;       /** percent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    auto_luacv_pack_cocos2d_Vec2(L, 2, &arg1);

    // void setPositionPercent(@pack const Vec2 &percent)
    self->setPositionPercent(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getPositionPercent(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // @unpack const Vec2& getPositionPercent()
    const cocos2d::Vec2 &ret = (const cocos2d::Vec2 &)self->getPositionPercent();
    int num_ret = auto_luacv_unpack_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setPositionType(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    lua_Unsigned arg1 = 0;   /** type */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_uint(L, 2, &arg1);

    // void setPositionType(PositionType type)
    self->setPositionType((cocos2d::ui::Widget::PositionType)arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getPositionType(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // PositionType getPositionType()
    cocos2d::ui::Widget::PositionType ret = (cocos2d::ui::Widget::PositionType)self->getPositionType();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setFlippedX(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** flippedX */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setFlippedX(bool flippedX)
    self->setFlippedX(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isFlippedX(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isFlippedX()
    bool ret = (bool)self->isFlippedX();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setFlippedY(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** flippedY */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setFlippedY(bool flippedY)
    self->setFlippedY(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isFlippedY(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isFlippedY()
    bool ret = (bool)self->isFlippedY();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_isClippingParentContainsPoint(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Vec2 arg1;       /** pt */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    auto_luacv_pack_cocos2d_Vec2(L, 2, &arg1);

    // bool isClippingParentContainsPoint(@pack const Vec2& pt)
    bool ret = (bool)self->isClippingParentContainsPoint(arg1);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getTouchBeganPosition(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // @unpack const Vec2& getTouchBeganPosition()
    const cocos2d::Vec2 &ret = (const cocos2d::Vec2 &)self->getTouchBeganPosition();
    int num_ret = auto_luacv_unpack_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getTouchMovePosition(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // @unpack const Vec2& getTouchMovePosition()
    const cocos2d::Vec2 &ret = (const cocos2d::Vec2 &)self->getTouchMovePosition();
    int num_ret = auto_luacv_unpack_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getTouchEndPosition(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // @unpack const Vec2& getTouchEndPosition()
    const cocos2d::Vec2 &ret = (const cocos2d::Vec2 &)self->getTouchEndPosition();
    int num_ret = auto_luacv_unpack_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setSizePercent(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Vec2 arg1;       /** percent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    auto_luacv_pack_cocos2d_Vec2(L, 2, &arg1);

    // void setSizePercent(@pack const Vec2 &percent)
    self->setSizePercent(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_setSizeType(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    lua_Unsigned arg1 = 0;   /** type */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_uint(L, 2, &arg1);

    // void setSizeType(SizeType type)
    self->setSizeType((cocos2d::ui::Widget::SizeType)arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getSizeType(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // SizeType getSizeType()
    cocos2d::ui::Widget::SizeType ret = (cocos2d::ui::Widget::SizeType)self->getSizeType();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getCustomSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // @unpack const Size& getCustomSize()
    const cocos2d::Size &ret = (const cocos2d::Size &)self->getCustomSize();
    int num_ret = auto_luacv_unpack_cocos2d_Size(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getLayoutSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // @unpack const Size& getLayoutSize()
    const cocos2d::Size &ret = (const cocos2d::Size &)self->getLayoutSize();
    int num_ret = auto_luacv_unpack_cocos2d_Size(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getSizePercent(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // @unpack const Vec2& getSizePercent()
    const cocos2d::Vec2 &ret = (const cocos2d::Vec2 &)self->getSizePercent();
    int num_ret = auto_luacv_unpack_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_hitTest(lua_State *L)
{
    lua_settop(L, 4);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Vec2 arg1;       /** pt */
    cocos2d::Camera *arg2 = nullptr;   /** camera */
    cocos2d::Vec3 *arg3 = nullptr;   /** p */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    auto_luacv_check_cocos2d_Vec2(L, 2, &arg1);
    olua_check_cppobj(L, 3, (void **)&arg2, "cc.Camera");
    olua_opt_cppobj(L, 4, (void **)&arg3, "cc.Vec3", nullptr);

    // bool hitTest(const Vec2 &pt, const Camera* camera, @nullable Vec3 *p)
    bool ret = (bool)self->hitTest(arg1, arg2, arg3);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_onTouchBegan(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Touch *arg1 = nullptr;   /** touch */
    cocos2d::Event *arg2 = nullptr;   /** unusedEvent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Touch");
    olua_check_cppobj(L, 3, (void **)&arg2, "cc.Event");

    // bool onTouchBegan(Touch *touch, Event *unusedEvent)
    bool ret = (bool)self->onTouchBegan(arg1, arg2);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_onTouchMoved(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Touch *arg1 = nullptr;   /** touch */
    cocos2d::Event *arg2 = nullptr;   /** unusedEvent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Touch");
    olua_check_cppobj(L, 3, (void **)&arg2, "cc.Event");

    // void onTouchMoved(Touch *touch, Event *unusedEvent)
    self->onTouchMoved(arg1, arg2);

    return 0;
}

static int _cocos2d_ui_Widget_onTouchEnded(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Touch *arg1 = nullptr;   /** touch */
    cocos2d::Event *arg2 = nullptr;   /** unusedEvent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Touch");
    olua_check_cppobj(L, 3, (void **)&arg2, "cc.Event");

    // void onTouchEnded(Touch *touch, Event *unusedEvent)
    self->onTouchEnded(arg1, arg2);

    return 0;
}

static int _cocos2d_ui_Widget_onTouchCancelled(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Touch *arg1 = nullptr;   /** touch */
    cocos2d::Event *arg2 = nullptr;   /** unusedEvent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Touch");
    olua_check_cppobj(L, 3, (void **)&arg2, "cc.Event");

    // void onTouchCancelled(Touch *touch, Event *unusedEvent)
    self->onTouchCancelled(arg1, arg2);

    return 0;
}

static int _cocos2d_ui_Widget_setLayoutParameter(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::ui::LayoutParameter *arg1 = nullptr;   /** parameter */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_cppobj(L, 2, (void **)&arg1, "ccui.LayoutParameter");

    // void setLayoutParameter(LayoutParameter* parameter)
    self->setLayoutParameter(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getLayoutParameter(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // LayoutParameter* getLayoutParameter()
    cocos2d::ui::LayoutParameter *ret = (cocos2d::ui::LayoutParameter *)self->getLayoutParameter();
    int num_ret = olua_push_cppobj<cocos2d::ui::LayoutParameter>(L, ret, "ccui.LayoutParameter");

    return num_ret;
}

static int _cocos2d_ui_Widget_ignoreContentAdaptWithSize(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** ignore */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void ignoreContentAdaptWithSize(bool ignore)
    self->ignoreContentAdaptWithSize(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isIgnoreContentAdaptWithSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isIgnoreContentAdaptWithSize()
    bool ret = (bool)self->isIgnoreContentAdaptWithSize();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getWorldPosition(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // @unpack Vec2 getWorldPosition()
    cocos2d::Vec2 ret = (cocos2d::Vec2)self->getWorldPosition();
    int num_ret = auto_luacv_unpack_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_getVirtualRenderer(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // Node* getVirtualRenderer()
    cocos2d::Node *ret = (cocos2d::Node *)self->getVirtualRenderer();
    int num_ret = olua_push_cppobj<cocos2d::Node>(L, ret, "cc.Node");

    return num_ret;
}

static int _cocos2d_ui_Widget_getVirtualRendererSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // @unpack Size getVirtualRendererSize()
    cocos2d::Size ret = (cocos2d::Size)self->getVirtualRendererSize();
    int num_ret = auto_luacv_unpack_cocos2d_Size(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_clone(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // Widget* clone()
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)self->clone();
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_Widget_updateSizeAndPosition1(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // void updateSizeAndPosition()
    self->updateSizeAndPosition();

    return 0;
}

static int _cocos2d_ui_Widget_updateSizeAndPosition2(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Widget *self = nullptr;
    cocos2d::Size arg1;       /** parentSize */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    auto_luacv_pack_cocos2d_Size(L, 2, &arg1);

    // void updateSizeAndPosition(@pack const Size& parentSize)
    self->updateSizeAndPosition(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_updateSizeAndPosition(lua_State *L)
{
    int num_args = lua_gettop(L) - 1;

    if (num_args == 0) {
        return _cocos2d_ui_Widget_updateSizeAndPosition1(L);
    }

    if (num_args == 2) {
        // if (auto_luacv_ispack_cocos2d_Size(L, 2)) {
            return _cocos2d_ui_Widget_updateSizeAndPosition2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Widget::updateSizeAndPosition' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Widget_setActionTag(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    lua_Integer arg1 = 0;   /** tag */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_int(L, 2, &arg1);

    // void setActionTag(int tag)
    self->setActionTag((int)arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getActionTag(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // int getActionTag()
    int ret = (int)self->getActionTag();
    int num_ret = olua_push_int(L, (lua_Integer)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setPropagateTouchEvents(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** isPropagate */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setPropagateTouchEvents(bool isPropagate)
    self->setPropagateTouchEvents(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isPropagateTouchEvents(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isPropagateTouchEvents()
    bool ret = (bool)self->isPropagateTouchEvents();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setSwallowTouches(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** swallow */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setSwallowTouches(bool swallow)
    self->setSwallowTouches(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isSwallowTouches(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isSwallowTouches()
    bool ret = (bool)self->isSwallowTouches();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_isFocused(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isFocused()
    bool ret = (bool)self->isFocused();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setFocused(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** focus */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setFocused(bool focus)
    self->setFocused(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isFocusEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isFocusEnabled()
    bool ret = (bool)self->isFocusEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setFocusEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** enable */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setFocusEnabled(bool enable)
    self->setFocusEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_findNextFocusedWidget(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Widget *self = nullptr;
    lua_Unsigned arg1 = 0;   /** direction */
    cocos2d::ui::Widget *arg2 = nullptr;   /** current */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_uint(L, 2, &arg1);
    olua_check_cppobj(L, 3, (void **)&arg2, "ccui.Widget");

    // Widget* findNextFocusedWidget(FocusDirection direction, Widget* current)
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)self->findNextFocusedWidget((cocos2d::ui::Widget::FocusDirection)arg1, arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_Widget_requestFocus(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // void requestFocus()
    self->requestFocus();

    return 0;
}

static int _cocos2d_ui_Widget_getCurrentFocusedWidget(lua_State *L)
{
    lua_settop(L, 0);

    // static Widget* getCurrentFocusedWidget()
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)cocos2d::ui::Widget::getCurrentFocusedWidget();
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_Widget_enableDpadNavigation(lua_State *L)
{
    lua_settop(L, 1);

    bool arg1 = false;   /** enable */

    olua_check_bool(L, 1, &arg1);

    // static void enableDpadNavigation(bool enable)
    cocos2d::ui::Widget::enableDpadNavigation(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_setUnifySizeEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** enable */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setUnifySizeEnabled(bool enable)
    self->setUnifySizeEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isUnifySizeEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isUnifySizeEnabled()
    bool ret = (bool)self->isUnifySizeEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setCallbackName(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    std::string arg1;       /** callbackName */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_std_string(L, 2, &arg1);

    // void setCallbackName(const std::string& callbackName)
    self->setCallbackName(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getCallbackName(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // const std::string& getCallbackName()
    const std::string &ret = (const std::string &)self->getCallbackName();
    int num_ret = olua_push_std_string(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setCallbackType(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    std::string arg1;       /** callbackType */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_std_string(L, 2, &arg1);

    // void setCallbackType(const std::string& callbackType)
    self->setCallbackType(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_getCallbackType(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // const std::string& getCallbackType()
    const std::string &ret = (const std::string &)self->getCallbackType();
    int num_ret = olua_push_std_string(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_setLayoutComponentEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    bool arg1 = false;   /** enable */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");
    olua_check_bool(L, 2, &arg1);

    // void setLayoutComponentEnabled(bool enable)
    self->setLayoutComponentEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_isLayoutComponentEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    // bool isLayoutComponentEnabled()
    bool ret = (bool)self->isLayoutComponentEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_addTouchEventListener(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    std::function<void(cocos2d::Ref *, cocos2d::ui::Widget::TouchEventType)> arg1 = nullptr;   /** callback */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("touchEventListener");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::Ref *arg1, cocos2d::ui::Widget::TouchEventType arg2) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);

            olua_push_cppobj<cocos2d::Ref>(L, arg1, "cc.Ref");
            olua_push_uint(L, (lua_Unsigned)arg2);
            olua_callback(L, callback_store_obj, func.c_str(), 2);

            lua_settop(L, top);
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("touchEventListener");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // void addTouchEventListener(@nullable const std::function<void(Ref*,Widget::TouchEventType)>& callback)
    self->addTouchEventListener(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_addClickEventListener(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    std::function<void(cocos2d::Ref *)> arg1 = nullptr;   /** callback */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("clickEventListener");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::Ref *arg1) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);

            olua_push_cppobj<cocos2d::Ref>(L, arg1, "cc.Ref");
            olua_callback(L, callback_store_obj, func.c_str(), 1);

            lua_settop(L, top);
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("clickEventListener");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // void addClickEventListener(@nullable std::function<void(Ref*)>& callback)
    self->addClickEventListener(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_addCCSEventListener(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    std::function<void(cocos2d::Ref *, int)> arg1 = nullptr;   /** callback */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("ccsEventListener");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::Ref *arg1, int arg2) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);

            olua_push_cppobj<cocos2d::Ref>(L, arg1, "cc.Ref");
            olua_push_int(L, (lua_Integer)arg2);
            olua_callback(L, callback_store_obj, func.c_str(), 2);

            lua_settop(L, top);
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("ccsEventListener");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // void addCCSEventListener(@nullable const std::function<void(Ref*, int)>& callback)
    self->addCCSEventListener(arg1);

    return 0;
}

static int _cocos2d_ui_Widget_get_onFocusChanged(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    void *callback_store_obj = (void *)self;
    std::string tag = olua_makecallbacktag("onFocusChanged");
    olua_getcallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);

    // <function var>
    std::function<void(cocos2d::ui::Widget *, cocos2d::ui::Widget *)> ret = (std::function<void(cocos2d::ui::Widget *, cocos2d::ui::Widget *)>)self->onFocusChanged;
    int num_ret = olua_push_std_function(L, (std::function<void(cocos2d::ui::Widget *, cocos2d::ui::Widget *)>)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_set_onFocusChanged(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    std::function<void(cocos2d::ui::Widget *, cocos2d::ui::Widget *)> arg1 = nullptr;   /** onFocusChanged */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("onFocusChanged");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::ui::Widget *arg1, cocos2d::ui::Widget *arg2) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);

            olua_push_cppobj<cocos2d::ui::Widget>(L, arg1, "ccui.Widget");
            olua_push_cppobj<cocos2d::ui::Widget>(L, arg2, "ccui.Widget");
            olua_callback(L, callback_store_obj, func.c_str(), 2);

            lua_settop(L, top);
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("onFocusChanged");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // <function var>
    self->onFocusChanged = arg1;

    return 0;
}

static int _cocos2d_ui_Widget_get_onNextFocusedWidget(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Widget *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    void *callback_store_obj = (void *)self;
    std::string tag = olua_makecallbacktag("onNextFocusedWidget");
    olua_getcallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);

    // <function var>
    std::function<cocos2d::ui::Widget *(cocos2d::ui::Widget::FocusDirection)> ret = (std::function<cocos2d::ui::Widget *(cocos2d::ui::Widget::FocusDirection)>)self->onNextFocusedWidget;
    int num_ret = olua_push_std_function(L, (std::function<cocos2d::ui::Widget *(cocos2d::ui::Widget::FocusDirection)>)ret);

    return num_ret;
}

static int _cocos2d_ui_Widget_set_onNextFocusedWidget(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *self = nullptr;
    std::function<cocos2d::ui::Widget *(cocos2d::ui::Widget::FocusDirection)> arg1 = nullptr;   /** onNextFocusedWidget */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Widget");

    if (olua_is_std_function(L, 2)) {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("onNextFocusedWidget");
        std::string func = olua_setcallback(L, callback_store_obj, tag.c_str(), 2, OLUA_CALLBACK_TAG_REPLACE);
        arg1 = [callback_store_obj, func, tag](cocos2d::ui::Widget::FocusDirection arg1) {
            lua_State *L = olua_mainthread();
            int top = lua_gettop(L);
            cocos2d::ui::Widget * ret = nullptr;
            olua_push_uint(L, (lua_Unsigned)arg1);
            olua_callback(L, callback_store_obj, func.c_str(), 1);
            olua_opt_cppobj(L, -1, (void **)&ret, "ccui.Widget", nullptr);

            lua_settop(L, top);
            return ret;
        };
    } else {
        void *callback_store_obj = (void *)self;
        std::string tag = olua_makecallbacktag("onNextFocusedWidget");
        olua_removecallback(L, callback_store_obj, tag.c_str(), OLUA_CALLBACK_TAG_ENDWITH);
        arg1 = nullptr;
    }

    // <function var>
    self->onNextFocusedWidget = arg1;

    return 0;
}

static int luaopen_cocos2d_ui_Widget(lua_State *L)
{
    oluacls_class(L, "ccui.Widget", "cc.ProtectedNode");
    oluacls_setfunc(L, "create", _cocos2d_ui_Widget_create);
    oluacls_setfunc(L, "setEnabled", _cocos2d_ui_Widget_setEnabled);
    oluacls_setfunc(L, "isEnabled", _cocos2d_ui_Widget_isEnabled);
    oluacls_setfunc(L, "setBright", _cocos2d_ui_Widget_setBright);
    oluacls_setfunc(L, "isBright", _cocos2d_ui_Widget_isBright);
    oluacls_setfunc(L, "setTouchEnabled", _cocos2d_ui_Widget_setTouchEnabled);
    oluacls_setfunc(L, "setBrightStyle", _cocos2d_ui_Widget_setBrightStyle);
    oluacls_setfunc(L, "isTouchEnabled", _cocos2d_ui_Widget_isTouchEnabled);
    oluacls_setfunc(L, "isHighlighted", _cocos2d_ui_Widget_isHighlighted);
    oluacls_setfunc(L, "setHighlighted", _cocos2d_ui_Widget_setHighlighted);
    oluacls_setfunc(L, "getLeftBoundary", _cocos2d_ui_Widget_getLeftBoundary);
    oluacls_setfunc(L, "getBottomBoundary", _cocos2d_ui_Widget_getBottomBoundary);
    oluacls_setfunc(L, "getRightBoundary", _cocos2d_ui_Widget_getRightBoundary);
    oluacls_setfunc(L, "getTopBoundary", _cocos2d_ui_Widget_getTopBoundary);
    oluacls_setfunc(L, "setPositionPercent", _cocos2d_ui_Widget_setPositionPercent);
    oluacls_setfunc(L, "getPositionPercent", _cocos2d_ui_Widget_getPositionPercent);
    oluacls_setfunc(L, "setPositionType", _cocos2d_ui_Widget_setPositionType);
    oluacls_setfunc(L, "getPositionType", _cocos2d_ui_Widget_getPositionType);
    oluacls_setfunc(L, "setFlippedX", _cocos2d_ui_Widget_setFlippedX);
    oluacls_setfunc(L, "isFlippedX", _cocos2d_ui_Widget_isFlippedX);
    oluacls_setfunc(L, "setFlippedY", _cocos2d_ui_Widget_setFlippedY);
    oluacls_setfunc(L, "isFlippedY", _cocos2d_ui_Widget_isFlippedY);
    oluacls_setfunc(L, "isClippingParentContainsPoint", _cocos2d_ui_Widget_isClippingParentContainsPoint);
    oluacls_setfunc(L, "getTouchBeganPosition", _cocos2d_ui_Widget_getTouchBeganPosition);
    oluacls_setfunc(L, "getTouchMovePosition", _cocos2d_ui_Widget_getTouchMovePosition);
    oluacls_setfunc(L, "getTouchEndPosition", _cocos2d_ui_Widget_getTouchEndPosition);
    oluacls_setfunc(L, "setSizePercent", _cocos2d_ui_Widget_setSizePercent);
    oluacls_setfunc(L, "setSizeType", _cocos2d_ui_Widget_setSizeType);
    oluacls_setfunc(L, "getSizeType", _cocos2d_ui_Widget_getSizeType);
    oluacls_setfunc(L, "getCustomSize", _cocos2d_ui_Widget_getCustomSize);
    oluacls_setfunc(L, "getLayoutSize", _cocos2d_ui_Widget_getLayoutSize);
    oluacls_setfunc(L, "getSizePercent", _cocos2d_ui_Widget_getSizePercent);
    oluacls_setfunc(L, "hitTest", _cocos2d_ui_Widget_hitTest);
    oluacls_setfunc(L, "onTouchBegan", _cocos2d_ui_Widget_onTouchBegan);
    oluacls_setfunc(L, "onTouchMoved", _cocos2d_ui_Widget_onTouchMoved);
    oluacls_setfunc(L, "onTouchEnded", _cocos2d_ui_Widget_onTouchEnded);
    oluacls_setfunc(L, "onTouchCancelled", _cocos2d_ui_Widget_onTouchCancelled);
    oluacls_setfunc(L, "setLayoutParameter", _cocos2d_ui_Widget_setLayoutParameter);
    oluacls_setfunc(L, "getLayoutParameter", _cocos2d_ui_Widget_getLayoutParameter);
    oluacls_setfunc(L, "ignoreContentAdaptWithSize", _cocos2d_ui_Widget_ignoreContentAdaptWithSize);
    oluacls_setfunc(L, "isIgnoreContentAdaptWithSize", _cocos2d_ui_Widget_isIgnoreContentAdaptWithSize);
    oluacls_setfunc(L, "getWorldPosition", _cocos2d_ui_Widget_getWorldPosition);
    oluacls_setfunc(L, "getVirtualRenderer", _cocos2d_ui_Widget_getVirtualRenderer);
    oluacls_setfunc(L, "getVirtualRendererSize", _cocos2d_ui_Widget_getVirtualRendererSize);
    oluacls_setfunc(L, "clone", _cocos2d_ui_Widget_clone);
    oluacls_setfunc(L, "updateSizeAndPosition", _cocos2d_ui_Widget_updateSizeAndPosition);
    oluacls_setfunc(L, "setActionTag", _cocos2d_ui_Widget_setActionTag);
    oluacls_setfunc(L, "getActionTag", _cocos2d_ui_Widget_getActionTag);
    oluacls_setfunc(L, "setPropagateTouchEvents", _cocos2d_ui_Widget_setPropagateTouchEvents);
    oluacls_setfunc(L, "isPropagateTouchEvents", _cocos2d_ui_Widget_isPropagateTouchEvents);
    oluacls_setfunc(L, "setSwallowTouches", _cocos2d_ui_Widget_setSwallowTouches);
    oluacls_setfunc(L, "isSwallowTouches", _cocos2d_ui_Widget_isSwallowTouches);
    oluacls_setfunc(L, "isFocused", _cocos2d_ui_Widget_isFocused);
    oluacls_setfunc(L, "setFocused", _cocos2d_ui_Widget_setFocused);
    oluacls_setfunc(L, "isFocusEnabled", _cocos2d_ui_Widget_isFocusEnabled);
    oluacls_setfunc(L, "setFocusEnabled", _cocos2d_ui_Widget_setFocusEnabled);
    oluacls_setfunc(L, "findNextFocusedWidget", _cocos2d_ui_Widget_findNextFocusedWidget);
    oluacls_setfunc(L, "requestFocus", _cocos2d_ui_Widget_requestFocus);
    oluacls_setfunc(L, "getCurrentFocusedWidget", _cocos2d_ui_Widget_getCurrentFocusedWidget);
    oluacls_setfunc(L, "enableDpadNavigation", _cocos2d_ui_Widget_enableDpadNavigation);
    oluacls_setfunc(L, "setUnifySizeEnabled", _cocos2d_ui_Widget_setUnifySizeEnabled);
    oluacls_setfunc(L, "isUnifySizeEnabled", _cocos2d_ui_Widget_isUnifySizeEnabled);
    oluacls_setfunc(L, "setCallbackName", _cocos2d_ui_Widget_setCallbackName);
    oluacls_setfunc(L, "getCallbackName", _cocos2d_ui_Widget_getCallbackName);
    oluacls_setfunc(L, "setCallbackType", _cocos2d_ui_Widget_setCallbackType);
    oluacls_setfunc(L, "getCallbackType", _cocos2d_ui_Widget_getCallbackType);
    oluacls_setfunc(L, "setLayoutComponentEnabled", _cocos2d_ui_Widget_setLayoutComponentEnabled);
    oluacls_setfunc(L, "isLayoutComponentEnabled", _cocos2d_ui_Widget_isLayoutComponentEnabled);
    oluacls_setfunc(L, "addTouchEventListener", _cocos2d_ui_Widget_addTouchEventListener);
    oluacls_setfunc(L, "addClickEventListener", _cocos2d_ui_Widget_addClickEventListener);
    oluacls_setfunc(L, "addCCSEventListener", _cocos2d_ui_Widget_addCCSEventListener);
    oluacls_property(L, "enabled", _cocos2d_ui_Widget_isEnabled, _cocos2d_ui_Widget_setEnabled);
    oluacls_property(L, "bright", _cocos2d_ui_Widget_isBright, _cocos2d_ui_Widget_setBright);
    oluacls_property(L, "touchEnabled", _cocos2d_ui_Widget_isTouchEnabled, _cocos2d_ui_Widget_setTouchEnabled);
    oluacls_property(L, "highlighted", _cocos2d_ui_Widget_isHighlighted, _cocos2d_ui_Widget_setHighlighted);
    oluacls_property(L, "leftBoundary", _cocos2d_ui_Widget_getLeftBoundary, nullptr);
    oluacls_property(L, "bottomBoundary", _cocos2d_ui_Widget_getBottomBoundary, nullptr);
    oluacls_property(L, "rightBoundary", _cocos2d_ui_Widget_getRightBoundary, nullptr);
    oluacls_property(L, "topBoundary", _cocos2d_ui_Widget_getTopBoundary, nullptr);
    oluacls_property(L, "positionType", _cocos2d_ui_Widget_getPositionType, _cocos2d_ui_Widget_setPositionType);
    oluacls_property(L, "flippedX", _cocos2d_ui_Widget_isFlippedX, _cocos2d_ui_Widget_setFlippedX);
    oluacls_property(L, "flippedY", _cocos2d_ui_Widget_isFlippedY, _cocos2d_ui_Widget_setFlippedY);
    oluacls_property(L, "sizeType", _cocos2d_ui_Widget_getSizeType, _cocos2d_ui_Widget_setSizeType);
    oluacls_property(L, "layoutParameter", _cocos2d_ui_Widget_getLayoutParameter, _cocos2d_ui_Widget_setLayoutParameter);
    oluacls_property(L, "ignoreContentAdaptWithSize", _cocos2d_ui_Widget_isIgnoreContentAdaptWithSize, nullptr);
    oluacls_property(L, "virtualRenderer", _cocos2d_ui_Widget_getVirtualRenderer, nullptr);
    oluacls_property(L, "actionTag", _cocos2d_ui_Widget_getActionTag, _cocos2d_ui_Widget_setActionTag);
    oluacls_property(L, "propagateTouchEvents", _cocos2d_ui_Widget_isPropagateTouchEvents, _cocos2d_ui_Widget_setPropagateTouchEvents);
    oluacls_property(L, "swallowTouches", _cocos2d_ui_Widget_isSwallowTouches, _cocos2d_ui_Widget_setSwallowTouches);
    oluacls_property(L, "focused", _cocos2d_ui_Widget_isFocused, _cocos2d_ui_Widget_setFocused);
    oluacls_property(L, "focusEnabled", _cocos2d_ui_Widget_isFocusEnabled, _cocos2d_ui_Widget_setFocusEnabled);
    oluacls_property(L, "currentFocusedWidget", _cocos2d_ui_Widget_getCurrentFocusedWidget, nullptr);
    oluacls_property(L, "unifySizeEnabled", _cocos2d_ui_Widget_isUnifySizeEnabled, _cocos2d_ui_Widget_setUnifySizeEnabled);
    oluacls_property(L, "callbackName", _cocos2d_ui_Widget_getCallbackName, _cocos2d_ui_Widget_setCallbackName);
    oluacls_property(L, "callbackType", _cocos2d_ui_Widget_getCallbackType, _cocos2d_ui_Widget_setCallbackType);
    oluacls_property(L, "layoutComponentEnabled", _cocos2d_ui_Widget_isLayoutComponentEnabled, _cocos2d_ui_Widget_setLayoutComponentEnabled);
    oluacls_property(L, "onFocusChanged", _cocos2d_ui_Widget_get_onFocusChanged, _cocos2d_ui_Widget_set_onFocusChanged);
    oluacls_property(L, "onNextFocusedWidget", _cocos2d_ui_Widget_get_onNextFocusedWidget, _cocos2d_ui_Widget_set_onNextFocusedWidget);

    olua_registerluatype<cocos2d::ui::Widget>(L, "ccui.Widget");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_Helper_seekWidgetByTag(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *arg1 = nullptr;   /** root */
    lua_Integer arg2 = 0;   /** tag */

    olua_check_cppobj(L, 1, (void **)&arg1, "ccui.Widget");
    olua_check_int(L, 2, &arg2);

    // static Widget* seekWidgetByTag(Widget* root, int tag)
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)cocos2d::ui::Helper::seekWidgetByTag(arg1, (int)arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_Helper_seekWidgetByName(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *arg1 = nullptr;   /** root */
    std::string arg2;       /** name */

    olua_check_cppobj(L, 1, (void **)&arg1, "ccui.Widget");
    olua_check_std_string(L, 2, &arg2);

    // static Widget* seekWidgetByName(Widget* root, const std::string& name)
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)cocos2d::ui::Helper::seekWidgetByName(arg1, arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_Helper_seekActionWidgetByActionTag(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Widget *arg1 = nullptr;   /** root */
    lua_Integer arg2 = 0;   /** tag */

    olua_check_cppobj(L, 1, (void **)&arg1, "ccui.Widget");
    olua_check_int(L, 2, &arg2);

    // static Widget* seekActionWidgetByActionTag(Widget* root, int tag)
    cocos2d::ui::Widget *ret = (cocos2d::ui::Widget *)cocos2d::ui::Helper::seekActionWidgetByActionTag(arg1, (int)arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Widget>(L, ret, "ccui.Widget");

    return num_ret;
}

static int _cocos2d_ui_Helper_doLayout(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::Node *arg1 = nullptr;   /** rootNode */

    olua_check_cppobj(L, 1, (void **)&arg1, "cc.Node");

    // static void doLayout(Node *rootNode)
    cocos2d::ui::Helper::doLayout(arg1);

    return 0;
}

static int _cocos2d_ui_Helper_changeLayoutSystemActiveState(lua_State *L)
{
    lua_settop(L, 1);

    bool arg1 = false;   /** active */

    olua_check_bool(L, 1, &arg1);

    // static void changeLayoutSystemActiveState(bool active)
    cocos2d::ui::Helper::changeLayoutSystemActiveState(arg1);

    return 0;
}

static int _cocos2d_ui_Helper_restrictCapInsetRect(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::Rect arg1;       /** capInsets */
    cocos2d::Size arg2;       /** textureSize */

    manual_luacv_check_cocos2d_Rect(L, 1, &arg1);
    auto_luacv_check_cocos2d_Size(L, 2, &arg2);

    // static Rect restrictCapInsetRect(const Rect& capInsets, const Size& textureSize)
    cocos2d::Rect ret = (cocos2d::Rect)cocos2d::ui::Helper::restrictCapInsetRect(arg1, arg2);
    int num_ret = manual_luacv_push_cocos2d_Rect(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Helper_convertBoundingBoxToScreen(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::Node *arg1 = nullptr;   /** node */

    olua_check_cppobj(L, 1, (void **)&arg1, "cc.Node");

    // static Rect convertBoundingBoxToScreen(Node* node)
    cocos2d::Rect ret = (cocos2d::Rect)cocos2d::ui::Helper::convertBoundingBoxToScreen(arg1);
    int num_ret = manual_luacv_push_cocos2d_Rect(L, &ret);

    return num_ret;
}

static int luaopen_cocos2d_ui_Helper(lua_State *L)
{
    oluacls_class(L, "ccui.Helper", nullptr);
    oluacls_setfunc(L, "seekWidgetByTag", _cocos2d_ui_Helper_seekWidgetByTag);
    oluacls_setfunc(L, "seekWidgetByName", _cocos2d_ui_Helper_seekWidgetByName);
    oluacls_setfunc(L, "seekActionWidgetByActionTag", _cocos2d_ui_Helper_seekActionWidgetByActionTag);
    oluacls_setfunc(L, "doLayout", _cocos2d_ui_Helper_doLayout);
    oluacls_setfunc(L, "changeLayoutSystemActiveState", _cocos2d_ui_Helper_changeLayoutSystemActiveState);
    oluacls_setfunc(L, "restrictCapInsetRect", _cocos2d_ui_Helper_restrictCapInsetRect);
    oluacls_setfunc(L, "convertBoundingBoxToScreen", _cocos2d_ui_Helper_convertBoundingBoxToScreen);

    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Scale9Sprite_State(lua_State *L)
{
    oluacls_class(L, "ccui.Scale9Sprite.State", nullptr);
    oluacls_const_integer(L, "NORMAL", (lua_Integer)cocos2d::ui::Scale9Sprite::State::NORMAL);
    oluacls_const_integer(L, "GRAY", (lua_Integer)cocos2d::ui::Scale9Sprite::State::GRAY);

    olua_registerluatype<cocos2d::ui::Scale9Sprite::State>(L, "ccui.Scale9Sprite.State");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_Scale9Sprite_RenderingType(lua_State *L)
{
    oluacls_class(L, "ccui.Scale9Sprite.RenderingType", nullptr);
    oluacls_const_integer(L, "SIMPLE", (lua_Integer)cocos2d::ui::Scale9Sprite::RenderingType::SIMPLE);
    oluacls_const_integer(L, "SLICE", (lua_Integer)cocos2d::ui::Scale9Sprite::RenderingType::SLICE);

    olua_registerluatype<cocos2d::ui::Scale9Sprite::RenderingType>(L, "ccui.Scale9Sprite.RenderingType");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_Scale9Sprite_create1(lua_State *L)
{
    lua_settop(L, 0);

    // static Scale9Sprite* create()
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_create2(lua_State *L)
{
    lua_settop(L, 3);

    std::string arg1;       /** file */
    cocos2d::Rect arg2;       /** rect */
    cocos2d::Rect arg3;       /** capInsets */

    olua_check_std_string(L, 1, &arg1);
    manual_luacv_check_cocos2d_Rect(L, 2, &arg2);
    manual_luacv_check_cocos2d_Rect(L, 3, &arg3);

    // static Scale9Sprite* create(const std::string& file, const Rect& rect,  const Rect& capInsets)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::create(arg1, arg2, arg3);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_create3(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::Rect arg1;       /** capInsets */
    std::string arg2;       /** file */

    manual_luacv_check_cocos2d_Rect(L, 1, &arg1);
    olua_check_std_string(L, 2, &arg2);

    // static Scale9Sprite* create(const Rect& capInsets, const std::string& file)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::create(arg1, arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_create4(lua_State *L)
{
    lua_settop(L, 2);

    std::string arg1;       /** file */
    cocos2d::Rect arg2;       /** rect */

    olua_check_std_string(L, 1, &arg1);
    manual_luacv_check_cocos2d_Rect(L, 2, &arg2);

    // static Scale9Sprite* create(const std::string& file, const Rect& rect)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::create(arg1, arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_create5(lua_State *L)
{
    lua_settop(L, 1);

    std::string arg1;       /** file */

    olua_check_std_string(L, 1, &arg1);

    // static Scale9Sprite* create(const std::string& file)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::create(arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_create(lua_State *L)
{
    int num_args = lua_gettop(L);

    if (num_args == 0) {
        return _cocos2d_ui_Scale9Sprite_create1(L);
    }

    if (num_args == 1) {
        // if (olua_is_std_string(L, 1)) {
            return _cocos2d_ui_Scale9Sprite_create5(L);
        // }
    }

    if (num_args == 2) {
        if (manual_luacv_is_cocos2d_Rect(L, 1) && olua_is_std_string(L, 2)) {
            return _cocos2d_ui_Scale9Sprite_create3(L);
        }

        // if (olua_is_std_string(L, 1) && manual_luacv_is_cocos2d_Rect(L, 2)) {
            return _cocos2d_ui_Scale9Sprite_create4(L);
        // }
    }

    if (num_args == 3) {
        // if (olua_is_std_string(L, 1) && manual_luacv_is_cocos2d_Rect(L, 2) && manual_luacv_is_cocos2d_Rect(L, 3)) {
            return _cocos2d_ui_Scale9Sprite_create2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Scale9Sprite::create' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_createWithSpriteFrame1(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::SpriteFrame *arg1 = nullptr;   /** spriteFrame */

    olua_check_cppobj(L, 1, (void **)&arg1, "cc.SpriteFrame");

    // static Scale9Sprite* createWithSpriteFrame(SpriteFrame* spriteFrame)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::createWithSpriteFrame(arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_createWithSpriteFrame2(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::SpriteFrame *arg1 = nullptr;   /** spriteFrame */
    cocos2d::Rect arg2;       /** capInsets */

    olua_check_cppobj(L, 1, (void **)&arg1, "cc.SpriteFrame");
    manual_luacv_check_cocos2d_Rect(L, 2, &arg2);

    // static Scale9Sprite* createWithSpriteFrame(SpriteFrame* spriteFrame, const Rect& capInsets)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::createWithSpriteFrame(arg1, arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_createWithSpriteFrame(lua_State *L)
{
    int num_args = lua_gettop(L);

    if (num_args == 1) {
        // if (olua_is_cppobj(L, 1, "cc.SpriteFrame")) {
            return _cocos2d_ui_Scale9Sprite_createWithSpriteFrame1(L);
        // }
    }

    if (num_args == 2) {
        // if (olua_is_cppobj(L, 1, "cc.SpriteFrame") && manual_luacv_is_cocos2d_Rect(L, 2)) {
            return _cocos2d_ui_Scale9Sprite_createWithSpriteFrame2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Scale9Sprite::createWithSpriteFrame' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_createWithSpriteFrameName1(lua_State *L)
{
    lua_settop(L, 1);

    std::string arg1;       /** spriteFrameName */

    olua_check_std_string(L, 1, &arg1);

    // static Scale9Sprite* createWithSpriteFrameName(const std::string& spriteFrameName)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::createWithSpriteFrameName(arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_createWithSpriteFrameName2(lua_State *L)
{
    lua_settop(L, 2);

    std::string arg1;       /** spriteFrameName */
    cocos2d::Rect arg2;       /** capInsets */

    olua_check_std_string(L, 1, &arg1);
    manual_luacv_check_cocos2d_Rect(L, 2, &arg2);

    // static Scale9Sprite* createWithSpriteFrameName(const std::string& spriteFrameName, const Rect& capInsets)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)cocos2d::ui::Scale9Sprite::createWithSpriteFrameName(arg1, arg2);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_createWithSpriteFrameName(lua_State *L)
{
    int num_args = lua_gettop(L);

    if (num_args == 1) {
        // if (olua_is_std_string(L, 1)) {
            return _cocos2d_ui_Scale9Sprite_createWithSpriteFrameName1(L);
        // }
    }

    if (num_args == 2) {
        // if (olua_is_std_string(L, 1) && manual_luacv_is_cocos2d_Rect(L, 2)) {
            return _cocos2d_ui_Scale9Sprite_createWithSpriteFrameName2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Scale9Sprite::createWithSpriteFrameName' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_initWithFile1(lua_State *L)
{
    lua_settop(L, 4);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    std::string arg1;       /** file */
    cocos2d::Rect arg2;       /** rect */
    cocos2d::Rect arg3;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_std_string(L, 2, &arg1);
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);
    manual_luacv_check_cocos2d_Rect(L, 4, &arg3);

    // bool initWithFile(const std::string& file, const Rect& rect,  const Rect& capInsets)
    bool ret = (bool)self->initWithFile(arg1, arg2, arg3);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_initWithFile2(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Rect arg1;       /** capInsets */
    std::string arg2;       /** file */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    manual_luacv_check_cocos2d_Rect(L, 2, &arg1);
    olua_check_std_string(L, 3, &arg2);

    // bool initWithFile(const Rect& capInsets, const std::string& file)
    bool ret = (bool)self->initWithFile(arg1, arg2);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_initWithFile3(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    std::string arg1;       /** file */
    cocos2d::Rect arg2;       /** rect */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_std_string(L, 2, &arg1);
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);

    // bool initWithFile(const std::string& file, const Rect& rect)
    bool ret = (bool)self->initWithFile(arg1, arg2);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_initWithFile4(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    std::string arg1;       /** file */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_std_string(L, 2, &arg1);

    // bool initWithFile(const std::string& file)
    bool ret = (bool)self->initWithFile(arg1);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_initWithFile(lua_State *L)
{
    int num_args = lua_gettop(L) - 1;

    if (num_args == 1) {
        // if (olua_is_std_string(L, 2)) {
            return _cocos2d_ui_Scale9Sprite_initWithFile4(L);
        // }
    }

    if (num_args == 2) {
        if (manual_luacv_is_cocos2d_Rect(L, 2) && olua_is_std_string(L, 3)) {
            return _cocos2d_ui_Scale9Sprite_initWithFile2(L);
        }

        // if (olua_is_std_string(L, 2) && manual_luacv_is_cocos2d_Rect(L, 3)) {
            return _cocos2d_ui_Scale9Sprite_initWithFile3(L);
        // }
    }

    if (num_args == 3) {
        // if (olua_is_std_string(L, 2) && manual_luacv_is_cocos2d_Rect(L, 3) && manual_luacv_is_cocos2d_Rect(L, 4)) {
            return _cocos2d_ui_Scale9Sprite_initWithFile1(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Scale9Sprite::initWithFile' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_initWithSpriteFrame(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::SpriteFrame *arg1 = nullptr;   /** spriteFrame */
    cocos2d::Rect arg2;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.SpriteFrame");
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);

    // bool initWithSpriteFrame(SpriteFrame* spriteFrame, const Rect& capInsets)
    bool ret = (bool)self->initWithSpriteFrame(arg1, arg2);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_initWithSpriteFrameName1(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    std::string arg1;       /** spriteFrameName */
    cocos2d::Rect arg2;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_std_string(L, 2, &arg1);
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);

    // bool initWithSpriteFrameName(const std::string& spriteFrameName, const Rect& capInsets)
    bool ret = (bool)self->initWithSpriteFrameName(arg1, arg2);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_initWithSpriteFrameName2(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    std::string arg1;       /** spriteFrameName */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_std_string(L, 2, &arg1);

    // bool initWithSpriteFrameName(const std::string& spriteFrameName)
    bool ret = (bool)self->initWithSpriteFrameName(arg1);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_initWithSpriteFrameName(lua_State *L)
{
    int num_args = lua_gettop(L) - 1;

    if (num_args == 1) {
        // if (olua_is_std_string(L, 2)) {
            return _cocos2d_ui_Scale9Sprite_initWithSpriteFrameName2(L);
        // }
    }

    if (num_args == 2) {
        // if (olua_is_std_string(L, 2) && manual_luacv_is_cocos2d_Rect(L, 3)) {
            return _cocos2d_ui_Scale9Sprite_initWithSpriteFrameName1(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Scale9Sprite::initWithSpriteFrameName' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_init1(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // bool init()
    bool ret = (bool)self->init();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_init2(lua_State *L)
{
    lua_settop(L, 5);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Sprite *arg1 = nullptr;   /** sprite */
    cocos2d::Rect arg2;       /** rect */
    bool arg3 = false;   /** rotated */
    cocos2d::Rect arg4;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Sprite");
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);
    olua_check_bool(L, 4, &arg3);
    manual_luacv_check_cocos2d_Rect(L, 5, &arg4);

    // bool init(Sprite* sprite, const Rect& rect, bool rotated, const Rect& capInsets)
    bool ret = (bool)self->init(arg1, arg2, arg3, arg4);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_init3(lua_State *L)
{
    lua_settop(L, 4);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Sprite *arg1 = nullptr;   /** sprite */
    cocos2d::Rect arg2;       /** rect */
    cocos2d::Rect arg3;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Sprite");
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);
    manual_luacv_check_cocos2d_Rect(L, 4, &arg3);

    // bool init(Sprite* sprite, const Rect& rect, const Rect& capInsets)
    bool ret = (bool)self->init(arg1, arg2, arg3);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_init4(lua_State *L)
{
    lua_settop(L, 7);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Sprite *arg1 = nullptr;   /** sprite */
    cocos2d::Rect arg2;       /** rect */
    bool arg3 = false;   /** rotated */
    cocos2d::Vec2 arg4;       /** offset */
    cocos2d::Size arg5;       /** originalSize */
    cocos2d::Rect arg6;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Sprite");
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);
    olua_check_bool(L, 4, &arg3);
    auto_luacv_check_cocos2d_Vec2(L, 5, &arg4);
    auto_luacv_check_cocos2d_Size(L, 6, &arg5);
    manual_luacv_check_cocos2d_Rect(L, 7, &arg6);

    // bool init(Sprite* sprite, const Rect& rect, bool rotated, const Vec2 &offset, const Size &originalSize, const Rect& capInsets)
    bool ret = (bool)self->init(arg1, arg2, arg3, arg4, arg5, arg6);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_init(lua_State *L)
{
    int num_args = lua_gettop(L) - 1;

    if (num_args == 0) {
        return _cocos2d_ui_Scale9Sprite_init1(L);
    }

    if (num_args == 3) {
        // if (olua_is_cppobj(L, 2, "cc.Sprite") && manual_luacv_is_cocos2d_Rect(L, 3) && manual_luacv_is_cocos2d_Rect(L, 4)) {
            return _cocos2d_ui_Scale9Sprite_init3(L);
        // }
    }

    if (num_args == 4) {
        // if (olua_is_cppobj(L, 2, "cc.Sprite") && manual_luacv_is_cocos2d_Rect(L, 3) && olua_is_bool(L, 4) && manual_luacv_is_cocos2d_Rect(L, 5)) {
            return _cocos2d_ui_Scale9Sprite_init2(L);
        // }
    }

    if (num_args == 6) {
        // if (olua_is_cppobj(L, 2, "cc.Sprite") && manual_luacv_is_cocos2d_Rect(L, 3) && olua_is_bool(L, 4) && auto_luacv_is_cocos2d_Vec2(L, 5) && auto_luacv_is_cocos2d_Size(L, 6) && manual_luacv_is_cocos2d_Rect(L, 7)) {
            return _cocos2d_ui_Scale9Sprite_init4(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Scale9Sprite::init' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_resizableSpriteWithCapInsets(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Rect arg1;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    manual_luacv_check_cocos2d_Rect(L, 2, &arg1);

    // Scale9Sprite* resizableSpriteWithCapInsets(const Rect& capInsets)
    cocos2d::ui::Scale9Sprite *ret = (cocos2d::ui::Scale9Sprite *)self->resizableSpriteWithCapInsets(arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::Scale9Sprite>(L, ret, "ccui.Scale9Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_updateWithSprite1(lua_State *L)
{
    lua_settop(L, 5);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Sprite *arg1 = nullptr;   /** sprite */
    cocos2d::Rect arg2;       /** rect */
    bool arg3 = false;   /** rotated */
    cocos2d::Rect arg4;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Sprite");
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);
    olua_check_bool(L, 4, &arg3);
    manual_luacv_check_cocos2d_Rect(L, 5, &arg4);

    // bool updateWithSprite(Sprite* sprite, const Rect& rect, bool rotated, const Rect& capInsets)
    bool ret = (bool)self->updateWithSprite(arg1, arg2, arg3, arg4);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_updateWithSprite2(lua_State *L)
{
    lua_settop(L, 7);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Sprite *arg1 = nullptr;   /** sprite */
    cocos2d::Rect arg2;       /** rect */
    bool arg3 = false;   /** rotated */
    cocos2d::Vec2 arg4;       /** offset */
    cocos2d::Size arg5;       /** originalSize */
    cocos2d::Rect arg6;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.Sprite");
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);
    olua_check_bool(L, 4, &arg3);
    auto_luacv_check_cocos2d_Vec2(L, 5, &arg4);
    auto_luacv_check_cocos2d_Size(L, 6, &arg5);
    manual_luacv_check_cocos2d_Rect(L, 7, &arg6);

    // bool updateWithSprite(Sprite* sprite, const Rect& rect, bool rotated, const Vec2 &offset, const Size &originalSize, const Rect& capInsets)
    bool ret = (bool)self->updateWithSprite(arg1, arg2, arg3, arg4, arg5, arg6);
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_updateWithSprite(lua_State *L)
{
    int num_args = lua_gettop(L) - 1;

    if (num_args == 4) {
        // if (olua_is_cppobj(L, 2, "cc.Sprite") && manual_luacv_is_cocos2d_Rect(L, 3) && olua_is_bool(L, 4) && manual_luacv_is_cocos2d_Rect(L, 5)) {
            return _cocos2d_ui_Scale9Sprite_updateWithSprite1(L);
        // }
    }

    if (num_args == 6) {
        // if (olua_is_cppobj(L, 2, "cc.Sprite") && manual_luacv_is_cocos2d_Rect(L, 3) && olua_is_bool(L, 4) && auto_luacv_is_cocos2d_Vec2(L, 5) && auto_luacv_is_cocos2d_Size(L, 6) && manual_luacv_is_cocos2d_Rect(L, 7)) {
            return _cocos2d_ui_Scale9Sprite_updateWithSprite2(L);
        // }
    }

    luaL_error(L, "method 'cocos2d::ui::Scale9Sprite::updateWithSprite' not support '%d' arguments", num_args);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_setSpriteFrame(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::SpriteFrame *arg1 = nullptr;   /** spriteFrame */
    cocos2d::Rect arg2;       /** capInsets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "cc.SpriteFrame");
    manual_luacv_check_cocos2d_Rect(L, 3, &arg2);

    // void setSpriteFrame(SpriteFrame * spriteFrame, const Rect& capInsets)
    self->setSpriteFrame(arg1, arg2);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_setState(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    lua_Unsigned arg1 = 0;   /** state */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_uint(L, 2, &arg1);

    // void setState(State state)
    self->setState((cocos2d::ui::Scale9Sprite::State)arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getState(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // State getState()
    cocos2d::ui::Scale9Sprite::State ret = (cocos2d::ui::Scale9Sprite::State)self->getState();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_getOriginalSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // @unpack Size getOriginalSize()
    cocos2d::Size ret = (cocos2d::Size)self->getOriginalSize();
    int num_ret = auto_luacv_unpack_cocos2d_Size(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_setPreferredSize(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Size arg1;       /** size */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    auto_luacv_pack_cocos2d_Size(L, 2, &arg1);

    // void setPreferredSize(@pack const Size& size)
    self->setPreferredSize(arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getPreferredSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // Size getPreferredSize()
    cocos2d::Size ret = (cocos2d::Size)self->getPreferredSize();
    int num_ret = auto_luacv_push_cocos2d_Size(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_setInsetLeft(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    lua_Number arg1 = 0;   /** leftInset */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_number(L, 2, &arg1);

    // void setInsetLeft(float leftInset)
    self->setInsetLeft((float)arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getInsetLeft(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // float getInsetLeft()
    float ret = (float)self->getInsetLeft();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_setInsetTop(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    lua_Number arg1 = 0;   /** topInset */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_number(L, 2, &arg1);

    // void setInsetTop(float topInset)
    self->setInsetTop((float)arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getInsetTop(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // float getInsetTop()
    float ret = (float)self->getInsetTop();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_setInsetRight(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    lua_Number arg1 = 0;   /** rightInset */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_number(L, 2, &arg1);

    // void setInsetRight(float rightInset)
    self->setInsetRight((float)arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getInsetRight(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // float getInsetRight()
    float ret = (float)self->getInsetRight();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_setInsetBottom(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    lua_Number arg1 = 0;   /** bottomInset */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_number(L, 2, &arg1);

    // void setInsetBottom(float bottomInset)
    self->setInsetBottom((float)arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getInsetBottom(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // float getInsetBottom()
    float ret = (float)self->getInsetBottom();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_setScale9Enabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    bool arg1 = false;   /** enabled */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_bool(L, 2, &arg1);

    // void setScale9Enabled(bool enabled)
    self->setScale9Enabled(arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_isScale9Enabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // bool isScale9Enabled()
    bool ret = (bool)self->isScale9Enabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_getSprite(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // Sprite* getSprite()
    cocos2d::Sprite *ret = (cocos2d::Sprite *)self->getSprite();
    int num_ret = olua_push_cppobj<cocos2d::Sprite>(L, ret, "cc.Sprite");

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_copyTo(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::ui::Scale9Sprite *arg1 = nullptr;   /** copy */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_cppobj(L, 2, (void **)&arg1, "ccui.Scale9Sprite");

    // void copyTo(Scale9Sprite* copy)
    self->copyTo(arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_setRenderingType(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    lua_Unsigned arg1 = 0;   /** type */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    olua_check_uint(L, 2, &arg1);

    // void setRenderingType(RenderingType type)
    self->setRenderingType((cocos2d::ui::Scale9Sprite::RenderingType)arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getRenderingType(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // RenderingType getRenderingType()
    cocos2d::ui::Scale9Sprite::RenderingType ret = (cocos2d::ui::Scale9Sprite::RenderingType)self->getRenderingType();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_setCapInsets(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::Scale9Sprite *self = nullptr;
    cocos2d::Rect arg1;       /** insets */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");
    manual_luacv_check_cocos2d_Rect(L, 2, &arg1);

    // void setCapInsets(const Rect& insets)
    self->setCapInsets(arg1);

    return 0;
}

static int _cocos2d_ui_Scale9Sprite_getCapInsets(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // Rect getCapInsets()
    cocos2d::Rect ret = (cocos2d::Rect)self->getCapInsets();
    int num_ret = manual_luacv_push_cocos2d_Rect(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_Scale9Sprite_resetRender(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::Scale9Sprite *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.Scale9Sprite");

    // void resetRender()
    self->resetRender();

    return 0;
}

static int luaopen_cocos2d_ui_Scale9Sprite(lua_State *L)
{
    oluacls_class(L, "ccui.Scale9Sprite", "cc.Sprite");
    oluacls_setfunc(L, "create", _cocos2d_ui_Scale9Sprite_create);
    oluacls_setfunc(L, "createWithSpriteFrame", _cocos2d_ui_Scale9Sprite_createWithSpriteFrame);
    oluacls_setfunc(L, "createWithSpriteFrameName", _cocos2d_ui_Scale9Sprite_createWithSpriteFrameName);
    oluacls_setfunc(L, "initWithFile", _cocos2d_ui_Scale9Sprite_initWithFile);
    oluacls_setfunc(L, "initWithSpriteFrame", _cocos2d_ui_Scale9Sprite_initWithSpriteFrame);
    oluacls_setfunc(L, "initWithSpriteFrameName", _cocos2d_ui_Scale9Sprite_initWithSpriteFrameName);
    oluacls_setfunc(L, "init", _cocos2d_ui_Scale9Sprite_init);
    oluacls_setfunc(L, "resizableSpriteWithCapInsets", _cocos2d_ui_Scale9Sprite_resizableSpriteWithCapInsets);
    oluacls_setfunc(L, "updateWithSprite", _cocos2d_ui_Scale9Sprite_updateWithSprite);
    oluacls_setfunc(L, "setSpriteFrame", _cocos2d_ui_Scale9Sprite_setSpriteFrame);
    oluacls_setfunc(L, "setState", _cocos2d_ui_Scale9Sprite_setState);
    oluacls_setfunc(L, "getState", _cocos2d_ui_Scale9Sprite_getState);
    oluacls_setfunc(L, "getOriginalSize", _cocos2d_ui_Scale9Sprite_getOriginalSize);
    oluacls_setfunc(L, "setPreferredSize", _cocos2d_ui_Scale9Sprite_setPreferredSize);
    oluacls_setfunc(L, "getPreferredSize", _cocos2d_ui_Scale9Sprite_getPreferredSize);
    oluacls_setfunc(L, "setInsetLeft", _cocos2d_ui_Scale9Sprite_setInsetLeft);
    oluacls_setfunc(L, "getInsetLeft", _cocos2d_ui_Scale9Sprite_getInsetLeft);
    oluacls_setfunc(L, "setInsetTop", _cocos2d_ui_Scale9Sprite_setInsetTop);
    oluacls_setfunc(L, "getInsetTop", _cocos2d_ui_Scale9Sprite_getInsetTop);
    oluacls_setfunc(L, "setInsetRight", _cocos2d_ui_Scale9Sprite_setInsetRight);
    oluacls_setfunc(L, "getInsetRight", _cocos2d_ui_Scale9Sprite_getInsetRight);
    oluacls_setfunc(L, "setInsetBottom", _cocos2d_ui_Scale9Sprite_setInsetBottom);
    oluacls_setfunc(L, "getInsetBottom", _cocos2d_ui_Scale9Sprite_getInsetBottom);
    oluacls_setfunc(L, "setScale9Enabled", _cocos2d_ui_Scale9Sprite_setScale9Enabled);
    oluacls_setfunc(L, "isScale9Enabled", _cocos2d_ui_Scale9Sprite_isScale9Enabled);
    oluacls_setfunc(L, "getSprite", _cocos2d_ui_Scale9Sprite_getSprite);
    oluacls_setfunc(L, "copyTo", _cocos2d_ui_Scale9Sprite_copyTo);
    oluacls_setfunc(L, "setRenderingType", _cocos2d_ui_Scale9Sprite_setRenderingType);
    oluacls_setfunc(L, "getRenderingType", _cocos2d_ui_Scale9Sprite_getRenderingType);
    oluacls_setfunc(L, "setCapInsets", _cocos2d_ui_Scale9Sprite_setCapInsets);
    oluacls_setfunc(L, "getCapInsets", _cocos2d_ui_Scale9Sprite_getCapInsets);
    oluacls_setfunc(L, "resetRender", _cocos2d_ui_Scale9Sprite_resetRender);
    oluacls_property(L, "state", _cocos2d_ui_Scale9Sprite_getState, _cocos2d_ui_Scale9Sprite_setState);
    oluacls_property(L, "originalSize", _cocos2d_ui_Scale9Sprite_getOriginalSize, nullptr);
    oluacls_property(L, "insetLeft", _cocos2d_ui_Scale9Sprite_getInsetLeft, _cocos2d_ui_Scale9Sprite_setInsetLeft);
    oluacls_property(L, "insetTop", _cocos2d_ui_Scale9Sprite_getInsetTop, _cocos2d_ui_Scale9Sprite_setInsetTop);
    oluacls_property(L, "insetRight", _cocos2d_ui_Scale9Sprite_getInsetRight, _cocos2d_ui_Scale9Sprite_setInsetRight);
    oluacls_property(L, "insetBottom", _cocos2d_ui_Scale9Sprite_getInsetBottom, _cocos2d_ui_Scale9Sprite_setInsetBottom);
    oluacls_property(L, "scale9Enabled", _cocos2d_ui_Scale9Sprite_isScale9Enabled, _cocos2d_ui_Scale9Sprite_setScale9Enabled);
    oluacls_property(L, "sprite", _cocos2d_ui_Scale9Sprite_getSprite, nullptr);
    oluacls_property(L, "renderingType", _cocos2d_ui_Scale9Sprite_getRenderingType, _cocos2d_ui_Scale9Sprite_setRenderingType);

    olua_registerluatype<cocos2d::ui::Scale9Sprite>(L, "ccui.Scale9Sprite");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_LayoutParameter_Type(lua_State *L)
{
    oluacls_class(L, "ccui.LayoutParameter.Type", nullptr);
    oluacls_const_integer(L, "NONE", (lua_Integer)cocos2d::ui::LayoutParameter::Type::NONE);
    oluacls_const_integer(L, "LINEAR", (lua_Integer)cocos2d::ui::LayoutParameter::Type::LINEAR);
    oluacls_const_integer(L, "RELATIVE", (lua_Integer)cocos2d::ui::LayoutParameter::Type::RELATIVE);

    olua_registerluatype<cocos2d::ui::LayoutParameter::Type>(L, "ccui.LayoutParameter.Type");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_LayoutParameter_create(lua_State *L)
{
    lua_settop(L, 0);

    // static LayoutParameter* create()
    cocos2d::ui::LayoutParameter *ret = (cocos2d::ui::LayoutParameter *)cocos2d::ui::LayoutParameter::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::LayoutParameter>(L, ret, "ccui.LayoutParameter");

    return num_ret;
}

static int _cocos2d_ui_LayoutParameter_setMargin(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutParameter *self = nullptr;
    cocos2d::ui::Margin arg1;       /** margin */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutParameter");
    auto_luacv_check_cocos2d_ui_Margin(L, 2, &arg1);

    // void setMargin(const Margin& margin)
    self->setMargin(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutParameter_getMargin(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutParameter");

    // const Margin& getMargin()
    const cocos2d::ui::Margin &ret = (const cocos2d::ui::Margin &)self->getMargin();
    int num_ret = auto_luacv_push_cocos2d_ui_Margin(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutParameter_getLayoutType(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutParameter");

    // Type getLayoutType()
    cocos2d::ui::LayoutParameter::Type ret = (cocos2d::ui::LayoutParameter::Type)self->getLayoutType();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutParameter_clone(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutParameter");

    // LayoutParameter* clone()
    cocos2d::ui::LayoutParameter *ret = (cocos2d::ui::LayoutParameter *)self->clone();
    int num_ret = olua_push_cppobj<cocos2d::ui::LayoutParameter>(L, ret, "ccui.LayoutParameter");

    return num_ret;
}

static int _cocos2d_ui_LayoutParameter_createCloneInstance(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutParameter");

    // LayoutParameter* createCloneInstance()
    cocos2d::ui::LayoutParameter *ret = (cocos2d::ui::LayoutParameter *)self->createCloneInstance();
    int num_ret = olua_push_cppobj<cocos2d::ui::LayoutParameter>(L, ret, "ccui.LayoutParameter");

    return num_ret;
}

static int _cocos2d_ui_LayoutParameter_copyProperties(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutParameter *self = nullptr;
    cocos2d::ui::LayoutParameter *arg1 = nullptr;   /** model */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutParameter");
    olua_check_cppobj(L, 2, (void **)&arg1, "ccui.LayoutParameter");

    // void copyProperties(LayoutParameter* model)
    self->copyProperties(arg1);

    return 0;
}

static int luaopen_cocos2d_ui_LayoutParameter(lua_State *L)
{
    oluacls_class(L, "ccui.LayoutParameter", "cc.Ref");
    oluacls_setfunc(L, "create", _cocos2d_ui_LayoutParameter_create);
    oluacls_setfunc(L, "setMargin", _cocos2d_ui_LayoutParameter_setMargin);
    oluacls_setfunc(L, "getMargin", _cocos2d_ui_LayoutParameter_getMargin);
    oluacls_setfunc(L, "getLayoutType", _cocos2d_ui_LayoutParameter_getLayoutType);
    oluacls_setfunc(L, "clone", _cocos2d_ui_LayoutParameter_clone);
    oluacls_setfunc(L, "createCloneInstance", _cocos2d_ui_LayoutParameter_createCloneInstance);
    oluacls_setfunc(L, "copyProperties", _cocos2d_ui_LayoutParameter_copyProperties);
    oluacls_property(L, "margin", _cocos2d_ui_LayoutParameter_getMargin, _cocos2d_ui_LayoutParameter_setMargin);
    oluacls_property(L, "layoutType", _cocos2d_ui_LayoutParameter_getLayoutType, nullptr);

    olua_registerluatype<cocos2d::ui::LayoutParameter>(L, "ccui.LayoutParameter");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_LinearLayoutParameter_LinearGravity(lua_State *L)
{
    oluacls_class(L, "ccui.LinearLayoutParameter.LinearGravity", nullptr);
    oluacls_const_integer(L, "NONE", (lua_Integer)cocos2d::ui::LinearLayoutParameter::LinearGravity::NONE);
    oluacls_const_integer(L, "LEFT", (lua_Integer)cocos2d::ui::LinearLayoutParameter::LinearGravity::LEFT);
    oluacls_const_integer(L, "TOP", (lua_Integer)cocos2d::ui::LinearLayoutParameter::LinearGravity::TOP);
    oluacls_const_integer(L, "RIGHT", (lua_Integer)cocos2d::ui::LinearLayoutParameter::LinearGravity::RIGHT);
    oluacls_const_integer(L, "BOTTOM", (lua_Integer)cocos2d::ui::LinearLayoutParameter::LinearGravity::BOTTOM);
    oluacls_const_integer(L, "CENTER_VERTICAL", (lua_Integer)cocos2d::ui::LinearLayoutParameter::LinearGravity::CENTER_VERTICAL);
    oluacls_const_integer(L, "CENTER_HORIZONTAL", (lua_Integer)cocos2d::ui::LinearLayoutParameter::LinearGravity::CENTER_HORIZONTAL);

    olua_registerluatype<cocos2d::ui::LinearLayoutParameter::LinearGravity>(L, "ccui.LinearLayoutParameter.LinearGravity");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_LinearLayoutParameter_create(lua_State *L)
{
    lua_settop(L, 0);

    // static LinearLayoutParameter* create()
    cocos2d::ui::LinearLayoutParameter *ret = (cocos2d::ui::LinearLayoutParameter *)cocos2d::ui::LinearLayoutParameter::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::LinearLayoutParameter>(L, ret, "ccui.LinearLayoutParameter");

    return num_ret;
}

static int _cocos2d_ui_LinearLayoutParameter_setGravity(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LinearLayoutParameter *self = nullptr;
    lua_Unsigned arg1 = 0;   /** gravity */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LinearLayoutParameter");
    olua_check_uint(L, 2, &arg1);

    // void setGravity(LinearGravity gravity)
    self->setGravity((cocos2d::ui::LinearLayoutParameter::LinearGravity)arg1);

    return 0;
}

static int _cocos2d_ui_LinearLayoutParameter_getGravity(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LinearLayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LinearLayoutParameter");

    // LinearGravity getGravity()
    cocos2d::ui::LinearLayoutParameter::LinearGravity ret = (cocos2d::ui::LinearLayoutParameter::LinearGravity)self->getGravity();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int luaopen_cocos2d_ui_LinearLayoutParameter(lua_State *L)
{
    oluacls_class(L, "ccui.LinearLayoutParameter", "ccui.LayoutParameter");
    oluacls_setfunc(L, "create", _cocos2d_ui_LinearLayoutParameter_create);
    oluacls_setfunc(L, "setGravity", _cocos2d_ui_LinearLayoutParameter_setGravity);
    oluacls_setfunc(L, "getGravity", _cocos2d_ui_LinearLayoutParameter_getGravity);
    oluacls_property(L, "gravity", _cocos2d_ui_LinearLayoutParameter_getGravity, _cocos2d_ui_LinearLayoutParameter_setGravity);

    olua_registerluatype<cocos2d::ui::LinearLayoutParameter>(L, "ccui.LinearLayoutParameter");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_RelativeLayoutParameter_RelativeAlign(lua_State *L)
{
    oluacls_class(L, "ccui.RelativeLayoutParameter.RelativeAlign", nullptr);
    oluacls_const_integer(L, "NONE", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::NONE);
    oluacls_const_integer(L, "PARENT_TOP_LEFT", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_TOP_LEFT);
    oluacls_const_integer(L, "PARENT_TOP_CENTER_HORIZONTAL", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_TOP_CENTER_HORIZONTAL);
    oluacls_const_integer(L, "PARENT_TOP_RIGHT", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_TOP_RIGHT);
    oluacls_const_integer(L, "PARENT_LEFT_CENTER_VERTICAL", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_LEFT_CENTER_VERTICAL);
    oluacls_const_integer(L, "CENTER_IN_PARENT", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::CENTER_IN_PARENT);
    oluacls_const_integer(L, "PARENT_RIGHT_CENTER_VERTICAL", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_RIGHT_CENTER_VERTICAL);
    oluacls_const_integer(L, "PARENT_LEFT_BOTTOM", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_LEFT_BOTTOM);
    oluacls_const_integer(L, "PARENT_BOTTOM_CENTER_HORIZONTAL", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_BOTTOM_CENTER_HORIZONTAL);
    oluacls_const_integer(L, "PARENT_RIGHT_BOTTOM", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::PARENT_RIGHT_BOTTOM);
    oluacls_const_integer(L, "LOCATION_ABOVE_LEFTALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_ABOVE_LEFTALIGN);
    oluacls_const_integer(L, "LOCATION_ABOVE_CENTER", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_ABOVE_CENTER);
    oluacls_const_integer(L, "LOCATION_ABOVE_RIGHTALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_ABOVE_RIGHTALIGN);
    oluacls_const_integer(L, "LOCATION_LEFT_OF_TOPALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_LEFT_OF_TOPALIGN);
    oluacls_const_integer(L, "LOCATION_LEFT_OF_CENTER", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_LEFT_OF_CENTER);
    oluacls_const_integer(L, "LOCATION_LEFT_OF_BOTTOMALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_LEFT_OF_BOTTOMALIGN);
    oluacls_const_integer(L, "LOCATION_RIGHT_OF_TOPALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_RIGHT_OF_TOPALIGN);
    oluacls_const_integer(L, "LOCATION_RIGHT_OF_CENTER", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_RIGHT_OF_CENTER);
    oluacls_const_integer(L, "LOCATION_RIGHT_OF_BOTTOMALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_RIGHT_OF_BOTTOMALIGN);
    oluacls_const_integer(L, "LOCATION_BELOW_LEFTALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_BELOW_LEFTALIGN);
    oluacls_const_integer(L, "LOCATION_BELOW_CENTER", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_BELOW_CENTER);
    oluacls_const_integer(L, "LOCATION_BELOW_RIGHTALIGN", (lua_Integer)cocos2d::ui::RelativeLayoutParameter::RelativeAlign::LOCATION_BELOW_RIGHTALIGN);

    olua_registerluatype<cocos2d::ui::RelativeLayoutParameter::RelativeAlign>(L, "ccui.RelativeLayoutParameter.RelativeAlign");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_RelativeLayoutParameter_create(lua_State *L)
{
    lua_settop(L, 0);

    // static RelativeLayoutParameter* create()
    cocos2d::ui::RelativeLayoutParameter *ret = (cocos2d::ui::RelativeLayoutParameter *)cocos2d::ui::RelativeLayoutParameter::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::RelativeLayoutParameter>(L, ret, "ccui.RelativeLayoutParameter");

    return num_ret;
}

static int _cocos2d_ui_RelativeLayoutParameter_setAlign(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::RelativeLayoutParameter *self = nullptr;
    lua_Unsigned arg1 = 0;   /** align */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.RelativeLayoutParameter");
    olua_check_uint(L, 2, &arg1);

    // void setAlign(RelativeAlign align)
    self->setAlign((cocos2d::ui::RelativeLayoutParameter::RelativeAlign)arg1);

    return 0;
}

static int _cocos2d_ui_RelativeLayoutParameter_getAlign(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::RelativeLayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.RelativeLayoutParameter");

    // RelativeAlign getAlign()
    cocos2d::ui::RelativeLayoutParameter::RelativeAlign ret = (cocos2d::ui::RelativeLayoutParameter::RelativeAlign)self->getAlign();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_RelativeLayoutParameter_setRelativeToWidgetName(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::RelativeLayoutParameter *self = nullptr;
    std::string arg1;       /** name */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.RelativeLayoutParameter");
    olua_check_std_string(L, 2, &arg1);

    // void setRelativeToWidgetName(const std::string& name)
    self->setRelativeToWidgetName(arg1);

    return 0;
}

static int _cocos2d_ui_RelativeLayoutParameter_getRelativeToWidgetName(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::RelativeLayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.RelativeLayoutParameter");

    // const std::string& getRelativeToWidgetName()
    const std::string &ret = (const std::string &)self->getRelativeToWidgetName();
    int num_ret = olua_push_std_string(L, ret);

    return num_ret;
}

static int _cocos2d_ui_RelativeLayoutParameter_setRelativeName(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::RelativeLayoutParameter *self = nullptr;
    std::string arg1;       /** name */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.RelativeLayoutParameter");
    olua_check_std_string(L, 2, &arg1);

    // void setRelativeName(const std::string& name)
    self->setRelativeName(arg1);

    return 0;
}

static int _cocos2d_ui_RelativeLayoutParameter_getRelativeName(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::RelativeLayoutParameter *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.RelativeLayoutParameter");

    // const std::string& getRelativeName()
    const std::string &ret = (const std::string &)self->getRelativeName();
    int num_ret = olua_push_std_string(L, ret);

    return num_ret;
}

static int luaopen_cocos2d_ui_RelativeLayoutParameter(lua_State *L)
{
    oluacls_class(L, "ccui.RelativeLayoutParameter", "ccui.LayoutParameter");
    oluacls_setfunc(L, "create", _cocos2d_ui_RelativeLayoutParameter_create);
    oluacls_setfunc(L, "setAlign", _cocos2d_ui_RelativeLayoutParameter_setAlign);
    oluacls_setfunc(L, "getAlign", _cocos2d_ui_RelativeLayoutParameter_getAlign);
    oluacls_setfunc(L, "setRelativeToWidgetName", _cocos2d_ui_RelativeLayoutParameter_setRelativeToWidgetName);
    oluacls_setfunc(L, "getRelativeToWidgetName", _cocos2d_ui_RelativeLayoutParameter_getRelativeToWidgetName);
    oluacls_setfunc(L, "setRelativeName", _cocos2d_ui_RelativeLayoutParameter_setRelativeName);
    oluacls_setfunc(L, "getRelativeName", _cocos2d_ui_RelativeLayoutParameter_getRelativeName);
    oluacls_property(L, "align", _cocos2d_ui_RelativeLayoutParameter_getAlign, _cocos2d_ui_RelativeLayoutParameter_setAlign);
    oluacls_property(L, "relativeToWidgetName", _cocos2d_ui_RelativeLayoutParameter_getRelativeToWidgetName, _cocos2d_ui_RelativeLayoutParameter_setRelativeToWidgetName);
    oluacls_property(L, "relativeName", _cocos2d_ui_RelativeLayoutParameter_getRelativeName, _cocos2d_ui_RelativeLayoutParameter_setRelativeName);

    olua_registerluatype<cocos2d::ui::RelativeLayoutParameter>(L, "ccui.RelativeLayoutParameter");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_LayoutComponent_HorizontalEdge(lua_State *L)
{
    oluacls_class(L, "ccui.LayoutComponent.HorizontalEdge", nullptr);
    oluacls_const_integer(L, "None", (lua_Integer)cocos2d::ui::LayoutComponent::HorizontalEdge::None);
    oluacls_const_integer(L, "Left", (lua_Integer)cocos2d::ui::LayoutComponent::HorizontalEdge::Left);
    oluacls_const_integer(L, "Right", (lua_Integer)cocos2d::ui::LayoutComponent::HorizontalEdge::Right);
    oluacls_const_integer(L, "Center", (lua_Integer)cocos2d::ui::LayoutComponent::HorizontalEdge::Center);

    olua_registerluatype<cocos2d::ui::LayoutComponent::HorizontalEdge>(L, "ccui.LayoutComponent.HorizontalEdge");
    oluacls_createclassproxy(L);

    return 1;
}

static int luaopen_cocos2d_ui_LayoutComponent_VerticalEdge(lua_State *L)
{
    oluacls_class(L, "ccui.LayoutComponent.VerticalEdge", nullptr);
    oluacls_const_integer(L, "None", (lua_Integer)cocos2d::ui::LayoutComponent::VerticalEdge::None);
    oluacls_const_integer(L, "Bottom", (lua_Integer)cocos2d::ui::LayoutComponent::VerticalEdge::Bottom);
    oluacls_const_integer(L, "Top", (lua_Integer)cocos2d::ui::LayoutComponent::VerticalEdge::Top);
    oluacls_const_integer(L, "Center", (lua_Integer)cocos2d::ui::LayoutComponent::VerticalEdge::Center);

    olua_registerluatype<cocos2d::ui::LayoutComponent::VerticalEdge>(L, "ccui.LayoutComponent.VerticalEdge");
    oluacls_createclassproxy(L);

    return 1;
}

static int _cocos2d_ui_LayoutComponent_create(lua_State *L)
{
    lua_settop(L, 0);

    // static LayoutComponent* create()
    cocos2d::ui::LayoutComponent *ret = (cocos2d::ui::LayoutComponent *)cocos2d::ui::LayoutComponent::create();
    int num_ret = olua_push_cppobj<cocos2d::ui::LayoutComponent>(L, ret, "ccui.LayoutComponent");

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_bindLayoutComponent(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::Node *arg1 = nullptr;   /** node */

    olua_check_cppobj(L, 1, (void **)&arg1, "cc.Node");

    // static LayoutComponent* bindLayoutComponent(Node* node)
    cocos2d::ui::LayoutComponent *ret = (cocos2d::ui::LayoutComponent *)cocos2d::ui::LayoutComponent::bindLayoutComponent(arg1);
    int num_ret = olua_push_cppobj<cocos2d::ui::LayoutComponent>(L, ret, "ccui.LayoutComponent");

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setUsingPercentContentSize(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** isUsed */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setUsingPercentContentSize(bool isUsed)
    self->setUsingPercentContentSize(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getUsingPercentContentSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // bool getUsingPercentContentSize()
    bool ret = (bool)self->getUsingPercentContentSize();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPercentContentSize(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::LayoutComponent *self = nullptr;
    cocos2d::Vec2 arg1;       /** percent */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    auto_luacv_pack_cocos2d_Vec2(L, 2, &arg1);

    // void setPercentContentSize(@pack const Vec2 &percent)
    self->setPercentContentSize(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getPercentContentSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // @unpack Vec2 getPercentContentSize()
    cocos2d::Vec2 ret = (cocos2d::Vec2)self->getPercentContentSize();
    int num_ret = auto_luacv_unpack_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_getAnchorPosition(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // @unpack const Point& getAnchorPosition()
    const cocos2d::Point &ret = (const cocos2d::Point &)self->getAnchorPosition();
    int num_ret = auto_luacv_unpack_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setAnchorPosition(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::LayoutComponent *self = nullptr;
    cocos2d::Point arg1;       /** point */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    auto_luacv_pack_cocos2d_Vec2(L, 2, &arg1);

    // void setAnchorPosition(@pack const Point& point)
    self->setAnchorPosition(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getPosition(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // @unpack const Point& getPosition()
    const cocos2d::Point &ret = (const cocos2d::Point &)self->getPosition();
    int num_ret = auto_luacv_unpack_cocos2d_Vec2(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPosition(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::LayoutComponent *self = nullptr;
    cocos2d::Point arg1;       /** position */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    auto_luacv_pack_cocos2d_Vec2(L, 2, &arg1);

    // void setPosition(@pack const Point& position)
    self->setPosition(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_isPositionPercentXEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // bool isPositionPercentXEnabled()
    bool ret = (bool)self->isPositionPercentXEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPositionPercentXEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** isUsed */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setPositionPercentXEnabled(bool isUsed)
    self->setPositionPercentXEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getPositionPercentX(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getPositionPercentX()
    float ret = (float)self->getPositionPercentX();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPositionPercentX(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** percentMargin */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setPositionPercentX(float percentMargin)
    self->setPositionPercentX((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_isPositionPercentYEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // bool isPositionPercentYEnabled()
    bool ret = (bool)self->isPositionPercentYEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPositionPercentYEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** isUsed */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setPositionPercentYEnabled(bool isUsed)
    self->setPositionPercentYEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getPositionPercentY(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getPositionPercentY()
    float ret = (float)self->getPositionPercentY();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPositionPercentY(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** percentMargin */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setPositionPercentY(float percentMargin)
    self->setPositionPercentY((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getHorizontalEdge(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // HorizontalEdge getHorizontalEdge()
    cocos2d::ui::LayoutComponent::HorizontalEdge ret = (cocos2d::ui::LayoutComponent::HorizontalEdge)self->getHorizontalEdge();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setHorizontalEdge(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Unsigned arg1 = 0;   /** hEage */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_uint(L, 2, &arg1);

    // void setHorizontalEdge(HorizontalEdge hEage)
    self->setHorizontalEdge((cocos2d::ui::LayoutComponent::HorizontalEdge)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getVerticalEdge(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // VerticalEdge getVerticalEdge()
    cocos2d::ui::LayoutComponent::VerticalEdge ret = (cocos2d::ui::LayoutComponent::VerticalEdge)self->getVerticalEdge();
    int num_ret = olua_push_uint(L, (lua_Unsigned)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setVerticalEdge(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Unsigned arg1 = 0;   /** vEage */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_uint(L, 2, &arg1);

    // void setVerticalEdge(VerticalEdge vEage)
    self->setVerticalEdge((cocos2d::ui::LayoutComponent::VerticalEdge)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getLeftMargin(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getLeftMargin()
    float ret = (float)self->getLeftMargin();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setLeftMargin(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** margin */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setLeftMargin(float margin)
    self->setLeftMargin((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getRightMargin(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getRightMargin()
    float ret = (float)self->getRightMargin();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setRightMargin(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** margin */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setRightMargin(float margin)
    self->setRightMargin((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getTopMargin(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getTopMargin()
    float ret = (float)self->getTopMargin();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setTopMargin(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** margin */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setTopMargin(float margin)
    self->setTopMargin((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getBottomMargin(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getBottomMargin()
    float ret = (float)self->getBottomMargin();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setBottomMargin(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** margin */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setBottomMargin(float margin)
    self->setBottomMargin((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getSize(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // @unpack const Size& getSize()
    const cocos2d::Size &ret = (const cocos2d::Size &)self->getSize();
    int num_ret = auto_luacv_unpack_cocos2d_Size(L, &ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setSize(lua_State *L)
{
    lua_settop(L, 3);

    cocos2d::ui::LayoutComponent *self = nullptr;
    cocos2d::Size arg1;       /** size */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    auto_luacv_pack_cocos2d_Size(L, 2, &arg1);

    // void setSize(@pack const Size& size)
    self->setSize(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_isPercentWidthEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // bool isPercentWidthEnabled()
    bool ret = (bool)self->isPercentWidthEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPercentWidthEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** isUsed */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setPercentWidthEnabled(bool isUsed)
    self->setPercentWidthEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getSizeWidth(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getSizeWidth()
    float ret = (float)self->getSizeWidth();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setSizeWidth(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** width */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setSizeWidth(float width)
    self->setSizeWidth((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getPercentWidth(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getPercentWidth()
    float ret = (float)self->getPercentWidth();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPercentWidth(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** percentWidth */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setPercentWidth(float percentWidth)
    self->setPercentWidth((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_isPercentHeightEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // bool isPercentHeightEnabled()
    bool ret = (bool)self->isPercentHeightEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPercentHeightEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** isUsed */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setPercentHeightEnabled(bool isUsed)
    self->setPercentHeightEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getSizeHeight(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getSizeHeight()
    float ret = (float)self->getSizeHeight();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setSizeHeight(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** height */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setSizeHeight(float height)
    self->setSizeHeight((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_getPercentHeight(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // float getPercentHeight()
    float ret = (float)self->getPercentHeight();
    int num_ret = olua_push_number(L, (lua_Number)ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setPercentHeight(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    lua_Number arg1 = 0;   /** percentHeight */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_number(L, 2, &arg1);

    // void setPercentHeight(float percentHeight)
    self->setPercentHeight((float)arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_isStretchWidthEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // bool isStretchWidthEnabled()
    bool ret = (bool)self->isStretchWidthEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setStretchWidthEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** isUsed */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setStretchWidthEnabled(bool isUsed)
    self->setStretchWidthEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_isStretchHeightEnabled(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // bool isStretchHeightEnabled()
    bool ret = (bool)self->isStretchHeightEnabled();
    int num_ret = olua_push_bool(L, ret);

    return num_ret;
}

static int _cocos2d_ui_LayoutComponent_setStretchHeightEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** isUsed */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setStretchHeightEnabled(bool isUsed)
    self->setStretchHeightEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_setPercentOnlyEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** enable */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setPercentOnlyEnabled(bool enable)
    self->setPercentOnlyEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_setActiveEnabled(lua_State *L)
{
    lua_settop(L, 2);

    cocos2d::ui::LayoutComponent *self = nullptr;
    bool arg1 = false;   /** enable */

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");
    olua_check_bool(L, 2, &arg1);

    // void setActiveEnabled(bool enable)
    self->setActiveEnabled(arg1);

    return 0;
}

static int _cocos2d_ui_LayoutComponent_refreshLayout(lua_State *L)
{
    lua_settop(L, 1);

    cocos2d::ui::LayoutComponent *self = nullptr;

    olua_to_cppobj(L, 1, (void **)&self, "ccui.LayoutComponent");

    // void refreshLayout()
    self->refreshLayout();

    return 0;
}

static int luaopen_cocos2d_ui_LayoutComponent(lua_State *L)
{
    oluacls_class(L, "ccui.LayoutComponent", "cc.Component");
    oluacls_setfunc(L, "create", _cocos2d_ui_LayoutComponent_create);
    oluacls_setfunc(L, "bindLayoutComponent", _cocos2d_ui_LayoutComponent_bindLayoutComponent);
    oluacls_setfunc(L, "setUsingPercentContentSize", _cocos2d_ui_LayoutComponent_setUsingPercentContentSize);
    oluacls_setfunc(L, "getUsingPercentContentSize", _cocos2d_ui_LayoutComponent_getUsingPercentContentSize);
    oluacls_setfunc(L, "setPercentContentSize", _cocos2d_ui_LayoutComponent_setPercentContentSize);
    oluacls_setfunc(L, "getPercentContentSize", _cocos2d_ui_LayoutComponent_getPercentContentSize);
    oluacls_setfunc(L, "getAnchorPosition", _cocos2d_ui_LayoutComponent_getAnchorPosition);
    oluacls_setfunc(L, "setAnchorPosition", _cocos2d_ui_LayoutComponent_setAnchorPosition);
    oluacls_setfunc(L, "getPosition", _cocos2d_ui_LayoutComponent_getPosition);
    oluacls_setfunc(L, "setPosition", _cocos2d_ui_LayoutComponent_setPosition);
    oluacls_setfunc(L, "isPositionPercentXEnabled", _cocos2d_ui_LayoutComponent_isPositionPercentXEnabled);
    oluacls_setfunc(L, "setPositionPercentXEnabled", _cocos2d_ui_LayoutComponent_setPositionPercentXEnabled);
    oluacls_setfunc(L, "getPositionPercentX", _cocos2d_ui_LayoutComponent_getPositionPercentX);
    oluacls_setfunc(L, "setPositionPercentX", _cocos2d_ui_LayoutComponent_setPositionPercentX);
    oluacls_setfunc(L, "isPositionPercentYEnabled", _cocos2d_ui_LayoutComponent_isPositionPercentYEnabled);
    oluacls_setfunc(L, "setPositionPercentYEnabled", _cocos2d_ui_LayoutComponent_setPositionPercentYEnabled);
    oluacls_setfunc(L, "getPositionPercentY", _cocos2d_ui_LayoutComponent_getPositionPercentY);
    oluacls_setfunc(L, "setPositionPercentY", _cocos2d_ui_LayoutComponent_setPositionPercentY);
    oluacls_setfunc(L, "getHorizontalEdge", _cocos2d_ui_LayoutComponent_getHorizontalEdge);
    oluacls_setfunc(L, "setHorizontalEdge", _cocos2d_ui_LayoutComponent_setHorizontalEdge);
    oluacls_setfunc(L, "getVerticalEdge", _cocos2d_ui_LayoutComponent_getVerticalEdge);
    oluacls_setfunc(L, "setVerticalEdge", _cocos2d_ui_LayoutComponent_setVerticalEdge);
    oluacls_setfunc(L, "getLeftMargin", _cocos2d_ui_LayoutComponent_getLeftMargin);
    oluacls_setfunc(L, "setLeftMargin", _cocos2d_ui_LayoutComponent_setLeftMargin);
    oluacls_setfunc(L, "getRightMargin", _cocos2d_ui_LayoutComponent_getRightMargin);
    oluacls_setfunc(L, "setRightMargin", _cocos2d_ui_LayoutComponent_setRightMargin);
    oluacls_setfunc(L, "getTopMargin", _cocos2d_ui_LayoutComponent_getTopMargin);
    oluacls_setfunc(L, "setTopMargin", _cocos2d_ui_LayoutComponent_setTopMargin);
    oluacls_setfunc(L, "getBottomMargin", _cocos2d_ui_LayoutComponent_getBottomMargin);
    oluacls_setfunc(L, "setBottomMargin", _cocos2d_ui_LayoutComponent_setBottomMargin);
    oluacls_setfunc(L, "getSize", _cocos2d_ui_LayoutComponent_getSize);
    oluacls_setfunc(L, "setSize", _cocos2d_ui_LayoutComponent_setSize);
    oluacls_setfunc(L, "isPercentWidthEnabled", _cocos2d_ui_LayoutComponent_isPercentWidthEnabled);
    oluacls_setfunc(L, "setPercentWidthEnabled", _cocos2d_ui_LayoutComponent_setPercentWidthEnabled);
    oluacls_setfunc(L, "getSizeWidth", _cocos2d_ui_LayoutComponent_getSizeWidth);
    oluacls_setfunc(L, "setSizeWidth", _cocos2d_ui_LayoutComponent_setSizeWidth);
    oluacls_setfunc(L, "getPercentWidth", _cocos2d_ui_LayoutComponent_getPercentWidth);
    oluacls_setfunc(L, "setPercentWidth", _cocos2d_ui_LayoutComponent_setPercentWidth);
    oluacls_setfunc(L, "isPercentHeightEnabled", _cocos2d_ui_LayoutComponent_isPercentHeightEnabled);
    oluacls_setfunc(L, "setPercentHeightEnabled", _cocos2d_ui_LayoutComponent_setPercentHeightEnabled);
    oluacls_setfunc(L, "getSizeHeight", _cocos2d_ui_LayoutComponent_getSizeHeight);
    oluacls_setfunc(L, "setSizeHeight", _cocos2d_ui_LayoutComponent_setSizeHeight);
    oluacls_setfunc(L, "getPercentHeight", _cocos2d_ui_LayoutComponent_getPercentHeight);
    oluacls_setfunc(L, "setPercentHeight", _cocos2d_ui_LayoutComponent_setPercentHeight);
    oluacls_setfunc(L, "isStretchWidthEnabled", _cocos2d_ui_LayoutComponent_isStretchWidthEnabled);
    oluacls_setfunc(L, "setStretchWidthEnabled", _cocos2d_ui_LayoutComponent_setStretchWidthEnabled);
    oluacls_setfunc(L, "isStretchHeightEnabled", _cocos2d_ui_LayoutComponent_isStretchHeightEnabled);
    oluacls_setfunc(L, "setStretchHeightEnabled", _cocos2d_ui_LayoutComponent_setStretchHeightEnabled);
    oluacls_setfunc(L, "setPercentOnlyEnabled", _cocos2d_ui_LayoutComponent_setPercentOnlyEnabled);
    oluacls_setfunc(L, "setActiveEnabled", _cocos2d_ui_LayoutComponent_setActiveEnabled);
    oluacls_setfunc(L, "refreshLayout", _cocos2d_ui_LayoutComponent_refreshLayout);
    oluacls_property(L, "usingPercentContentSize", _cocos2d_ui_LayoutComponent_getUsingPercentContentSize, _cocos2d_ui_LayoutComponent_setUsingPercentContentSize);
    oluacls_property(L, "positionPercentXEnabled", _cocos2d_ui_LayoutComponent_isPositionPercentXEnabled, _cocos2d_ui_LayoutComponent_setPositionPercentXEnabled);
    oluacls_property(L, "positionPercentX", _cocos2d_ui_LayoutComponent_getPositionPercentX, _cocos2d_ui_LayoutComponent_setPositionPercentX);
    oluacls_property(L, "positionPercentYEnabled", _cocos2d_ui_LayoutComponent_isPositionPercentYEnabled, _cocos2d_ui_LayoutComponent_setPositionPercentYEnabled);
    oluacls_property(L, "positionPercentY", _cocos2d_ui_LayoutComponent_getPositionPercentY, _cocos2d_ui_LayoutComponent_setPositionPercentY);
    oluacls_property(L, "horizontalEdge", _cocos2d_ui_LayoutComponent_getHorizontalEdge, _cocos2d_ui_LayoutComponent_setHorizontalEdge);
    oluacls_property(L, "verticalEdge", _cocos2d_ui_LayoutComponent_getVerticalEdge, _cocos2d_ui_LayoutComponent_setVerticalEdge);
    oluacls_property(L, "leftMargin", _cocos2d_ui_LayoutComponent_getLeftMargin, _cocos2d_ui_LayoutComponent_setLeftMargin);
    oluacls_property(L, "rightMargin", _cocos2d_ui_LayoutComponent_getRightMargin, _cocos2d_ui_LayoutComponent_setRightMargin);
    oluacls_property(L, "topMargin", _cocos2d_ui_LayoutComponent_getTopMargin, _cocos2d_ui_LayoutComponent_setTopMargin);
    oluacls_property(L, "bottomMargin", _cocos2d_ui_LayoutComponent_getBottomMargin, _cocos2d_ui_LayoutComponent_setBottomMargin);
    oluacls_property(L, "percentWidthEnabled", _cocos2d_ui_LayoutComponent_isPercentWidthEnabled, _cocos2d_ui_LayoutComponent_setPercentWidthEnabled);
    oluacls_property(L, "sizeWidth", _cocos2d_ui_LayoutComponent_getSizeWidth, _cocos2d_ui_LayoutComponent_setSizeWidth);
    oluacls_property(L, "percentWidth", _cocos2d_ui_LayoutComponent_getPercentWidth, _cocos2d_ui_LayoutComponent_setPercentWidth);
    oluacls_property(L, "percentHeightEnabled", _cocos2d_ui_LayoutComponent_isPercentHeightEnabled, _cocos2d_ui_LayoutComponent_setPercentHeightEnabled);
    oluacls_property(L, "sizeHeight", _cocos2d_ui_LayoutComponent_getSizeHeight, _cocos2d_ui_LayoutComponent_setSizeHeight);
    oluacls_property(L, "percentHeight", _cocos2d_ui_LayoutComponent_getPercentHeight, _cocos2d_ui_LayoutComponent_setPercentHeight);
    oluacls_property(L, "stretchWidthEnabled", _cocos2d_ui_LayoutComponent_isStretchWidthEnabled, _cocos2d_ui_LayoutComponent_setStretchWidthEnabled);
    oluacls_property(L, "stretchHeightEnabled", _cocos2d_ui_LayoutComponent_isStretchHeightEnabled, _cocos2d_ui_LayoutComponent_setStretchHeightEnabled);

    olua_registerluatype<cocos2d::ui::LayoutComponent>(L, "ccui.LayoutComponent");
    oluacls_createclassproxy(L);

    return 1;
}

int luaopen_cocos2d_ui(lua_State *L)
{
    olua_require(L, "ccui.Widget.FocusDirection", luaopen_cocos2d_ui_Widget_FocusDirection);
    olua_require(L, "ccui.Widget.PositionType", luaopen_cocos2d_ui_Widget_PositionType);
    olua_require(L, "ccui.Widget.SizeType", luaopen_cocos2d_ui_Widget_SizeType);
    olua_require(L, "ccui.Widget.TouchEventType", luaopen_cocos2d_ui_Widget_TouchEventType);
    olua_require(L, "ccui.Widget.TextureResType", luaopen_cocos2d_ui_Widget_TextureResType);
    olua_require(L, "ccui.Widget.BrightStyle", luaopen_cocos2d_ui_Widget_BrightStyle);
    olua_require(L, "ccui.Widget", luaopen_cocos2d_ui_Widget);
    olua_require(L, "ccui.Helper", luaopen_cocos2d_ui_Helper);
    olua_require(L, "ccui.Scale9Sprite.State", luaopen_cocos2d_ui_Scale9Sprite_State);
    olua_require(L, "ccui.Scale9Sprite.RenderingType", luaopen_cocos2d_ui_Scale9Sprite_RenderingType);
    olua_require(L, "ccui.Scale9Sprite", luaopen_cocos2d_ui_Scale9Sprite);
    olua_require(L, "ccui.LayoutParameter.Type", luaopen_cocos2d_ui_LayoutParameter_Type);
    olua_require(L, "ccui.LayoutParameter", luaopen_cocos2d_ui_LayoutParameter);
    olua_require(L, "ccui.LinearLayoutParameter.LinearGravity", luaopen_cocos2d_ui_LinearLayoutParameter_LinearGravity);
    olua_require(L, "ccui.LinearLayoutParameter", luaopen_cocos2d_ui_LinearLayoutParameter);
    olua_require(L, "ccui.RelativeLayoutParameter.RelativeAlign", luaopen_cocos2d_ui_RelativeLayoutParameter_RelativeAlign);
    olua_require(L, "ccui.RelativeLayoutParameter", luaopen_cocos2d_ui_RelativeLayoutParameter);
    olua_require(L, "ccui.LayoutComponent.HorizontalEdge", luaopen_cocos2d_ui_LayoutComponent_HorizontalEdge);
    olua_require(L, "ccui.LayoutComponent.VerticalEdge", luaopen_cocos2d_ui_LayoutComponent_VerticalEdge);
    olua_require(L, "ccui.LayoutComponent", luaopen_cocos2d_ui_LayoutComponent);
    return 0;
}
