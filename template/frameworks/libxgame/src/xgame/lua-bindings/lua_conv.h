//
// generated by olua
//
#ifndef __AUTO_GEN_LUA_CONV_H__
#define __AUTO_GEN_LUA_CONV_H__

#include "xgame/xlua.h"
#include "lua.hpp"

#include "cocos2d.h"

// cocos2d::Vec2
int auto_luacv_push_cocos2d_Vec2(lua_State *L, const cocos2d::Vec2 *value);
void auto_luacv_check_cocos2d_Vec2(lua_State *L, int idx, cocos2d::Vec2 *value);
void auto_luacv_opt_cocos2d_Vec2(lua_State *L, int idx, cocos2d::Vec2 *value, const cocos2d::Vec2 &def);
void auto_luacv_pack_cocos2d_Vec2(lua_State *L, int idx, cocos2d::Vec2 *value);
int auto_luacv_unpack_cocos2d_Vec2(lua_State *L, const cocos2d::Vec2 *value);
bool auto_luacv_is_cocos2d_Vec2(lua_State *L, int idx);

// cocos2d::Vec3
int auto_luacv_push_cocos2d_Vec3(lua_State *L, const cocos2d::Vec3 *value);
void auto_luacv_check_cocos2d_Vec3(lua_State *L, int idx, cocos2d::Vec3 *value);
void auto_luacv_opt_cocos2d_Vec3(lua_State *L, int idx, cocos2d::Vec3 *value, const cocos2d::Vec3 &def);
void auto_luacv_pack_cocos2d_Vec3(lua_State *L, int idx, cocos2d::Vec3 *value);
int auto_luacv_unpack_cocos2d_Vec3(lua_State *L, const cocos2d::Vec3 *value);
bool auto_luacv_is_cocos2d_Vec3(lua_State *L, int idx);

// cocos2d::Vec4
int auto_luacv_push_cocos2d_Vec4(lua_State *L, const cocos2d::Vec4 *value);
void auto_luacv_check_cocos2d_Vec4(lua_State *L, int idx, cocos2d::Vec4 *value);
void auto_luacv_opt_cocos2d_Vec4(lua_State *L, int idx, cocos2d::Vec4 *value, const cocos2d::Vec4 &def);
void auto_luacv_pack_cocos2d_Vec4(lua_State *L, int idx, cocos2d::Vec4 *value);
int auto_luacv_unpack_cocos2d_Vec4(lua_State *L, const cocos2d::Vec4 *value);
bool auto_luacv_is_cocos2d_Vec4(lua_State *L, int idx);

// cocos2d::Size
int auto_luacv_push_cocos2d_Size(lua_State *L, const cocos2d::Size *value);
void auto_luacv_check_cocos2d_Size(lua_State *L, int idx, cocos2d::Size *value);
void auto_luacv_opt_cocos2d_Size(lua_State *L, int idx, cocos2d::Size *value, const cocos2d::Size &def);
void auto_luacv_pack_cocos2d_Size(lua_State *L, int idx, cocos2d::Size *value);
int auto_luacv_unpack_cocos2d_Size(lua_State *L, const cocos2d::Size *value);
bool auto_luacv_is_cocos2d_Size(lua_State *L, int idx);

// cocos2d::Color4F
int auto_luacv_push_cocos2d_Color4F(lua_State *L, const cocos2d::Color4F *value);
void auto_luacv_check_cocos2d_Color4F(lua_State *L, int idx, cocos2d::Color4F *value);
void auto_luacv_opt_cocos2d_Color4F(lua_State *L, int idx, cocos2d::Color4F *value, const cocos2d::Color4F &def);
void auto_luacv_pack_cocos2d_Color4F(lua_State *L, int idx, cocos2d::Color4F *value);
int auto_luacv_unpack_cocos2d_Color4F(lua_State *L, const cocos2d::Color4F *value);
bool auto_luacv_is_cocos2d_Color4F(lua_State *L, int idx);

// cocos2d::Texture2D::TexParams
int auto_luacv_push_cocos2d_Texture2D_TexParams(lua_State *L, const cocos2d::Texture2D::TexParams *value);
void auto_luacv_check_cocos2d_Texture2D_TexParams(lua_State *L, int idx, cocos2d::Texture2D::TexParams *value);
void auto_luacv_opt_cocos2d_Texture2D_TexParams(lua_State *L, int idx, cocos2d::Texture2D::TexParams *value, const cocos2d::Texture2D::TexParams &def);
void auto_luacv_pack_cocos2d_Texture2D_TexParams(lua_State *L, int idx, cocos2d::Texture2D::TexParams *value);
int auto_luacv_unpack_cocos2d_Texture2D_TexParams(lua_State *L, const cocos2d::Texture2D::TexParams *value);
bool auto_luacv_is_cocos2d_Texture2D_TexParams(lua_State *L, int idx);

// cocos2d::Uniform
int auto_luacv_push_cocos2d_Uniform(lua_State *L, const cocos2d::Uniform *value);
void auto_luacv_check_cocos2d_Uniform(lua_State *L, int idx, cocos2d::Uniform *value);
void auto_luacv_opt_cocos2d_Uniform(lua_State *L, int idx, cocos2d::Uniform *value, const cocos2d::Uniform &def);
void auto_luacv_pack_cocos2d_Uniform(lua_State *L, int idx, cocos2d::Uniform *value);
int auto_luacv_unpack_cocos2d_Uniform(lua_State *L, const cocos2d::Uniform *value);
bool auto_luacv_is_cocos2d_Uniform(lua_State *L, int idx);

// cocos2d::VertexAttrib
int auto_luacv_push_cocos2d_VertexAttrib(lua_State *L, const cocos2d::VertexAttrib *value);
void auto_luacv_check_cocos2d_VertexAttrib(lua_State *L, int idx, cocos2d::VertexAttrib *value);
void auto_luacv_opt_cocos2d_VertexAttrib(lua_State *L, int idx, cocos2d::VertexAttrib *value, const cocos2d::VertexAttrib &def);
void auto_luacv_pack_cocos2d_VertexAttrib(lua_State *L, int idx, cocos2d::VertexAttrib *value);
int auto_luacv_unpack_cocos2d_VertexAttrib(lua_State *L, const cocos2d::VertexAttrib *value);
bool auto_luacv_is_cocos2d_VertexAttrib(lua_State *L, int idx);

// cocos2d::experimental::Viewport
int auto_luacv_push_cocos2d_experimental_Viewport(lua_State *L, const cocos2d::experimental::Viewport *value);
void auto_luacv_check_cocos2d_experimental_Viewport(lua_State *L, int idx, cocos2d::experimental::Viewport *value);
void auto_luacv_opt_cocos2d_experimental_Viewport(lua_State *L, int idx, cocos2d::experimental::Viewport *value, const cocos2d::experimental::Viewport &def);
void auto_luacv_pack_cocos2d_experimental_Viewport(lua_State *L, int idx, cocos2d::experimental::Viewport *value);
int auto_luacv_unpack_cocos2d_experimental_Viewport(lua_State *L, const cocos2d::experimental::Viewport *value);
bool auto_luacv_is_cocos2d_experimental_Viewport(lua_State *L, int idx);

// cocos2d::Quaternion
int auto_luacv_push_cocos2d_Quaternion(lua_State *L, const cocos2d::Quaternion *value);
void auto_luacv_check_cocos2d_Quaternion(lua_State *L, int idx, cocos2d::Quaternion *value);
void auto_luacv_opt_cocos2d_Quaternion(lua_State *L, int idx, cocos2d::Quaternion *value, const cocos2d::Quaternion &def);
void auto_luacv_pack_cocos2d_Quaternion(lua_State *L, int idx, cocos2d::Quaternion *value);
int auto_luacv_unpack_cocos2d_Quaternion(lua_State *L, const cocos2d::Quaternion *value);
bool auto_luacv_is_cocos2d_Quaternion(lua_State *L, int idx);

// cocos2d::AffineTransform
int auto_luacv_push_cocos2d_AffineTransform(lua_State *L, const cocos2d::AffineTransform *value);
void auto_luacv_check_cocos2d_AffineTransform(lua_State *L, int idx, cocos2d::AffineTransform *value);
void auto_luacv_opt_cocos2d_AffineTransform(lua_State *L, int idx, cocos2d::AffineTransform *value, const cocos2d::AffineTransform &def);
void auto_luacv_pack_cocos2d_AffineTransform(lua_State *L, int idx, cocos2d::AffineTransform *value);
int auto_luacv_unpack_cocos2d_AffineTransform(lua_State *L, const cocos2d::AffineTransform *value);
bool auto_luacv_is_cocos2d_AffineTransform(lua_State *L, int idx);

// GLContextAttrs
int auto_luacv_push_GLContextAttrs(lua_State *L, const GLContextAttrs *value);
void auto_luacv_check_GLContextAttrs(lua_State *L, int idx, GLContextAttrs *value);
void auto_luacv_opt_GLContextAttrs(lua_State *L, int idx, GLContextAttrs *value, const GLContextAttrs &def);
void auto_luacv_pack_GLContextAttrs(lua_State *L, int idx, GLContextAttrs *value);
int auto_luacv_unpack_GLContextAttrs(lua_State *L, const GLContextAttrs *value);
bool auto_luacv_is_GLContextAttrs(lua_State *L, int idx);

// cocos2d::Tex2F
int auto_luacv_push_cocos2d_Tex2F(lua_State *L, const cocos2d::Tex2F *value);
void auto_luacv_check_cocos2d_Tex2F(lua_State *L, int idx, cocos2d::Tex2F *value);
void auto_luacv_opt_cocos2d_Tex2F(lua_State *L, int idx, cocos2d::Tex2F *value, const cocos2d::Tex2F &def);
void auto_luacv_pack_cocos2d_Tex2F(lua_State *L, int idx, cocos2d::Tex2F *value);
int auto_luacv_unpack_cocos2d_Tex2F(lua_State *L, const cocos2d::Tex2F *value);
bool auto_luacv_is_cocos2d_Tex2F(lua_State *L, int idx);

// cocos2d::T2F_Quad
int auto_luacv_push_cocos2d_T2F_Quad(lua_State *L, const cocos2d::T2F_Quad *value);
void auto_luacv_check_cocos2d_T2F_Quad(lua_State *L, int idx, cocos2d::T2F_Quad *value);
bool auto_luacv_is_cocos2d_T2F_Quad(lua_State *L, int idx);

// cocos2d::TTFConfig
int auto_luacv_push_cocos2d_TTFConfig(lua_State *L, const cocos2d::TTFConfig *value);
void auto_luacv_check_cocos2d_TTFConfig(lua_State *L, int idx, cocos2d::TTFConfig *value);
bool auto_luacv_is_cocos2d_TTFConfig(lua_State *L, int idx);

// cocos2d::BlendFunc
int auto_luacv_push_cocos2d_BlendFunc(lua_State *L, const cocos2d::BlendFunc *value);
void auto_luacv_check_cocos2d_BlendFunc(lua_State *L, int idx, cocos2d::BlendFunc *value);
void auto_luacv_opt_cocos2d_BlendFunc(lua_State *L, int idx, cocos2d::BlendFunc *value, const cocos2d::BlendFunc &def);
void auto_luacv_pack_cocos2d_BlendFunc(lua_State *L, int idx, cocos2d::BlendFunc *value);
int auto_luacv_unpack_cocos2d_BlendFunc(lua_State *L, const cocos2d::BlendFunc *value);
bool auto_luacv_is_cocos2d_BlendFunc(lua_State *L, int idx);

#endif