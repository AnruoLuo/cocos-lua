local cls = class()
cls.CPPCLS = "cocos2d::FileUtils"
cls.LUACLS = "cc.FileUtils"
cls.funcs [[
    static FileUtils* getInstance()
    static void destroyInstance()
    static void setDelegate(FileUtils *delegate)
    void purgeCachedEntries()
    std::string getStringFromFile(const std::string& filename)
    Data getDataFromFile(const std::string& filename)
    // virtual Status getContents(const std::string& filename, ResizableBuffer* buffer) const;
    // const unsigned char* getFileDataFromZip(const std::string& zipFilePath, const std::string& filename, ssize_t *size)
    std::string fullPathForFilename(const std::string &filename)
    void loadFilenameLookupDictionaryFromFile(const std::string &filename)
    // void setFilenameLookupDictionary(const ValueMap& filenameLookupDict)
    std::string fullPathFromRelativeFile(const std::string &filename, const std::string &relativeFile)
    // void setSearchResolutionsOrder(const std::vector<std::string>& searchResolutionsOrder)
    void addSearchResolutionsOrder(const std::string &order,const bool front=false)
    // const std::vector<std::string> getSearchResolutionsOrder()
    // void setSearchPaths(const std::vector<std::string>& searchPaths)
    const std::string getDefaultResourceRootPath()
    void setDefaultResourceRootPath(const std::string& path)
    void addSearchPath(const std::string & path, const bool front=false)
    // const std::vector<std::string> getSearchPaths()
    // const std::vector<std::string> getOriginalSearchPaths()
    std::string getWritablePath()
    void setWritablePath(const std::string& writablePath)
    void setPopupNotify(bool notify)
    bool isPopupNotify()
    // ValueMap getValueMapFromFile(const std::string& filename)
    // ValueMap getValueMapFromData(const char* filedata, int filesize)
    // bool writeToFile(const ValueMap& dict, const std::string& fullPath)
    bool writeStringToFile(const std::string& dataStr, const std::string& fullPath)
    // bool writeDataToFile(const Data& data, const std::string& fullPath)
    // bool writeValueMapToFile(const ValueMap& dict, const std::string& fullPath)
    // bool writeValueVectorToFile(const ValueVector& vecData, const std::string& fullPath)
    std::string getSuitableFOpen(const std::string& filenameUtf8)
    // ValueVector getValueVectorFromFile(const std::string& filename)
    bool isFileExist(const std::string& filename)
    std::string getFileExtension(const std::string& filePath)
    bool isAbsolutePath(const std::string& path)
    bool isDirectoryExist(const std::string& dirPath)
    bool createDirectory(const std::string& dirPath)
    bool removeDirectory(const std::string& dirPath)
    bool removeFile(const std::string &filepath)
    bool renameFile(const std::string &path, const std::string &oldname, const std::string &name)
    bool renameFile(const std::string &oldfullpath, const std::string &newfullpath)
    long getFileSize(const std::string &filepath)
    // std::vector<std::string> listFiles(const std::string& dirPath)
    // void listFilesRecursively(const std::string& dirPath, std::vector<std::string> *files)
    // const std::unordered_map<std::string, std::string> getFullPathCache()
    std::string getNewFilename(const std::string &filename)
]]

return cls