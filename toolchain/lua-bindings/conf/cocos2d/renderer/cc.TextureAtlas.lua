local cls = class()
cls.CPPCLS = "cocos2d::TextureAtlas"
cls.LUACLS = "cc.TextureAtlas"
cls.SUPERCLS = "cc.Ref"
cls.funcs([[
    // static TextureAtlas* create(const std::string& file , ssize_t capacity)
    // void updateQuad(V3F_C4B_T2F_Quad* quad, ssize_t index)
    // void insertQuad(V3F_C4B_T2F_Quad* quad, ssize_t index)
    // void insertQuads(V3F_C4B_T2F_Quad* quads, ssize_t index, ssize_t amount)
    // void insertQuadFromIndex(ssize_t fromIndex, ssize_t newIndex)
    // void removeQuadAtIndex(ssize_t index)
    // void removeQuadsAtIndex(ssize_t index, ssize_t amount)
    // void removeAllQuads()
    // bool resizeCapacity(ssize_t capacity)
    // void increaseTotalQuadsWith(ssize_t amount)
    // void moveQuadsFromIndex(ssize_t oldIndex, ssize_t amount, ssize_t newIndex)
    // void moveQuadsFromIndex(ssize_t index, ssize_t newIndex)
    // void fillWithEmptyQuadsFromIndex(ssize_t index, ssize_t amount)
    // void drawNumberOfQuads(ssize_t n)
    // void drawNumberOfQuads(ssize_t numberOfQuads, ssize_t start)
    // void drawQuads()
    // void listenRendererRecreated(EventCustom* event)
    // bool isDirty()
    // void setDirty(bool bDirty)
    // virtual std::string getDescription()
    // ssize_t getTotalQuads()
    // ssize_t getCapacity()
    // Texture2D* getTexture()
    // void setTexture(Texture2D* texture)
    // V3F_C4B_T2F_Quad* getQuads()
    // void setQuads(V3F_C4B_T2F_Quad* quads)
]])
return cls